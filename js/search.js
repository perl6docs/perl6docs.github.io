//DO NOT EDIT generated by /home/jmerelo/progs/forks/perl6/Perl6-Documentable/site#sources/ABABC1B7AB9DC3A545133EEF89D39B06C31EDFE5 (Documentable::DocPage::Factory):133
var current_search = "";

$(function(){
  $.widget( "custom.catcomplete", $.ui.autocomplete, {
    _create: function() {
      this._super();
      this.widget().menu( "option", "items", "> :not(.ui-autocomplete-category)" );
    },
    _renderItem: function( ul, item) {
        var regex = new RegExp('('
            + current_search.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&')
            + ')', 'ig');
        var text = item.label.replace(regex, '<b>$1</b>');
        return $( "<li>" )
            .append( $( "<div>" ).html(text) )
            .appendTo( ul );
    },
    _renderMenu: function( ul, items ) {
      var that = this,
      currentCategory = "";
      function sortBy(a, b) {
        // We want to place 5to6 docs to the end of the list.
        // See if either a or b are in 5to6 category.
        var isp5a = false, isp5b = false;
        if ( a.category.substr(0,4) == '5to6' ) { isp5a = true; }
        if ( b.category.substr(0,4) == '5to6' ) { isp5b = true; }

        // If one of the categories is a 5to6 but other isn't,
        // move 5to6 to be last
        if ( isp5a  && !isp5b ) {return  1}
        if ( !isp5a && isp5b  ) {return -1}

        // Sort by category alphabetically; 5to6 items would both have
        // the same category if we reached this point and category sort
        // will happen only on non-5to6 items
        var a_cat = a.category.toLowerCase();
        var b_cat = b.category.toLowerCase();
        if ( a_cat < b_cat ) {return -1}
        if ( a_cat > b_cat ) {return  1}

        // We reach this point when categories are the same; so
        // we sort items by value

        var a_val = a.value.toLowerCase();
        var b_val = b.value.toLowerCase();

        // exact matches preferred
        if ( a_val == current_search) {return -1}
        if ( b_val == current_search) {return  1}

        var a_sw = a_val.startsWith(current_search);
        var b_sw = b_val.startsWith(current_search);
        // initial matches preferred
        if (a_sw && !b_sw) { return -1}
        if (b_sw && !a_sw) { return  1}

        // default
        if ( a_val < b_val ) {return -1}
        if ( a_val > b_val ) {return  1}

        return 0;
      }
      var sortedItems = items.sort(sortBy);
      var keywords = $("#query").val();
      sortedItems.push({
          category: 'Site Search',
          label: "Search the entire site for " + keywords,
          value: keywords,
          url: siteSearchUrl( keywords )
      });
      $.each( sortedItems, function( index, item ) {
        var li;
        if ( item.category != currentCategory ) {
          ul.append( "<li class='ui-autocomplete-category'>" + item.category + "</li>" );
          currentCategory = item.category;
        }
        li = that._renderItemData( ul, item );
        if ( item.category ) {
          li.attr( "aria-label", item.category + " : " + item.label );
        }
      });
    }
  });
  $("#query").attr('placeholder', 'üîç').catcomplete({
      response: function( e, ui ) {
        if ( ! ui.content.length ) {
            $('#search').addClass('not-found')
                .find('#try-web-search').attr(
                    'href', siteSearchUrl( $("#query").val() )
                );
        }
        else {
            $('#search').removeClass('not-found')
        }
      },
      open: function() {
        var ui_el = $('.ui-autocomplete');
        if ( ui_el.offset().left < 0 ) {
            ui_el.css({left: 0})
        }
      },
      position: { my: "right top", at: "right bottom", of: "#search div" },
      source: function(request, response) {
          var items = [
              {
                  category: "Syntax",
                  value: "# single-line comment",
                  url: "/language/syntax#Single-line_comments"
              }, {
                  category: "Syntax",
                  value: "#` multi-line comment",
                  url: "/language/syntax#Multi-line_/_embedded_comments"
              }, {
                  category: "Signature",
                  value: ";; (long name)",
                  url: "/type/Signature#index-entry-Long_Names"
              }, { category: "class", value: "Int", url: "/type/Int" }
,
{ category: "class", value: "Junction", url: "/type/Junction" }
,
{ category: "class", value: "Numeric", url: "/type/Numeric" }
,
{ category: "class", value: "RatStr", url: "/type/RatStr" }
,
{ category: "class", value: "Supplier", url: "/type/Supplier" }
,
{ category: "class", value: "Code", url: "/type/Code" }
,
{ category: "role", value: "Scheduler", url: "/type/Scheduler" }
,
{ category: "class", value: "NFKC", url: "/type/NFKC" }
,
{ category: "class", value: "Submethod", url: "/type/Submethod" }
,
{ category: "class", value: "atomicint", url: "/type/atomicint" }
,
{ category: "role", value: "Baggy", url: "/type/Baggy" }
,
{ category: "class", value: "Variable", url: "/type/Variable" }
,
{ category: "class", value: "Mu", url: "/type/Mu" }
,
{ category: "role", value: "Setty", url: "/type/Setty" }
,
{ category: "class", value: "Channel", url: "/type/Channel" }
,
{ category: "class", value: "Backtrace", url: "/type/Backtrace" }
,
{ category: "class", value: "Perl", url: "/type/Perl" }
,
{ category: "class", value: "ComplexStr", url: "/type/ComplexStr" }
,
{ category: "class", value: "StrDistance", url: "/type/StrDistance" }
,
{ category: "role", value: "Positional", url: "/type/Positional" }
,
{ category: "class", value: "Num", url: "/type/Num" }
,
{ category: "class", value: "UInt", url: "/type/UInt" }
,
{ category: "class", value: "ThreadPoolScheduler", url: "/type/ThreadPoolScheduler" }
,
{ category: "class", value: "Parameter", url: "/type/Parameter" }
,
{ category: "class", value: "IntStr", url: "/type/IntStr" }
,
{ category: "class", value: "Range", url: "/type/Range" }
,
{ category: "class", value: "Bag", url: "/type/Bag" }
,
{ category: "class", value: "Rat", url: "/type/Rat" }
,
{ category: "class", value: "MixHash", url: "/type/MixHash" }
,
{ category: "role", value: "Stringy", url: "/type/Stringy" }
,
{ category: "class", value: "Nil", url: "/type/Nil" }
,
{ category: "enum", value: "Bool", url: "/type/Bool" }
,
{ category: "class", value: "Mix", url: "/type/Mix" }
,
{ category: "class", value: "Thread", url: "/type/Thread" }
,
{ category: "class", value: "Telemetry", url: "/type/Telemetry" }
,
{ category: "class", value: "CallFrame", url: "/type/CallFrame" }
,
{ category: "class", value: "ObjAt", url: "/type/ObjAt" }
,
{ category: "role", value: "Rational", url: "/type/Rational" }
,
{ category: "class", value: "Cool", url: "/type/Cool" }
,
{ category: "class", value: "Routine", url: "/type/Routine" }
,
{ category: "role", value: "Buf", url: "/type/Buf" }
,
{ category: "role", value: "Dateish", url: "/type/Dateish" }
,
{ category: "class", value: "Scalar", url: "/type/Scalar" }
,
{ category: "class", value: "VM", url: "/type/VM" }
,
{ category: "class", value: "Compiler", url: "/type/Compiler" }
,
{ category: "class", value: "Kernel", url: "/type/Kernel" }
,
{ category: "class", value: "HyperWhatever", url: "/type/HyperWhatever" }
,
{ category: "class", value: "Attribute", url: "/type/Attribute" }
,
{ category: "class", value: "Block", url: "/type/Block" }
,
{ category: "class", value: "Collation", url: "/type/Collation" }
,
{ category: "role", value: "Encoding", url: "/type/Encoding" }
,
{ category: "class", value: "Grammar", url: "/type/Grammar" }
,
{ category: "class", value: "Duration", url: "/type/Duration" }
,
{ category: "class", value: "Array", url: "/type/Array" }
,
{ category: "class", value: "Complex", url: "/type/Complex" }
,
{ category: "role", value: "Enumeration", url: "/type/Enumeration" }
,
{ category: "class", value: "RaceSeq", url: "/type/RaceSeq" }
,
{ category: "role", value: "Iterable", url: "/type/Iterable" }
,
{ category: "class", value: "Promise", url: "/type/Promise" }
,
{ category: "class", value: "ForeignCode", url: "/type/ForeignCode" }
,
{ category: "class", value: "CompUnit", url: "/type/CompUnit" }
,
{ category: "enum", value: "Endian", url: "/type/Endian" }
,
{ category: "class", value: "Distro", url: "/type/Distro" }
,
{ category: "class", value: "HyperSeq", url: "/type/HyperSeq" }
,
{ category: "class", value: "Version", url: "/type/Version" }
,
{ category: "class", value: "Lock", url: "/type/Lock" }
,
{ category: "class", value: "Date", url: "/type/Date" }
,
{ category: "class", value: "Supply", url: "/type/Supply" }
,
{ category: "role", value: "Mixy", url: "/type/Mixy" }
,
{ category: "role", value: "Systemic", url: "/type/Systemic" }
,
{ category: "class", value: "Stash", url: "/type/Stash" }
,
{ category: "role", value: "Distribution", url: "/type/Distribution" }
,
{ category: "class", value: "Any", url: "/type/Any" }
,
{ category: "class", value: "SetHash", url: "/type/SetHash" }
,
{ category: "class", value: "Macro", url: "/type/Macro" }
,
{ category: "class", value: "Map", url: "/type/Map" }
,
{ category: "role", value: "PredictiveIterator", url: "/type/PredictiveIterator" }
,
{ category: "class", value: "ValueObjAt", url: "/type/ValueObjAt" }
,
{ category: "class", value: "Label", url: "/type/Label" }
,
{ category: "class", value: "Pair", url: "/type/Pair" }
,
{ category: "class", value: "Hash", url: "/type/Hash" }
,
{ category: "class", value: "FatRat", url: "/type/FatRat" }
,
{ category: "role", value: "Iterator", url: "/type/Iterator" }
,
{ category: "class", value: "Instant", url: "/type/Instant" }
,
{ category: "role", value: "QuantHash", url: "/type/QuantHash" }
,
{ category: "role", value: "Sequence", url: "/type/Sequence" }
,
{ category: "class", value: "Method", url: "/type/Method" }
,
{ category: "class", value: "AST", url: "/type/AST" }
,
{ category: "class", value: "CurrentThreadScheduler", url: "/type/CurrentThreadScheduler" }
,
{ category: "class", value: "Semaphore", url: "/type/Semaphore" }
,
{ category: "class", value: "utf8", url: "/type/utf8" }
,
{ category: "class", value: "DateTime", url: "/type/DateTime" }
,
{ category: "class", value: "Capture", url: "/type/Capture" }
,
{ category: "class", value: "Seq", url: "/type/Seq" }
,
{ category: "class", value: "Proxy", url: "/type/Proxy" }
,
{ category: "class", value: "Sub", url: "/type/Sub" }
,
{ category: "class", value: "Failure", url: "/type/Failure" }
,
{ category: "class", value: "WhateverCode", url: "/type/WhateverCode" }
,
{ category: "class", value: "Str", url: "/type/Str" }
,
{ category: "module", value: "Test", url: "/type/Test" }
,
{ category: "role", value: "Callable", url: "/type/Callable" }
,
{ category: "class", value: "Signature", url: "/type/Signature" }
,
{ category: "class", value: "Proc", url: "/type/Proc" }
,
{ category: "class", value: "Cancellation", url: "/type/Cancellation" }
,
{ category: "class", value: "NFC", url: "/type/NFC" }
,
{ category: "class", value: "Uni", url: "/type/Uni" }
,
{ category: "class", value: "Whatever", url: "/type/Whatever" }
,
{ category: "class", value: "Tap", url: "/type/Tap" }
,
{ category: "class", value: "Slip", url: "/type/Slip" }
,
{ category: "class", value: "NumStr", url: "/type/NumStr" }
,
{ category: "class", value: "PseudoStash", url: "/type/PseudoStash" }
,
{ category: "class", value: "NFD", url: "/type/NFD" }
,
{ category: "role", value: "PositionalBindFailover", url: "/type/PositionalBindFailover" }
,
{ category: "role", value: "IO", url: "/type/IO" }
,
{ category: "class", value: "Match", url: "/type/Match" }
,
{ category: "class", value: "Exception", url: "/type/Exception" }
,
{ category: "class", value: "Set", url: "/type/Set" }
,
{ category: "class", value: "NFKD", url: "/type/NFKD" }
,
{ category: "enum", value: "Order", url: "/type/Order" }
,
{ category: "class", value: "Regex", url: "/type/Regex" }
,
{ category: "class", value: "List", url: "/type/List" }
,
{ category: "role", value: "Associative", url: "/type/Associative" }
,
{ category: "class", value: "BagHash", url: "/type/BagHash" }
,
{ category: "role", value: "Blob", url: "/type/Blob" }
,
{ category: "role", value: "Real", url: "/type/Real" }
,
{ category: "role", value: "CompUnit::Repository", url: "/type/CompUnit::Repository" }
,
{ category: "class", value: "Telemetry::Sampler", url: "/type/Telemetry::Sampler" }
,
{ category: "class", value: "Telemetry::Period", url: "/type/Telemetry::Period" }
,
{ category: "class", value: "Proc::Async", url: "/type/Proc::Async" }
,
{ category: "class", value: "Distribution::Locally", url: "/type/Distribution::Locally" }
,
{ category: "class", value: "Distribution::Hash", url: "/type/Distribution::Hash" }
,
{ category: "class", value: "Distribution::Path", url: "/type/Distribution::Path" }
,
{ category: "role", value: "Metamodel::ParametricRoleGroupHOW", url: "/type/Metamodel::ParametricRoleGroupHOW" }
,
{ category: "role", value: "Metamodel::ParametricRoleHOW", url: "/type/Metamodel::ParametricRoleHOW" }
,
{ category: "class", value: "Metamodel::EnumHOW", url: "/type/Metamodel::EnumHOW" }
,
{ category: "role", value: "Metamodel::PrivateMethodContainer", url: "/type/Metamodel::PrivateMethodContainer" }
,
{ category: "role", value: "Metamodel::RolePunning", url: "/type/Metamodel::RolePunning" }
,
{ category: "role", value: "Metamodel::MROBasedMethodDispatch", url: "/type/Metamodel::MROBasedMethodDispatch" }
,
{ category: "role", value: "Metamodel::Naming", url: "/type/Metamodel::Naming" }
,
{ category: "class", value: "Metamodel::Primitives", url: "/type/Metamodel::Primitives" }
,
{ category: "class", value: "Metamodel::ConcreteRoleHOW", url: "/type/Metamodel::ConcreteRoleHOW" }
,
{ category: "role", value: "Metamodel::Versioning", url: "/type/Metamodel::Versioning" }
,
{ category: "role", value: "Metamodel::MultipleInheritance", url: "/type/Metamodel::MultipleInheritance" }
,
{ category: "class", value: "Metamodel::PackageHOW", url: "/type/Metamodel::PackageHOW" }
,
{ category: "class", value: "Metamodel::ClassHOW", url: "/type/Metamodel::ClassHOW" }
,
{ category: "role", value: "Metamodel::Trusting", url: "/type/Metamodel::Trusting" }
,
{ category: "class", value: "Metamodel::CurriedRoleHOW", url: "/type/Metamodel::CurriedRoleHOW" }
,
{ category: "role", value: "Metamodel::MethodContainer", url: "/type/Metamodel::MethodContainer" }
,
{ category: "role", value: "Metamodel::RoleContainer", url: "/type/Metamodel::RoleContainer" }
,
{ category: "role", value: "Metamodel::Finalization", url: "/type/Metamodel::Finalization" }
,
{ category: "role", value: "Metamodel::AttributeContainer", url: "/type/Metamodel::AttributeContainer" }
,
{ category: "role", value: "Metamodel::C3MRO", url: "/type/Metamodel::C3MRO" }
,
{ category: "class", value: "Supplier::Preserving", url: "/type/Supplier::Preserving" }
,
{ category: "class", value: "IO::CatHandle", url: "/type/IO::CatHandle" }
,
{ category: "class", value: "IO::Pipe", url: "/type/IO::Pipe" }
,
{ category: "class", value: "IO::ArgFiles", url: "/type/IO::ArgFiles" }
,
{ category: "class", value: "IO::Notification", url: "/type/IO::Notification" }
,
{ category: "class", value: "IO::Spec", url: "/type/IO::Spec" }
,
{ category: "role", value: "IO::Socket", url: "/type/IO::Socket" }
,
{ category: "class", value: "IO::Special", url: "/type/IO::Special" }
,
{ category: "class", value: "IO::Path", url: "/type/IO::Path" }
,
{ category: "class", value: "IO::Handle", url: "/type/IO::Handle" }
,
{ category: "class", value: "Backtrace::Frame", url: "/type/Backtrace::Frame" }
,
{ category: "class", value: "Lock::Async", url: "/type/Lock::Async" }
,
{ category: "class", value: "X::TypeCheck", url: "/type/X::TypeCheck" }
,
{ category: "role", value: "X::Pod", url: "/type/X::Pod" }
,
{ category: "role", value: "X::Syntax", url: "/type/X::Syntax" }
,
{ category: "class", value: "X::Redeclaration", url: "/type/X::Redeclaration" }
,
{ category: "class", value: "X::AdHoc", url: "/type/X::AdHoc" }
,
{ category: "class", value: "X::Control", url: "/type/X::Control" }
,
{ category: "role", value: "X::OS", url: "/type/X::OS" }
,
{ category: "role", value: "X::Temporal", url: "/type/X::Temporal" }
,
{ category: "class", value: "X::Obsolete", url: "/type/X::Obsolete" }
,
{ category: "class", value: "X::ControlFlow", url: "/type/X::ControlFlow" }
,
{ category: "role", value: "X::Comp", url: "/type/X::Comp" }
,
{ category: "class", value: "X::OutOfRange", url: "/type/X::OutOfRange" }
,
{ category: "class", value: "X::StubCode", url: "/type/X::StubCode" }
,
{ category: "class", value: "X::Bind", url: "/type/X::Bind" }
,
{ category: "class", value: "X::NYI", url: "/type/X::NYI" }
,
{ category: "class", value: "X::NoDispatcher", url: "/type/X::NoDispatcher" }
,
{ category: "class", value: "X::Undeclared", url: "/type/X::Undeclared" }
,
{ category: "role", value: "X::IO", url: "/type/X::IO" }
,
{ category: "class", value: "Encoding::Registry", url: "/type/Encoding::Registry" }
,
{ category: "class", value: "CX::Done", url: "/type/CX::Done" }
,
{ category: "class", value: "CX::Warn", url: "/type/CX::Warn" }
,
{ category: "class", value: "CX::Take", url: "/type/CX::Take" }
,
{ category: "class", value: "CX::Redo", url: "/type/CX::Redo" }
,
{ category: "class", value: "CX::Next", url: "/type/CX::Next" }
,
{ category: "class", value: "CX::Succeed", url: "/type/CX::Succeed" }
,
{ category: "class", value: "CX::Emit", url: "/type/CX::Emit" }
,
{ category: "class", value: "CX::Last", url: "/type/CX::Last" }
,
{ category: "class", value: "CX::Proceed", url: "/type/CX::Proceed" }
,
{ category: "class", value: "CX::Return", url: "/type/CX::Return" }
,
{ category: "class", value: "Pod::Item", url: "/type/Pod::Item" }
,
{ category: "class", value: "Pod::Defn", url: "/type/Pod::Defn" }
,
{ category: "class", value: "Pod::Block", url: "/type/Pod::Block" }
,
{ category: "class", value: "Pod::FormattingCode", url: "/type/Pod::FormattingCode" }
,
{ category: "class", value: "Pod::Heading", url: "/type/Pod::Heading" }
,
{ category: "class", value: "Routine::WrapHandle", url: "/type/Routine::WrapHandle" }
,
{ category: "class", value: "CompUnit::Repository::Installation", url: "/type/CompUnit::Repository::Installation" }
,
{ category: "class", value: "CompUnit::Repository::FileSystem", url: "/type/CompUnit::Repository::FileSystem" }
,
{ category: "class", value: "Telemetry::Instrument::Thread", url: "/type/Telemetry::Instrument::Thread" }
,
{ category: "class", value: "Telemetry::Instrument::Usage", url: "/type/Telemetry::Instrument::Usage" }
,
{ category: "class", value: "Telemetry::Instrument::ThreadPool", url: "/type/Telemetry::Instrument::ThreadPool" }
,
{ category: "class", value: "IO::Path::QNX", url: "/type/IO::Path::QNX" }
,
{ category: "class", value: "IO::Path::Unix", url: "/type/IO::Path::Unix" }
,
{ category: "class", value: "IO::Path::Win32", url: "/type/IO::Path::Win32" }
,
{ category: "class", value: "IO::Path::Cygwin", url: "/type/IO::Path::Cygwin" }
,
{ category: "class", value: "IO::Socket::INET", url: "/type/IO::Socket::INET" }
,
{ category: "class", value: "IO::Socket::Async", url: "/type/IO::Socket::Async" }
,
{ category: "class", value: "IO::Spec::QNX", url: "/type/IO::Spec::QNX" }
,
{ category: "class", value: "IO::Spec::Unix", url: "/type/IO::Spec::Unix" }
,
{ category: "class", value: "IO::Spec::Win32", url: "/type/IO::Spec::Win32" }
,
{ category: "class", value: "IO::Spec::Cygwin", url: "/type/IO::Spec::Cygwin" }
,
{ category: "class", value: "X::Parameter::WrongOrder", url: "/type/X::Parameter::WrongOrder" }
,
{ category: "class", value: "X::Parameter::Placeholder", url: "/type/X::Parameter::Placeholder" }
,
{ category: "class", value: "X::Parameter::MultipleTypeConstraints", url: "/type/X::Parameter::MultipleTypeConstraints" }
,
{ category: "class", value: "X::Parameter::Twigil", url: "/type/X::Parameter::Twigil" }
,
{ category: "class", value: "X::Parameter::Default", url: "/type/X::Parameter::Default" }
,
{ category: "class", value: "X::Role::Initialization", url: "/type/X::Role::Initialization" }
,
{ category: "class", value: "X::ControlFlow::Return", url: "/type/X::ControlFlow::Return" }
,
{ category: "class", value: "X::Sequence::Deduction", url: "/type/X::Sequence::Deduction" }
,
{ category: "class", value: "X::Mixin::NotComposable", url: "/type/X::Mixin::NotComposable" }
,
{ category: "class", value: "X::Eval::NoSuchLang", url: "/type/X::Eval::NoSuchLang" }
,
{ category: "class", value: "X::Str::Numeric", url: "/type/X::Str::Numeric" }
,
{ category: "class", value: "X::Assignment::RO", url: "/type/X::Assignment::RO" }
,
{ category: "class", value: "X::Caller::NotDynamic", url: "/type/X::Caller::NotDynamic" }
,
{ category: "role", value: "X::Proc::Async", url: "/type/X::Proc::Async" }
,
{ category: "class", value: "X::Proc::Unsuccessful", url: "/type/X::Proc::Unsuccessful" }
,
{ category: "class", value: "X::Inheritance::NotComposed", url: "/type/X::Inheritance::NotComposed" }
,
{ category: "class", value: "X::Inheritance::Unsupported", url: "/type/X::Inheritance::Unsupported" }
,
{ category: "class", value: "X::DateTime::TimezoneClash", url: "/type/X::DateTime::TimezoneClash" }
,
{ category: "class", value: "X::Package::Stubbed", url: "/type/X::Package::Stubbed" }
,
{ category: "class", value: "X::Export::NameClash", url: "/type/X::Export::NameClash" }
,
{ category: "class", value: "X::Phaser::PrePost", url: "/type/X::Phaser::PrePost" }
,
{ category: "class", value: "X::Phaser::Multiple", url: "/type/X::Phaser::Multiple" }
,
{ category: "class", value: "X::Placeholder::Block", url: "/type/X::Placeholder::Block" }
,
{ category: "class", value: "X::Placeholder::Mainline", url: "/type/X::Placeholder::Mainline" }
,
{ category: "class", value: "X::IO::Symlink", url: "/type/X::IO::Symlink" }
,
{ category: "class", value: "X::IO::Copy", url: "/type/X::IO::Copy" }
,
{ category: "class", value: "X::IO::Dir", url: "/type/X::IO::Dir" }
,
{ category: "class", value: "X::IO::Rmdir", url: "/type/X::IO::Rmdir" }
,
{ category: "class", value: "X::IO::Link", url: "/type/X::IO::Link" }
,
{ category: "class", value: "X::IO::Rename", url: "/type/X::IO::Rename" }
,
{ category: "class", value: "X::IO::Cwd", url: "/type/X::IO::Cwd" }
,
{ category: "class", value: "X::IO::Mkdir", url: "/type/X::IO::Mkdir" }
,
{ category: "class", value: "X::IO::DoesNotExist", url: "/type/X::IO::DoesNotExist" }
,
{ category: "class", value: "X::IO::Move", url: "/type/X::IO::Move" }
,
{ category: "class", value: "X::IO::Unlink", url: "/type/X::IO::Unlink" }
,
{ category: "class", value: "X::IO::Chmod", url: "/type/X::IO::Chmod" }
,
{ category: "class", value: "X::IO::Chdir", url: "/type/X::IO::Chdir" }
,
{ category: "class", value: "X::Channel::SendOnClosed", url: "/type/X::Channel::SendOnClosed" }
,
{ category: "class", value: "X::Channel::ReceiveOnClosed", url: "/type/X::Channel::ReceiveOnClosed" }
,
{ category: "class", value: "X::Dynamic::NotFound", url: "/type/X::Dynamic::NotFound" }
,
{ category: "class", value: "X::Anon::Multi", url: "/type/X::Anon::Multi" }
,
{ category: "class", value: "X::Anon::Augment", url: "/type/X::Anon::Augment" }
,
{ category: "class", value: "X::Temporal::InvalidFormat", url: "/type/X::Temporal::InvalidFormat" }
,
{ category: "class", value: "X::Scheduler::CueInNaNSeconds", url: "/type/X::Scheduler::CueInNaNSeconds" }
,
{ category: "class", value: "X::Seq::Consumed", url: "/type/X::Seq::Consumed" }
,
{ category: "class", value: "X::Syntax::NegatedPair", url: "/type/X::Syntax::NegatedPair" }
,
{ category: "class", value: "X::Syntax::Missing", url: "/type/X::Syntax::Missing" }
,
{ category: "class", value: "X::Syntax::InfixInTermPosition", url: "/type/X::Syntax::InfixInTermPosition" }
,
{ category: "class", value: "X::Syntax::Perl5Var", url: "/type/X::Syntax::Perl5Var" }
,
{ category: "class", value: "X::Syntax::UnlessElse", url: "/type/X::Syntax::UnlessElse" }
,
{ category: "class", value: "X::Syntax::Reserved", url: "/type/X::Syntax::Reserved" }
,
{ category: "class", value: "X::Syntax::Malformed", url: "/type/X::Syntax::Malformed" }
,
{ category: "class", value: "X::Syntax::NoSelf", url: "/type/X::Syntax::NoSelf" }
,
{ category: "class", value: "X::Syntax::Confused", url: "/type/X::Syntax::Confused" }
,
{ category: "class", value: "X::Syntax::P5", url: "/type/X::Syntax::P5" }
,
{ category: "class", value: "X::Declaration::Scope", url: "/type/X::Declaration::Scope" }
,
{ category: "class", value: "X::Augment::NoSuchType", url: "/type/X::Augment::NoSuchType" }
,
{ category: "class", value: "X::Constructor::Positional", url: "/type/X::Constructor::Positional" }
,
{ category: "class", value: "X::Attribute::Package", url: "/type/X::Attribute::Package" }
,
{ category: "class", value: "X::Attribute::NoPackage", url: "/type/X::Attribute::NoPackage" }
,
{ category: "class", value: "X::Attribute::Undeclared", url: "/type/X::Attribute::Undeclared" }
,
{ category: "class", value: "X::Attribute::Required", url: "/type/X::Attribute::Required" }
,
{ category: "class", value: "X::Method::NotFound", url: "/type/X::Method::NotFound" }
,
{ category: "class", value: "X::Method::InvalidQualifier", url: "/type/X::Method::InvalidQualifier" }
,
{ category: "class", value: "X::Composition::NotComposable", url: "/type/X::Composition::NotComposable" }
,
{ category: "class", value: "X::Bind::NativeType", url: "/type/X::Bind::NativeType" }
,
{ category: "class", value: "X::Bind::Slice", url: "/type/X::Bind::Slice" }
,
{ category: "class", value: "X::Does::TypeObject", url: "/type/X::Does::TypeObject" }
,
{ category: "class", value: "X::Promise::CauseOnlyValidOnBroken", url: "/type/X::Promise::CauseOnlyValidOnBroken" }
,
{ category: "class", value: "X::Promise::Vowed", url: "/type/X::Promise::Vowed" }
,
{ category: "class", value: "X::TypeCheck::Assignment", url: "/type/X::TypeCheck::Assignment" }
,
{ category: "class", value: "X::TypeCheck::Binding", url: "/type/X::TypeCheck::Binding" }
,
{ category: "class", value: "X::TypeCheck::Splice", url: "/type/X::TypeCheck::Splice" }
,
{ category: "class", value: "X::TypeCheck::Return", url: "/type/X::TypeCheck::Return" }
,
{ category: "class", value: "X::Numeric::Real", url: "/type/X::Numeric::Real" }
,
{ category: "class", value: "X::Signature::Placeholder", url: "/type/X::Signature::Placeholder" }
,
{ category: "class", value: "X::Signature::NameClash", url: "/type/X::Signature::NameClash" }
,
{ category: "class", value: "Pod::Block::Code", url: "/type/Pod::Block::Code" }
,
{ category: "class", value: "Pod::Block::Declarator", url: "/type/Pod::Block::Declarator" }
,
{ category: "class", value: "Pod::Block::Named", url: "/type/Pod::Block::Named" }
,
{ category: "class", value: "Pod::Block::Table", url: "/type/Pod::Block::Table" }
,
{ category: "class", value: "Pod::Block::Para", url: "/type/Pod::Block::Para" }
,
{ category: "class", value: "Pod::Block::Comment", url: "/type/Pod::Block::Comment" }
,
{ category: "class", value: "X::Proc::Async::OpenForWriting", url: "/type/X::Proc::Async::OpenForWriting" }
,
{ category: "class", value: "X::Proc::Async::CharsOrBytes", url: "/type/X::Proc::Async::CharsOrBytes" }
,
{ category: "class", value: "X::Proc::Async::TapBeforeSpawn", url: "/type/X::Proc::Async::TapBeforeSpawn" }
,
{ category: "class", value: "X::Proc::Async::AlreadyStarted", url: "/type/X::Proc::Async::AlreadyStarted" }
,
{ category: "class", value: "X::Proc::Async::BindOrUse", url: "/type/X::Proc::Async::BindOrUse" }
,
{ category: "class", value: "X::Proc::Async::MustBeStarted", url: "/type/X::Proc::Async::MustBeStarted" }
,
{ category: "class", value: "X::Syntax::Comment::Embedded", url: "/type/X::Syntax::Comment::Embedded" }
,
{ category: "class", value: "X::Syntax::Number::RadixOutOfRange", url: "/type/X::Syntax::Number::RadixOutOfRange" }
,
{ category: "class", value: "X::Syntax::Variable::Numeric", url: "/type/X::Syntax::Variable::Numeric" }
,
{ category: "class", value: "X::Syntax::Variable::Twigil", url: "/type/X::Syntax::Variable::Twigil" }
,
{ category: "class", value: "X::Syntax::Variable::Match", url: "/type/X::Syntax::Variable::Match" }
,
{ category: "class", value: "X::Syntax::Augment::WithoutMonkeyTyping", url: "/type/X::Syntax::Augment::WithoutMonkeyTyping" }
,
{ category: "class", value: "X::Syntax::Term::MissingInitializer", url: "/type/X::Syntax::Term::MissingInitializer" }
,
{ category: "class", value: "X::Syntax::Regex::SolitaryQuantifier", url: "/type/X::Syntax::Regex::SolitaryQuantifier" }
,
{ category: "class", value: "X::Syntax::Regex::Adverb", url: "/type/X::Syntax::Regex::Adverb" }
,
{ category: "class", value: "X::Syntax::Self::WithoutObject", url: "/type/X::Syntax::Self::WithoutObject" }
,
{ category: "class", value: "X::Syntax::Signature::InvocantMarker", url: "/type/X::Syntax::Signature::InvocantMarker" }
,
{ category: "class", value: "X::Declaration::Scope::Multi", url: "/type/X::Declaration::Scope::Multi" }
,
{ category: "class", value: "X::Method::Private::Unqualified", url: "/type/X::Method::Private::Unqualified" }
,
{ category: "class", value: "X::Method::Private::Permission", url: "/type/X::Method::Private::Permission" }
,
{ category: "class", value: "int", url: "/type/int" }
,
{ category: "Language", value: "Perl¬†5 to Perl¬†6 guide - in a nutshell", url: "/language/5to6-nutshell" }
,
{ category: "Language", value: "Syntax", url: "/language/syntax" }
,
{ category: "Language", value: "Operators", url: "/language/operators" }
,
{ category: "Language", value: "Module packages", url: "/language/module-packages" }
,
{ category: "Language", value: "System interaction", url: "/language/system" }
,
{ category: "Language", value: "Regexes", url: "/language/regexes" }
,
{ category: "Language", value: "Containers", url: "/language/containers" }
,
{ category: "Language", value: "Opener graphemes", url: "/language/opener-chars" }
,
{ category: "Language", value: "Type system", url: "/language/typesystem" }
,
{ category: "Language", value: "Brief introduction", url: "/language/intro" }
,
{ category: "Language", value: "Experimental features", url: "/language/experimental" }
,
{ category: "Language", value: "Concurrency", url: "/language/concurrency" }
,
{ category: "Language", value: "Perl¬†6 native types", url: "/language/nativetypes" }
,
{ category: "Language", value: "Functions", url: "/language/functions" }
,
{ category: "Language", value: "Contexts and contextualizers", url: "/language/contexts" }
,
{ category: "Language", value: "Inter-process communication", url: "/language/ipc" }
,
{ category: "Language", value: "Input/Output", url: "/language/io" }
,
{ category: "Language", value: "Traps to avoid", url: "/language/traps" }
,
{ category: "Language", value: "Perl¬†6 by example P6-101", url: "/language/101-basics" }
,
{ category: "Language", value: "Variables", url: "/language/variables" }
,
{ category: "Language", value: "Community", url: "/language/community" }
,
{ category: "Language", value: "Subscripts", url: "/language/subscripts" }
,
{ category: "Language", value: "Enumeration", url: "/language/enumeration" }
,
{ category: "Language", value: "Unicode versus ASCII symbols", url: "/language/unicode_ascii" }
,
{ category: "Language", value: "Modules", url: "/language/modules" }
,
{ category: "Language", value: "Date and time functions", url: "/language/temporal" }
,
{ category: "Language", value: "Classes and objects", url: "/language/classtut" }
,
{ category: "Language", value: "Native calling interface", url: "/language/nativecall" }
,
{ category: "Language", value: "Traits", url: "/language/traits" }
,
{ category: "Language", value: "Newline handling in Perl¬†6", url: "/language/newline" }
,
{ category: "Language", value: "Iterating", url: "/language/iterating" }
,
{ category: "Language", value: "Terms", url: "/language/terms" }
,
{ category: "Language", value: "Statement prefixes", url: "/language/statement-prefixes" }
,
{ category: "Language", value: "Grammar tutorial", url: "/language/grammar_tutorial" }
,
{ category: "Language", value: "Doing math with Perl¬†6", url: "/language/math" }
,
{ category: "Language", value: "Perl¬†5 to Perl¬†6 guide - special variables", url: "/language/5to6-perlvar" }
,
{ category: "Language", value: "Perl¬†5 to Perl¬†6 guide - syntax", url: "/language/5to6-perlsyn" }
,
{ category: "Language", value: "Entering unicode characters", url: "/language/unicode_entry" }
,
{ category: "Language", value: "Exceptions", url: "/language/exceptions" }
,
{ category: "Language", value: "Perl¬†5 to Perl¬†6 guide - operators", url: "/language/5to6-perlop" }
,
{ category: "Language", value: "Sets, bags, and mixes", url: "/language/setbagmix" }
,
{ category: "Language", value: "Lists, sequences, and arrays", url: "/language/list" }
,
{ category: "Language", value: "Object orientation", url: "/language/objects" }
,
{ category: "Language", value: "Creating operators", url: "/language/optut" }
,
{ category: "Language", value: "Quoting constructs", url: "/language/quoting" }
,
{ category: "Language", value: "Control flow", url: "/language/control" }
,
{ category: "Language", value: "Module development utilities", url: "/language/modules-extra" }
,
{ category: "Language", value: "Grammars", url: "/language/grammars" }
,
{ category: "Language", value: "Perl¬†5 to Perl¬†6 guide - functions", url: "/language/5to6-perlfunc" }
,
{ category: "Language", value: "About the docs", url: "/language/about" }
,
{ category: "Language", value: "Packages", url: "/language/packages" }
,
{ category: "Language", value: "Core modules", url: "/language/modules-core" }
,
{ category: "Language", value: "Unicode", url: "/language/unicode" }
,
{ category: "Language", value: "Performance", url: "/language/performance" }
,
{ category: "Language", value: "Command line interface", url: "/language/create-cli" }
,
{ category: "Language", value: "Glossary", url: "/language/glossary" }
,
{ category: "Language", value: "Regexes: best practices and gotchas", url: "/language/regexes-best-practices" }
,
{ category: "Language", value: "Python to Perl¬†6 - nutshell", url: "/language/py-nutshell" }
,
{ category: "Language", value: "JavaScript (Node.js) to Perl¬†6 - nutshell", url: "/language/js-nutshell" }
,
{ category: "Language", value: "Pod6", url: "/language/pod" }
,
{ category: "Language", value: "Phasers", url: "/language/phasers" }
,
{ category: "Language", value: "Pragmas", url: "/language/pragmas" }
,
{ category: "Language", value: "Haskell to Perl¬†6 - nutshell", url: "/language/haskell-to-p6" }
,
{ category: "Language", value: "Testing", url: "/language/testing" }
,
{ category: "Language", value: "Data structures", url: "/language/structures" }
,
{ category: "Language", value: "Input/Output the definitive guide", url: "/language/io-guide" }
,
{ category: "Language", value: "Numerics", url: "/language/numerics" }
,
{ category: "Language", value: "Metaobject protocol (MOP)", url: "/language/mop" }
,
{ category: "Language", value: "Pod¬†6 tables", url: "/language/tables" }
,
{ category: "Language", value: "FAQ", url: "/language/faq" }
,
{ category: "Language", value: "Perl¬†5 to Perl¬†6 guide - overview", url: "/language/5to6-overview" }
,
{ category: "Language", value: "Ruby to Perl¬†6 - nutshell", url: "/language/rb-nutshell" }
,
{ category: "Language", value: "Hashes and maps", url: "/language/hashmap" }
,
{ category: "Language", value: "Independent routines", url: "/language/independent-routines" }
,
{ category: "programs", value: "Debugging", url: "/programs/01-debugging" }
,
{ category: "programs", value: "Shell environment variables used by Perl¬†6", url: "/programs/03-environment-variables" }
,
{ category: "programs", value: "Reading the docs", url: "/programs/02-reading-docs" }
,
{ category: "sub", value: "", url: "/routine/" }
,
{ category: "prefix", value: "!", url: "/routine/!" }
,
{ category: "listop", value: "!!!", url: "/routine/!!!" }
,
{ category: "infix", value: "!=", url: "/routine/!=" }
,
{ category: "infix", value: "%", url: "/routine/$PERCENT_SIGN" }
,
{ category: "infix", value: "%%", url: "/routine/$PERCENT_SIGN$PERCENT_SIGN" }
,
{ category: "infix", value: "&", url: "/routine/&" }
,
{ category: "infix", value: "&&", url: "/routine/&&" }
,
{ category: "sub", value: "&*chdir", url: "/routine/&*chdir" }
,
{ category: "Routine", value: "( )", url: "/routine/( )" }
,
{ category: "infix", value: "(&) , infix  ‚à©", url: "/routine/(&) , infix  ‚à©" }
,
{ category: "infix", value: "(&), infix ‚à©", url: "/routine/(&), infix ‚à©" }
,
{ category: "infix", value: "(+) , infix  ‚äé", url: "/routine/(+) , infix  ‚äé" }
,
{ category: "infix", value: "(+), infix ‚äé", url: "/routine/(+), infix ‚äé" }
,
{ category: "infix", value: "(-) , infix  ‚àñ", url: "/routine/(-) , infix  ‚àñ" }
,
{ category: "infix", value: "(-), infix ‚àñ", url: "/routine/(-), infix ‚àñ" }
,
{ category: "infix", value: "(.) , infix  ‚äç", url: "/routine/(.) , infix  ‚äç" }
,
{ category: "infix", value: "(.), infix ‚äç", url: "/routine/(.), infix ‚äç" }
,
{ category: "infix", value: "(<) , infix  ‚äÇ", url: "/routine/(<) , infix  ‚äÇ" }
,
{ category: "infix", value: "(<), infix ‚äÇ", url: "/routine/(<), infix ‚äÇ" }
,
{ category: "infix", value: "(<=) , infix  ‚äÜ", url: "/routine/(<=) , infix  ‚äÜ" }
,
{ category: "infix", value: "(<=), infix ‚äÜ", url: "/routine/(<=), infix ‚äÜ" }
,
{ category: "infix", value: "(>) , infix  ‚äÉ", url: "/routine/(>) , infix  ‚äÉ" }
,
{ category: "infix", value: "(>), infix ‚äÉ", url: "/routine/(>), infix ‚äÉ" }
,
{ category: "infix", value: "(>=) , infix  ‚äá", url: "/routine/(>=) , infix  ‚äá" }
,
{ category: "infix", value: "(>=), infix ‚äá", url: "/routine/(>=), infix ‚äá" }
,
{ category: "prefix", value: "(C-like) form", url: "/routine/(C-like) form" }
,
{ category: "infix", value: "(^) , infix  ‚äñ", url: "/routine/($CIRCUMFLEX_ACCENT) , infix  ‚äñ" }
,
{ category: "infix", value: "(^), infix ‚äñ", url: "/routine/($CIRCUMFLEX_ACCENT), infix ‚äñ" }
,
{ category: "infix", value: "(cont), infix ‚àã", url: "/routine/(cont), infix ‚àã" }
,
{ category: "infix", value: "(cont), infix ‚àã¬ª", url: "/routine/(cont), infix ‚àã¬ª" }
,
{ category: "infix", value: "(elem), infix ‚àà", url: "/routine/(elem), infix ‚àà" }
,
{ category: "infix", value: "(elem), infix ‚àà¬ª", url: "/routine/(elem), infix ‚àà¬ª" }
,
{ category: "infix", value: "(|) , infix  ‚à™", url: "/routine/(|) , infix  ‚à™" }
,
{ category: "infix", value: "(|), infix ‚à™", url: "/routine/(|), infix ‚à™" }
,
{ category: "Routine", value: "*", url: "/routine/*" }
,
{ category: "infix", value: "**", url: "/routine/**" }
,
{ category: "Routine", value: "+", url: "/routine/+" }
,
{ category: "infix", value: "+&", url: "/routine/+&" }
,
{ category: "Routine", value: "++", url: "/routine/++" }
,
{ category: "prefix", value: "++‚öõ", url: "/routine/++‚öõ" }
,
{ category: "infix", value: "+<", url: "/routine/+<" }
,
{ category: "infix", value: "+>", url: "/routine/+>" }
,
{ category: "Routine", value: "+^", url: "/routine/+$CIRCUMFLEX_ACCENT" }
,
{ category: "infix", value: "+|", url: "/routine/+|" }
,
{ category: "infix", value: ",", url: "/routine/," }
,
{ category: "postfix", value: ",=", url: "/routine/,=" }
,
{ category: "Routine", value: "-", url: "/routine/-" }
,
{ category: "prefix", value: "--", url: "/routine/--" }
,
{ category: "postfix", value: "--   ", url: "/routine/--   " }
,
{ category: "prefix", value: "--‚öõ", url: "/routine/--‚öõ" }
,
{ category: "infix", value: ".", url: "/routine/." }
,
{ category: "infix", value: "..", url: "/routine/.." }
,
{ category: "listop", value: "...", url: "/routine/..." }
,
{ category: "infix", value: "...         ", url: "/routine/...         " }
,
{ category: "infix", value: "..^", url: "/routine/..$CIRCUMFLEX_ACCENT" }
,
{ category: "infix", value: ".=", url: "/routine/.=" }
,
{ category: "infix", value: "\/", url: "/routine/$SOLIDUS" }
,
{ category: "infix", value: "\/\/", url: "/routine/$SOLIDUS$SOLIDUS" }
,
{ category: "infix", value: ":", url: "/routine/:" }
,
{ category: "infix", value: "::=", url: "/routine/::=" }
,
{ category: "infix", value: ":=", url: "/routine/:=" }
,
{ category: "infix", value: "<", url: "/routine/<" }
,
{ category: "Routine", value: "< >", url: "/routine/< >" }
,
{ category: "infix", value: "<=", url: "/routine/<=" }
,
{ category: "infix", value: "<==", url: "/routine/<==" }
,
{ category: "Routine", value: "<=>", url: "/routine/<=>" }
,
{ category: "postcircumfix", value: "<>", url: "/routine/<>" }
,
{ category: "Routine", value: "=", url: "/routine/=" }
,
{ category: "infix", value: "=:=", url: "/routine/=:=" }
,
{ category: "infix", value: "==", url: "/routine/==" }
,
{ category: "Routine", value: "===", url: "/routine/===" }
,
{ category: "infix", value: "==>", url: "/routine/==>" }
,
{ category: "infix", value: "=>", url: "/routine/=>" }
,
{ category: "infix", value: "=~=", url: "/routine/=~=" }
,
{ category: "infix", value: ">", url: "/routine/>" }
,
{ category: "infix", value: ">=", url: "/routine/>=" }
,
{ category: "Routine", value: "?", url: "/routine/%3F" }
,
{ category: "infix", value: "?? !!", url: "/routine/%3F%3F !!" }
,
{ category: "listop", value: "???", url: "/routine/%3F%3F%3F" }
,
{ category: "Routine", value: "?^", url: "/routine/%3F$CIRCUMFLEX_ACCENT" }
,
{ category: "infix", value: "?|", url: "/routine/%3F|" }
,
{ category: "Routine", value: "ACCEPTS", url: "/routine/ACCEPTS" }
,
{ category: "sub", value: "ARGS-TO-CAPTURE", url: "/routine/ARGS-TO-CAPTURE" }
,
{ category: "method", value: "ASSIGN-KEY", url: "/routine/ASSIGN-KEY" }
,
{ category: "method", value: "ASSIGN-POS", url: "/routine/ASSIGN-POS" }
,
{ category: "Routine", value: "AT-KEY", url: "/routine/AT-KEY" }
,
{ category: "Routine", value: "AT-POS", url: "/routine/AT-POS" }
,
{ category: "method", value: "Array", url: "/routine/Array" }
,
{ category: "method", value: "BIND-KEY", url: "/routine/BIND-KEY" }
,
{ category: "method", value: "BIND-POS", url: "/routine/BIND-POS" }
,
{ category: "submethod", value: "BUILD", url: "/routine/BUILD" }
,
{ category: "Routine", value: "Bag", url: "/routine/Bag" }
,
{ category: "Routine", value: "BagHash", url: "/routine/BagHash" }
,
{ category: "method", value: "Baggy", url: "/routine/Baggy" }
,
{ category: "Routine", value: "Bool", url: "/routine/Bool" }
,
{ category: "method", value: "Bridge", url: "/routine/Bridge" }
,
{ category: "Routine", value: "CALL-ME", url: "/routine/CALL-ME" }
,
{ category: "method", value: "CREATE", url: "/routine/CREATE" }
,
{ category: "Routine", value: "Capture", url: "/routine/Capture" }
,
{ category: "method", value: "Channel", url: "/routine/Channel" }
,
{ category: "Routine", value: "Complex", url: "/routine/Complex" }
,
{ category: "method", value: "DELETE-KEY", url: "/routine/DELETE-KEY" }
,
{ category: "method", value: "DELETE-POS", url: "/routine/DELETE-POS" }
,
{ category: "Routine", value: "DESTROY", url: "/routine/DESTROY" }
,
{ category: "method", value: "DISTROnames", url: "/routine/DISTROnames" }
,
{ category: "Routine", value: "Date", url: "/routine/Date" }
,
{ category: "Routine", value: "DateTime", url: "/routine/DateTime" }
,
{ category: "Routine", value: "EOF", url: "/routine/EOF" }
,
{ category: "Routine", value: "EVAL", url: "/routine/EVAL" }
,
{ category: "sub", value: "EVALFILE", url: "/routine/EVALFILE" }
,
{ category: "Routine", value: "EXISTS-KEY", url: "/routine/EXISTS-KEY" }
,
{ category: "Routine", value: "EXISTS-POS", url: "/routine/EXISTS-POS" }
,
{ category: "method", value: "FALLBACK", url: "/routine/FALLBACK" }
,
{ category: "sub", value: "GENERATE-USAGE", url: "/routine/GENERATE-USAGE" }
,
{ category: "Routine", value: "Hash", url: "/routine/Hash" }
,
{ category: "Routine", value: "IO", url: "/routine/IO" }
,
{ category: "method", value: "IO::Notification.watch-path", url: "/routine/IO::Notification.watch-path" }
,
{ category: "method", value: "Instant", url: "/routine/Instant" }
,
{ category: "Routine", value: "Int", url: "/routine/Int" }
,
{ category: "method", value: "KERNELnames", url: "/routine/KERNELnames" }
,
{ category: "Routine", value: "List", url: "/routine/List" }
,
{ category: "Routine", value: "MAIN", url: "/routine/MAIN" }
,
{ category: "method", value: "Map", url: "/routine/Map" }
,
{ category: "Routine", value: "Mix", url: "/routine/Mix" }
,
{ category: "Routine", value: "MixHash", url: "/routine/MixHash" }
,
{ category: "method", value: "Mixy", url: "/routine/Mixy" }
,
{ category: "Routine", value: "NFC", url: "/routine/NFC" }
,
{ category: "Routine", value: "NFD", url: "/routine/NFD" }
,
{ category: "Routine", value: "NFKC", url: "/routine/NFKC" }
,
{ category: "Routine", value: "NFKD", url: "/routine/NFKD" }
,
{ category: "Routine", value: "Num", url: "/routine/Num" }
,
{ category: "Routine", value: "Numeric", url: "/routine/Numeric" }
,
{ category: "method", value: "Pair", url: "/routine/Pair" }
,
{ category: "method", value: "Promise", url: "/routine/Promise" }
,
{ category: "Routine", value: "READ", url: "/routine/READ" }
,
{ category: "sub", value: "RUN-MAIN", url: "/routine/RUN-MAIN" }
,
{ category: "Routine", value: "Range", url: "/routine/Range" }
,
{ category: "Routine", value: "Rat", url: "/routine/Rat" }
,
{ category: "Routine", value: "Real", url: "/routine/Real" }
,
{ category: "method", value: "SPEC", url: "/routine/SPEC" }
,
{ category: "Routine", value: "STORE", url: "/routine/STORE" }
,
{ category: "Routine", value: "Set", url: "/routine/Set" }
,
{ category: "Routine", value: "SetHash", url: "/routine/SetHash" }
,
{ category: "method", value: "Setty", url: "/routine/Setty" }
,
{ category: "method", value: "Slip", url: "/routine/Slip" }
,
{ category: "Routine", value: "Str", url: "/routine/Str" }
,
{ category: "method", value: "Stringy", url: "/routine/Stringy" }
,
{ category: "Routine", value: "Supply", url: "/routine/Supply" }
,
{ category: "routine", value: "T", url: "/routine/T" }
,
{ category: "sub", value: "USAGE", url: "/routine/USAGE" }
,
{ category: "method", value: "VMnames", url: "/routine/VMnames" }
,
{ category: "method", value: "WHERE", url: "/routine/WHERE" }
,
{ category: "method", value: "WHEREFORE", url: "/routine/WHEREFORE" }
,
{ category: "Routine", value: "WHICH", url: "/routine/WHICH" }
,
{ category: "method", value: "WHY", url: "/routine/WHY" }
,
{ category: "Routine", value: "WRITE", url: "/routine/WRITE" }
,
{ category: "infix", value: "X", url: "/routine/X" }
,
{ category: "infix", value: "Z", url: "/routine/Z" }
,
{ category: "Routine", value: "[ ]", url: "/routine/[ ]" }
,
{ category: "Routine", value: "^", url: "/routine/$CIRCUMFLEX_ACCENT" }
,
{ category: "infix", value: "^..", url: "/routine/$CIRCUMFLEX_ACCENT.." }
,
{ category: "infix", value: "^..^", url: "/routine/$CIRCUMFLEX_ACCENT..$CIRCUMFLEX_ACCENT" }
,
{ category: "infix", value: "^^", url: "/routine/$CIRCUMFLEX_ACCENT$CIRCUMFLEX_ACCENT" }
,
{ category: "infix", value: "^ff", url: "/routine/$CIRCUMFLEX_ACCENTff" }
,
{ category: "infix", value: "^ff^", url: "/routine/$CIRCUMFLEX_ACCENTff$CIRCUMFLEX_ACCENT" }
,
{ category: "infix", value: "^fff", url: "/routine/$CIRCUMFLEX_ACCENTfff" }
,
{ category: "infix", value: "^fff^", url: "/routine/$CIRCUMFLEX_ACCENTfff$CIRCUMFLEX_ACCENT" }
,
{ category: "Routine", value: "abs", url: "/routine/abs" }
,
{ category: "Routine", value: "abs2rel", url: "/routine/abs2rel" }
,
{ category: "method", value: "absolute", url: "/routine/absolute" }
,
{ category: "method", value: "accept", url: "/routine/accept" }
,
{ category: "Routine", value: "accessed", url: "/routine/accessed" }
,
{ category: "routine", value: "acos", url: "/routine/acos" }
,
{ category: "routine", value: "acosec", url: "/routine/acosec" }
,
{ category: "routine", value: "acosech", url: "/routine/acosech" }
,
{ category: "routine", value: "acosh", url: "/routine/acosh" }
,
{ category: "routine", value: "acotan", url: "/routine/acotan" }
,
{ category: "routine", value: "acotanh", url: "/routine/acotanh" }
,
{ category: "method", value: "acquire", url: "/routine/acquire" }
,
{ category: "method", value: "act", url: "/routine/act" }
,
{ category: "method", value: "action", url: "/routine/action" }
,
{ category: "method", value: "actions", url: "/routine/actions" }
,
{ category: "method", value: "add", url: "/routine/add" }
,
{ category: "method", value: "add_attribute", url: "/routine/add_attribute" }
,
{ category: "method", value: "add_enum_value", url: "/routine/add_enum_value" }
,
{ category: "method", value: "add_fallback", url: "/routine/add_fallback" }
,
{ category: "method", value: "add_method", url: "/routine/add_method" }
,
{ category: "Routine", value: "add_parent", url: "/routine/add_parent" }
,
{ category: "method", value: "add_private_method", url: "/routine/add_private_method" }
,
{ category: "method", value: "add_role", url: "/routine/add_role" }
,
{ category: "method", value: "add_trustee", url: "/routine/add_trustee" }
,
{ category: "method", value: "addendum", url: "/routine/addendum" }
,
{ category: "method", value: "adverb", url: "/routine/adverb" }
,
{ category: "Routine", value: "after", url: "/routine/after" }
,
{ category: "method", value: "all", url: "/routine/all" }
,
{ category: "method", value: "allocate", url: "/routine/allocate" }
,
{ category: "method", value: "allof", url: "/routine/allof" }
,
{ category: "method", value: "allowed", url: "/routine/allowed" }
,
{ category: "method", value: "alternative-names", url: "/routine/alternative-names" }
,
{ category: "infix", value: "and", url: "/routine/and" }
,
{ category: "infix", value: "andthen", url: "/routine/andthen" }
,
{ category: "method", value: "annotations", url: "/routine/annotations" }
,
{ category: "method", value: "antipair", url: "/routine/antipair" }
,
{ category: "Routine", value: "antipairs", url: "/routine/antipairs" }
,
{ category: "method", value: "any", url: "/routine/any" }
,
{ category: "method", value: "anyof", url: "/routine/anyof" }
,
{ category: "method", value: "api", url: "/routine/api" }
,
{ category: "method", value: "app_lifetime", url: "/routine/app_lifetime" }
,
{ category: "Routine", value: "append", url: "/routine/append" }
,
{ category: "method", value: "arch", url: "/routine/arch" }
,
{ category: "method", value: "archetypes", url: "/routine/archetypes" }
,
{ category: "method", value: "archname", url: "/routine/archname" }
,
{ category: "method", value: "args", url: "/routine/args" }
,
{ category: "Routine", value: "arity", url: "/routine/arity" }
,
{ category: "routine", value: "asec", url: "/routine/asec" }
,
{ category: "routine", value: "asech", url: "/routine/asech" }
,
{ category: "routine", value: "asin", url: "/routine/asin" }
,
{ category: "routine", value: "asinh", url: "/routine/asinh" }
,
{ category: "method", value: "assuming", url: "/routine/assuming" }
,
{ category: "method", value: "ast", url: "/routine/ast" }
,
{ category: "method", value: "at", url: "/routine/at" }
,
{ category: "routine", value: "atan", url: "/routine/atan" }
,
{ category: "routine", value: "atan2", url: "/routine/atan2" }
,
{ category: "routine", value: "atanh", url: "/routine/atanh" }
,
{ category: "Routine", value: "atomic-assign", url: "/routine/atomic-assign" }
,
{ category: "sub", value: "atomic-dec-fetch", url: "/routine/atomic-dec-fetch" }
,
{ category: "Routine", value: "atomic-fetch", url: "/routine/atomic-fetch" }
,
{ category: "sub", value: "atomic-fetch-add", url: "/routine/atomic-fetch-add" }
,
{ category: "sub", value: "atomic-fetch-dec", url: "/routine/atomic-fetch-dec" }
,
{ category: "sub", value: "atomic-fetch-inc", url: "/routine/atomic-fetch-inc" }
,
{ category: "sub", value: "atomic-fetch-sub", url: "/routine/atomic-fetch-sub" }
,
{ category: "sub", value: "atomic-inc-fetch", url: "/routine/atomic-inc-fetch" }
,
{ category: "method", value: "attributes", url: "/routine/attributes" }
,
{ category: "Routine", value: "auth", url: "/routine/auth" }
,
{ category: "Routine", value: "await", url: "/routine/await" }
,
{ category: "method", value: "backtrace", url: "/routine/backtrace" }
,
{ category: "sub", value: "bag", url: "/routine/bag" }
,
{ category: "sub", value: "bail-out", url: "/routine/bail-out" }
,
{ category: "method", value: "base", url: "/routine/base" }
,
{ category: "method", value: "base-repeating", url: "/routine/base-repeating" }
,
{ category: "Routine", value: "basename", url: "/routine/basename" }
,
{ category: "Routine", value: "batch", url: "/routine/batch" }
,
{ category: "Routine", value: "before", url: "/routine/before" }
,
{ category: "method", value: "bind-stderr", url: "/routine/bind-stderr" }
,
{ category: "method", value: "bind-stdin", url: "/routine/bind-stdin" }
,
{ category: "method", value: "bind-stdout", url: "/routine/bind-stdout" }
,
{ category: "method", value: "bind-udp", url: "/routine/bind-udp" }
,
{ category: "method", value: "bits", url: "/routine/bits" }
,
{ category: "method", value: "bless", url: "/routine/bless" }
,
{ category: "method", value: "block", url: "/routine/block" }
,
{ category: "method", value: "bool-only", url: "/routine/bool-only" }
,
{ category: "method", value: "bounds", url: "/routine/bounds" }
,
{ category: "method", value: "break", url: "/routine/break" }
,
{ category: "method", value: "broken", url: "/routine/broken" }
,
{ category: "method", value: "build-date", url: "/routine/build-date" }
,
{ category: "infix", value: "but", url: "/routine/but" }
,
{ category: "method", value: "bytes", url: "/routine/bytes" }
,
{ category: "Routine", value: "cache", url: "/routine/cache" }
,
{ category: "sub", value: "callframe", url: "/routine/callframe" }
,
{ category: "method", value: "calling-package", url: "/routine/calling-package" }
,
{ category: "sub", value: "callsame", url: "/routine/callsame" }
,
{ category: "sub", value: "callwith", url: "/routine/callwith" }
,
{ category: "Routine", value: "can", url: "/routine/can" }
,
{ category: "sub", value: "can-ok", url: "/routine/can-ok" }
,
{ category: "method", value: "cancel", url: "/routine/cancel" }
,
{ category: "Routine", value: "candidates", url: "/routine/candidates" }
,
{ category: "Routine", value: "cando", url: "/routine/cando" }
,
{ category: "Routine", value: "canonpath", url: "/routine/canonpath" }
,
{ category: "method", value: "caps", url: "/routine/caps" }
,
{ category: "method", value: "caption", url: "/routine/caption" }
,
{ category: "method", value: "capture", url: "/routine/capture" }
,
{ category: "Routine", value: "cas", url: "/routine/cas" }
,
{ category: "Routine", value: "catdir", url: "/routine/catdir" }
,
{ category: "Routine", value: "categorize", url: "/routine/categorize" }
,
{ category: "Routine", value: "categorize-list", url: "/routine/categorize-list" }
,
{ category: "Routine", value: "catfile", url: "/routine/catfile" }
,
{ category: "Routine", value: "catpath", url: "/routine/catpath" }
,
{ category: "method", value: "cause", url: "/routine/cause" }
,
{ category: "Routine", value: "ceiling", url: "/routine/ceiling" }
,
{ category: "sub", value: "cglobal", url: "/routine/cglobal" }
,
{ category: "Routine", value: "changed", url: "/routine/changed" }
,
{ category: "Routine", value: "channel", url: "/routine/channel" }
,
{ category: "Routine", value: "chars", url: "/routine/chars" }
,
{ category: "Routine", value: "chdir", url: "/routine/chdir" }
,
{ category: "method", value: "child", url: "/routine/child" }
,
{ category: "method", value: "child-name", url: "/routine/child-name" }
,
{ category: "method", value: "child-typename", url: "/routine/child-typename" }
,
{ category: "Routine", value: "chmod", url: "/routine/chmod" }
,
{ category: "Routine", value: "chomp", url: "/routine/chomp" }
,
{ category: "Routine", value: "chop", url: "/routine/chop" }
,
{ category: "Routine", value: "chr", url: "/routine/chr" }
,
{ category: "routine", value: "chrs", url: "/routine/chrs" }
,
{ category: "method", value: "chunks", url: "/routine/chunks" }
,
{ category: "routine", value: "cis", url: "/routine/cis" }
,
{ category: "Routine", value: "classify", url: "/routine/classify" }
,
{ category: "Routine", value: "classify-list", url: "/routine/classify-list" }
,
{ category: "method", value: "cleanup", url: "/routine/cleanup" }
,
{ category: "Routine", value: "clone", url: "/routine/clone" }
,
{ category: "Routine", value: "close", url: "/routine/close" }
,
{ category: "method", value: "close-stdin", url: "/routine/close-stdin" }
,
{ category: "method", value: "closed", url: "/routine/closed" }
,
{ category: "Routine", value: "cmp", url: "/routine/cmp" }
,
{ category: "sub", value: "cmp-ok", url: "/routine/cmp-ok" }
,
{ category: "Routine", value: "code", url: "/routine/code" }
,
{ category: "method", value: "codename", url: "/routine/codename" }
,
{ category: "Routine", value: "codes", url: "/routine/codes" }
,
{ category: "method", value: "coerce_type", url: "/routine/coerce_type" }
,
{ category: "infix", value: "coll", url: "/routine/coll" }
,
{ category: "method", value: "collate", url: "/routine/collate" }
,
{ category: "method", value: "column", url: "/routine/column" }
,
{ category: "Routine", value: "comb", url: "/routine/comb" }
,
{ category: "Routine", value: "combinations", url: "/routine/combinations" }
,
{ category: "Routine", value: "command", url: "/routine/command" }
,
{ category: "method", value: "comment", url: "/routine/comment" }
,
{ category: "method", value: "compiler", url: "/routine/compiler" }
,
{ category: "method", value: "composalizer", url: "/routine/composalizer" }
,
{ category: "Routine", value: "compose", url: "/routine/compose" }
,
{ category: "method", value: "compose_type", url: "/routine/compose_type" }
,
{ category: "method", value: "compose_values", url: "/routine/compose_values" }
,
{ category: "method", value: "composer", url: "/routine/composer" }
,
{ category: "method", value: "compute_mro", url: "/routine/compute_mro" }
,
{ category: "method", value: "concise", url: "/routine/concise" }
,
{ category: "Routine", value: "condition", url: "/routine/condition" }
,
{ category: "Routine", value: "config", url: "/routine/config" }
,
{ category: "method", value: "configure_destroy", url: "/routine/configure_destroy" }
,
{ category: "method", value: "configure_type_checking", url: "/routine/configure_type_checking" }
,
{ category: "Routine", value: "conj", url: "/routine/conj" }
,
{ category: "method", value: "connect", url: "/routine/connect" }
,
{ category: "prefix", value: "constant", url: "/routine/constant" }
,
{ category: "method", value: "constraints", url: "/routine/constraints" }
,
{ category: "method", value: "construct", url: "/routine/construct" }
,
{ category: "Routine", value: "contains", url: "/routine/contains" }
,
{ category: "Routine", value: "content", url: "/routine/content" }
,
{ category: "method", value: "contents", url: "/routine/contents" }
,
{ category: "Routine", value: "copy", url: "/routine/copy" }
,
{ category: "routine", value: "cos", url: "/routine/cos" }
,
{ category: "routine", value: "cosec", url: "/routine/cosec" }
,
{ category: "routine", value: "cosech", url: "/routine/cosech" }
,
{ category: "routine", value: "cosh", url: "/routine/cosh" }
,
{ category: "routine", value: "cotan", url: "/routine/cotan" }
,
{ category: "routine", value: "cotanh", url: "/routine/cotanh" }
,
{ category: "Routine", value: "count", url: "/routine/count" }
,
{ category: "method", value: "count-only", url: "/routine/count-only" }
,
{ category: "method", value: "cpu-cores", url: "/routine/cpu-cores" }
,
{ category: "method", value: "cpu-usage", url: "/routine/cpu-usage" }
,
{ category: "method", value: "create_type", url: "/routine/create_type" }
,
{ category: "routine", value: "cross", url: "/routine/cross" }
,
{ category: "method", value: "cue", url: "/routine/cue" }
,
{ category: "method", value: "curdir", url: "/routine/curdir" }
,
{ category: "method", value: "curupdir", url: "/routine/curupdir" }
,
{ category: "Routine", value: "d", url: "/routine/d" }
,
{ category: "method", value: "day", url: "/routine/day" }
,
{ category: "method", value: "day-of-month", url: "/routine/day-of-month" }
,
{ category: "method", value: "day-of-week", url: "/routine/day-of-week" }
,
{ category: "method", value: "day-of-year", url: "/routine/day-of-year" }
,
{ category: "method", value: "daycount", url: "/routine/daycount" }
,
{ category: "method", value: "days-in-month", url: "/routine/days-in-month" }
,
{ category: "method", value: "declaration", url: "/routine/declaration" }
,
{ category: "method", value: "decode", url: "/routine/decode" }
,
{ category: "method", value: "decoder", url: "/routine/decoder" }
,
{ category: "method", value: "deepmap", url: "/routine/deepmap" }
,
{ category: "Routine", value: "default", url: "/routine/default" }
,
{ category: "Routine", value: "defined", url: "/routine/defined" }
,
{ category: "method", value: "defined  ", url: "/routine/defined  " }
,
{ category: "method", value: "delayed", url: "/routine/delayed" }
,
{ category: "method", value: "denominator", url: "/routine/denominator" }
,
{ category: "method", value: "desc", url: "/routine/desc" }
,
{ category: "method", value: "destroyers", url: "/routine/destroyers" }
,
{ category: "Routine", value: "devnull", url: "/routine/devnull" }
,
{ category: "sub", value: "diag", url: "/routine/diag" }
,
{ category: "method", value: "did-you-mean", url: "/routine/did-you-mean" }
,
{ category: "sub", value: "die", url: "/routine/die" }
,
{ category: "sub", value: "dies-ok", url: "/routine/dies-ok" }
,
{ category: "routine", value: "dir", url: "/routine/dir" }
,
{ category: "Routine", value: "dir-sep", url: "/routine/dir-sep" }
,
{ category: "method", value: "dirname", url: "/routine/dirname" }
,
{ category: "method", value: "distribution", url: "/routine/distribution" }
,
{ category: "Routine", value: "div", url: "/routine/div" }
,
{ category: "method", value: "do", url: "/routine/do" }
,
{ category: "Routine", value: "does", url: "/routine/does" }
,
{ category: "sub", value: "does-ok", url: "/routine/does-ok" }
,
{ category: "Routine", value: "done", url: "/routine/done" }
,
{ category: "sub", value: "done-testing", url: "/routine/done-testing" }
,
{ category: "method", value: "duckmap", url: "/routine/duckmap" }
,
{ category: "Routine", value: "dynamic", url: "/routine/dynamic" }
,
{ category: "Routine", value: "e", url: "/routine/e" }
,
{ category: "Routine", value: "eager", url: "/routine/eager" }
,
{ category: "Routine", value: "earlier", url: "/routine/earlier" }
,
{ category: "Routine", value: "elems", url: "/routine/elems" }
,
{ category: "Routine", value: "emit", url: "/routine/emit" }
,
{ category: "method", value: "enclosing", url: "/routine/enclosing" }
,
{ category: "method", value: "encode", url: "/routine/encode" }
,
{ category: "method", value: "encoder", url: "/routine/encoder" }
,
{ category: "Routine", value: "encoding", url: "/routine/encoding" }
,
{ category: "Routine", value: "end", url: "/routine/end" }
,
{ category: "method", value: "endian", url: "/routine/endian" }
,
{ category: "method", value: "ends-with", url: "/routine/ends-with" }
,
{ category: "method", value: "enum_from_value", url: "/routine/enum_from_value" }
,
{ category: "method", value: "enum_value_list", url: "/routine/enum_value_list" }
,
{ category: "method", value: "enum_values", url: "/routine/enum_values" }
,
{ category: "Routine", value: "enums", url: "/routine/enums" }
,
{ category: "Routine", value: "eof", url: "/routine/eof" }
,
{ category: "infix", value: "eq", url: "/routine/eq" }
,
{ category: "Routine", value: "eqv", url: "/routine/eqv" }
,
{ category: "sub", value: "eval-dies-ok", url: "/routine/eval-dies-ok" }
,
{ category: "sub", value: "eval-lives-ok", url: "/routine/eval-lives-ok" }
,
{ category: "method", value: "exception", url: "/routine/exception" }
,
{ category: "method", value: "excludes-max", url: "/routine/excludes-max" }
,
{ category: "method", value: "excludes-min", url: "/routine/excludes-min" }
,
{ category: "sub", value: "exit", url: "/routine/exit" }
,
{ category: "method", value: "exitcode", url: "/routine/exitcode" }
,
{ category: "Routine", value: "exp", url: "/routine/exp" }
,
{ category: "method", value: "expected", url: "/routine/expected" }
,
{ category: "sub", value: "explicitly-manage", url: "/routine/explicitly-manage" }
,
{ category: "routine", value: "expmod", url: "/routine/expmod" }
,
{ category: "method", value: "export_callback", url: "/routine/export_callback" }
,
{ category: "Routine", value: "extension", url: "/routine/extension" }
,
{ category: "Routine", value: "f", url: "/routine/f" }
,
{ category: "Routine", value: "fail", url: "/routine/fail" }
,
{ category: "sub", value: "fails-like", url: "/routine/fails-like" }
,
{ category: "Routine", value: "fc", url: "/routine/fc" }
,
{ category: "method", value: "feature", url: "/routine/feature" }
,
{ category: "infix", value: "ff", url: "/routine/ff" }
,
{ category: "infix", value: "ff^", url: "/routine/ff$CIRCUMFLEX_ACCENT" }
,
{ category: "infix", value: "fff", url: "/routine/fff" }
,
{ category: "infix", value: "fff^", url: "/routine/fff$CIRCUMFLEX_ACCENT" }
,
{ category: "Routine", value: "file", url: "/routine/file" }
,
{ category: "method", value: "filename", url: "/routine/filename" }
,
{ category: "Routine", value: "files", url: "/routine/files" }
,
{ category: "method", value: "find", url: "/routine/find" }
,
{ category: "method", value: "find_method", url: "/routine/find_method" }
,
{ category: "method", value: "find_method_qualified", url: "/routine/find_method_qualified" }
,
{ category: "method", value: "finish", url: "/routine/finish" }
,
{ category: "Routine", value: "first", url: "/routine/first" }
,
{ category: "Routine", value: "flat", url: "/routine/flat" }
,
{ category: "Routine", value: "flatmap", url: "/routine/flatmap" }
,
{ category: "Routine", value: "flip", url: "/routine/flip" }
,
{ category: "Routine", value: "floor", url: "/routine/floor" }
,
{ category: "sub", value: "flunk", url: "/routine/flunk" }
,
{ category: "Routine", value: "flush", url: "/routine/flush" }
,
{ category: "Routine", value: "fmt", url: "/routine/fmt" }
,
{ category: "method", value: "format", url: "/routine/format" }
,
{ category: "method", value: "formatter", url: "/routine/formatter" }
,
{ category: "method", value: "free-memory", url: "/routine/free-memory" }
,
{ category: "method", value: "freeze", url: "/routine/freeze" }
,
{ category: "Routine", value: "from", url: "/routine/from" }
,
{ category: "method", value: "from-list", url: "/routine/from-list" }
,
{ category: "method", value: "from-loop", url: "/routine/from-loop" }
,
{ category: "method", value: "from-posix", url: "/routine/from-posix" }
,
{ category: "method", value: "from-slurpy", url: "/routine/from-slurpy" }
,
{ category: "method", value: "full", url: "/routine/full" }
,
{ category: "sub", value: "full-barrier", url: "/routine/full-barrier" }
,
{ category: "infix", value: "gcd", url: "/routine/gcd" }
,
{ category: "infix", value: "ge", url: "/routine/ge" }
,
{ category: "Routine", value: "get", url: "/routine/get" }
,
{ category: "method", value: "get_value", url: "/routine/get_value" }
,
{ category: "Routine", value: "getc", url: "/routine/getc" }
,
{ category: "Routine", value: "gist", url: "/routine/gist" }
,
{ category: "Routine", value: "got", url: "/routine/got" }
,
{ category: "Routine", value: "grab", url: "/routine/grab" }
,
{ category: "Routine", value: "grabpairs", url: "/routine/grabpairs" }
,
{ category: "Routine", value: "grep", url: "/routine/grep" }
,
{ category: "infix", value: "gt", url: "/routine/gt" }
,
{ category: "Routine", value: "handle", url: "/routine/handle" }
,
{ category: "method", value: "handled", url: "/routine/handled" }
,
{ category: "Routine", value: "handles", url: "/routine/handles" }
,
{ category: "method", value: "hardware", url: "/routine/hardware" }
,
{ category: "method", value: "has_accessor", url: "/routine/has_accessor" }
,
{ category: "Routine", value: "hash", url: "/routine/hash" }
,
{ category: "Routine", value: "head", url: "/routine/head" }
,
{ category: "method", value: "headers", url: "/routine/headers" }
,
{ category: "method", value: "hh-mm-ss", url: "/routine/hh-mm-ss" }
,
{ category: "method", value: "hidden", url: "/routine/hidden" }
,
{ category: "Routine", value: "hides", url: "/routine/hides" }
,
{ category: "method", value: "hostname", url: "/routine/hostname" }
,
{ category: "method", value: "hour", url: "/routine/hour" }
,
{ category: "method", value: "how", url: "/routine/how" }
,
{ category: "Routine", value: "hyper", url: "/routine/hyper" }
,
{ category: "Routine", value: "i", url: "/routine/i" }
,
{ category: "Routine", value: "id", url: "/routine/id" }
,
{ category: "method", value: "illegal", url: "/routine/illegal" }
,
{ category: "method", value: "im", url: "/routine/im" }
,
{ category: "method", value: "in", url: "/routine/in" }
,
{ category: "method", value: "in-timezone", url: "/routine/in-timezone" }
,
{ category: "method", value: "indent", url: "/routine/indent" }
,
{ category: "Routine", value: "index", url: "/routine/index" }
,
{ category: "method", value: "indices", url: "/routine/indices" }
,
{ category: "sub", value: "indir", url: "/routine/indir" }
,
{ category: "method", value: "infinite", url: "/routine/infinite" }
,
{ category: "method", value: "infix", url: "/routine/infix" }
,
{ category: "sub", value: "infix:<**>", url: "/routine/infix:<**>" }
,
{ category: "sub", value: "infix:<*>", url: "/routine/infix:<*>" }
,
{ category: "Routine", value: "infix:<+>", url: "/routine/infix:<+>" }
,
{ category: "Routine", value: "infix:<->", url: "/routine/infix:<->" }
,
{ category: "sub", value: "infix:<\/>", url: "/routine/infix:<$SOLIDUS>" }
,
{ category: "sub", value: "infix:<cmp>", url: "/routine/infix:<cmp>" }
,
{ category: "method", value: "infix:<eqv>", url: "/routine/infix:<eqv>" }
,
{ category: "sub", value: "infix:¬´!=¬ª", url: "/routine/infix:¬´!=¬ª" }
,
{ category: "sub", value: "infix:¬´<=>¬ª", url: "/routine/infix:¬´<=>¬ª" }
,
{ category: "sub", value: "infix:¬´<=¬ª", url: "/routine/infix:¬´<=¬ª" }
,
{ category: "sub", value: "infix:¬´<¬ª", url: "/routine/infix:¬´<¬ª" }
,
{ category: "sub", value: "infix:¬´==¬ª", url: "/routine/infix:¬´==¬ª" }
,
{ category: "sub", value: "infix:¬´>=¬ª", url: "/routine/infix:¬´>=¬ª" }
,
{ category: "sub", value: "infix:¬´>¬ª", url: "/routine/infix:¬´>¬ª" }
,
{ category: "sub", value: "infix:¬´cmp¬ª", url: "/routine/infix:¬´cmp¬ª" }
,
{ category: "method", value: "install", url: "/routine/install" }
,
{ category: "method", value: "install_method_cache", url: "/routine/install_method_cache" }
,
{ category: "method", value: "instead", url: "/routine/instead" }
,
{ category: "method", value: "int-bounds", url: "/routine/int-bounds" }
,
{ category: "method", value: "interval", url: "/routine/interval" }
,
{ category: "method", value: "invalid-str", url: "/routine/invalid-str" }
,
{ category: "Routine", value: "invert", url: "/routine/invert" }
,
{ category: "Routine", value: "invocant", url: "/routine/invocant" }
,
{ category: "Routine", value: "is", url: "/routine/is" }
,
{ category: "trait", value: "is DEPRECATED", url: "/routine/is DEPRECATED" }
,
{ category: "trait", value: "is cached", url: "/routine/is cached" }
,
{ category: "trait", value: "is default", url: "/routine/is default" }
,
{ category: "trait", value: "is dynamic", url: "/routine/is dynamic" }
,
{ category: "Routine", value: "is export", url: "/routine/is export" }
,
{ category: "trait", value: "is hidden-from-backtrace", url: "/routine/is hidden-from-backtrace" }
,
{ category: "trait", value: "is nodal", url: "/routine/is nodal" }
,
{ category: "trait", value: "is pure", url: "/routine/is pure" }
,
{ category: "trait", value: "is raw", url: "/routine/is raw" }
,
{ category: "trait", value: "is required", url: "/routine/is required" }
,
{ category: "Routine", value: "is rw", url: "/routine/is rw" }
,
{ category: "Routine", value: "is-absolute", url: "/routine/is-absolute" }
,
{ category: "sub", value: "is-approx", url: "/routine/is-approx" }
,
{ category: "sub", value: "is-approx-calculate", url: "/routine/is-approx-calculate" }
,
{ category: "sub", value: "is-deeply", url: "/routine/is-deeply" }
,
{ category: "method", value: "is-hidden", url: "/routine/is-hidden" }
,
{ category: "method", value: "is-initial-thread", url: "/routine/is-initial-thread" }
,
{ category: "method", value: "is-int", url: "/routine/is-int" }
,
{ category: "Routine", value: "is-lazy", url: "/routine/is-lazy" }
,
{ category: "method", value: "is-leap-year", url: "/routine/is-leap-year" }
,
{ category: "routine", value: "is-prime", url: "/routine/is-prime" }
,
{ category: "method", value: "is-relative", url: "/routine/is-relative" }
,
{ category: "method", value: "is-routine", url: "/routine/is-routine" }
,
{ category: "method", value: "is-setting", url: "/routine/is-setting" }
,
{ category: "method", value: "is-win", url: "/routine/is-win" }
,
{ category: "Routine", value: "isNaN", url: "/routine/isNaN" }
,
{ category: "sub", value: "is_approx", url: "/routine/is_approx" }
,
{ category: "method", value: "is_composed", url: "/routine/is_composed" }
,
{ category: "method", value: "is_trusted", url: "/routine/is_trusted" }
,
{ category: "method", value: "is_type", url: "/routine/is_type" }
,
{ category: "routine", value: "isa", url: "/routine/isa" }
,
{ category: "sub", value: "isa-ok", url: "/routine/isa-ok" }
,
{ category: "sub", value: "isnt", url: "/routine/isnt" }
,
{ category: "Routine", value: "item", url: "/routine/item" }
,
{ category: "Routine", value: "iterator", url: "/routine/iterator" }
,
{ category: "Routine", value: "join", url: "/routine/join" }
,
{ category: "method", value: "keep", url: "/routine/keep" }
,
{ category: "method", value: "kept", url: "/routine/kept" }
,
{ category: "Routine", value: "key", url: "/routine/key" }
,
{ category: "Routine", value: "keyof", url: "/routine/keyof" }
,
{ category: "Routine", value: "keys", url: "/routine/keys" }
,
{ category: "method", value: "kill", url: "/routine/kill" }
,
{ category: "Routine", value: "kv", url: "/routine/kv" }
,
{ category: "method", value: "kxxv", url: "/routine/kxxv" }
,
{ category: "Routine", value: "l", url: "/routine/l" }
,
{ category: "method", value: "lang", url: "/routine/lang" }
,
{ category: "method", value: "last", url: "/routine/last" }
,
{ category: "sub", value: "lastcall", url: "/routine/lastcall" }
,
{ category: "Routine", value: "later", url: "/routine/later" }
,
{ category: "method", value: "lazy", url: "/routine/lazy" }
,
{ category: "Routine", value: "lc", url: "/routine/lc" }
,
{ category: "infix", value: "lcm", url: "/routine/lcm" }
,
{ category: "infix", value: "le", url: "/routine/le" }
,
{ category: "method", value: "leading", url: "/routine/leading" }
,
{ category: "infix", value: "leg", url: "/routine/leg" }
,
{ category: "Routine", value: "let", url: "/routine/let" }
,
{ category: "Routine", value: "level", url: "/routine/level" }
,
{ category: "sub", value: "like", url: "/routine/like" }
,
{ category: "Routine", value: "line", url: "/routine/line" }
,
{ category: "Routine", value: "lines", url: "/routine/lines" }
,
{ category: "routine", value: "link", url: "/routine/link" }
,
{ category: "Routine", value: "list", url: "/routine/list" }
,
{ category: "method", value: "listen", url: "/routine/listen" }
,
{ category: "method", value: "live", url: "/routine/live" }
,
{ category: "sub", value: "lives-ok", url: "/routine/lives-ok" }
,
{ category: "Routine", value: "load", url: "/routine/load" }
,
{ category: "Routine", value: "loaded", url: "/routine/loaded" }
,
{ category: "method", value: "local", url: "/routine/local" }
,
{ category: "Routine", value: "lock", url: "/routine/lock" }
,
{ category: "Routine", value: "log", url: "/routine/log" }
,
{ category: "Routine", value: "log10", url: "/routine/log10" }
,
{ category: "Routine", value: "lookup", url: "/routine/lookup" }
,
{ category: "routine", value: "lsb", url: "/routine/lsb" }
,
{ category: "infix", value: "lt", url: "/routine/lt" }
,
{ category: "method", value: "made", url: "/routine/made" }
,
{ category: "method", value: "make", url: "/routine/make" }
,
{ category: "Routine", value: "map", url: "/routine/map" }
,
{ category: "Routine", value: "match", url: "/routine/match" }
,
{ category: "Routine", value: "max", url: "/routine/max" }
,
{ category: "Routine", value: "maxpairs", url: "/routine/maxpairs" }
,
{ category: "method", value: "merge", url: "/routine/merge" }
,
{ category: "Routine", value: "message", url: "/routine/message" }
,
{ category: "sub", value: "message Defined as:", url: "/routine/message Defined as:" }
,
{ category: "Routine", value: "meta", url: "/routine/meta" }
,
{ category: "Routine", value: "method", url: "/routine/method" }
,
{ category: "method", value: "method_table", url: "/routine/method_table" }
,
{ category: "method", value: "methods", url: "/routine/methods" }
,
{ category: "method", value: "migrate", url: "/routine/migrate" }
,
{ category: "Routine", value: "min", url: "/routine/min" }
,
{ category: "Routine", value: "minmax", url: "/routine/minmax" }
,
{ category: "Routine", value: "minpairs", url: "/routine/minpairs" }
,
{ category: "method", value: "minute", url: "/routine/minute" }
,
{ category: "method", value: "misplaced", url: "/routine/misplaced" }
,
{ category: "sub", value: "mix", url: "/routine/mix" }
,
{ category: "Routine", value: "mkdir", url: "/routine/mkdir" }
,
{ category: "infix", value: "mod", url: "/routine/mod" }
,
{ category: "Routine", value: "mode", url: "/routine/mode" }
,
{ category: "Routine", value: "modified", url: "/routine/modified" }
,
{ category: "method", value: "month", url: "/routine/month" }
,
{ category: "routine", value: "move", url: "/routine/move" }
,
{ category: "method", value: "mro", url: "/routine/mro" }
,
{ category: "method", value: "mro_unhidden", url: "/routine/mro_unhidden" }
,
{ category: "routine", value: "msb", url: "/routine/msb" }
,
{ category: "method", value: "multi", url: "/routine/multi" }
,
{ category: "method", value: "multiness", url: "/routine/multiness" }
,
{ category: "method", value: "my", url: "/routine/my" }
,
{ category: "Routine", value: "name", url: "/routine/name" }
,
{ category: "method", value: "named", url: "/routine/named" }
,
{ category: "method", value: "named_names", url: "/routine/named_names" }
,
{ category: "method", value: "narrow", url: "/routine/narrow" }
,
{ category: "Routine", value: "native-descriptor", url: "/routine/native-descriptor" }
,
{ category: "sub", value: "nativecast", url: "/routine/nativecast" }
,
{ category: "sub", value: "nativesizeof", url: "/routine/nativesizeof" }
,
{ category: "infix", value: "ne", url: "/routine/ne" }
,
{ category: "Routine", value: "need", url: "/routine/need" }
,
{ category: "Routine", value: "new", url: "/routine/new" }
,
{ category: "method", value: "new-from-daycount", url: "/routine/new-from-daycount" }
,
{ category: "Routine", value: "new-from-pairs", url: "/routine/new-from-pairs" }
,
{ category: "Routine", value: "new_type", url: "/routine/new_type" }
,
{ category: "method", value: "next", url: "/routine/next" }
,
{ category: "method", value: "next-handle", url: "/routine/next-handle" }
,
{ category: "method", value: "next-interesting-index", url: "/routine/next-interesting-index" }
,
{ category: "sub", value: "nextcallee", url: "/routine/nextcallee" }
,
{ category: "sub", value: "nextsame", url: "/routine/nextsame" }
,
{ category: "sub", value: "nextwith", url: "/routine/nextwith" }
,
{ category: "method", value: "nice", url: "/routine/nice" }
,
{ category: "Routine", value: "nl-in", url: "/routine/nl-in" }
,
{ category: "Routine", value: "nl-out", url: "/routine/nl-out" }
,
{ category: "method", value: "nodemap", url: "/routine/nodemap" }
,
{ category: "sub", value: "nok", url: "/routine/nok" }
,
{ category: "method", value: "none", url: "/routine/none" }
,
{ category: "method", value: "norm", url: "/routine/norm" }
,
{ category: "Routine", value: "not", url: "/routine/not" }
,
{ category: "infix", value: "notandthen", url: "/routine/notandthen" }
,
{ category: "routine", value: "note", url: "/routine/note" }
,
{ category: "Routine", value: "now", url: "/routine/now" }
,
{ category: "method", value: "nude", url: "/routine/nude" }
,
{ category: "method", value: "numerator", url: "/routine/numerator" }
,
{ category: "Routine", value: "of", url: "/routine/of" }
,
{ category: "method", value: "offset", url: "/routine/offset" }
,
{ category: "method", value: "offset-in-hours", url: "/routine/offset-in-hours" }
,
{ category: "method", value: "offset-in-minutes", url: "/routine/offset-in-minutes" }
,
{ category: "sub", value: "ok", url: "/routine/ok" }
,
{ category: "method", value: "old", url: "/routine/old" }
,
{ category: "method", value: "on-close", url: "/routine/on-close" }
,
{ category: "method", value: "on-switch", url: "/routine/on-switch" }
,
{ category: "method", value: "one", url: "/routine/one" }
,
{ category: "Routine", value: "open", url: "/routine/open" }
,
{ category: "Routine", value: "opened", url: "/routine/opened" }
,
{ category: "method", value: "operation", url: "/routine/operation" }
,
{ category: "method", value: "optional", url: "/routine/optional" }
,
{ category: "infix", value: "or", url: "/routine/or" }
,
{ category: "Routine", value: "ord", url: "/routine/ord" }
,
{ category: "Routine", value: "ords", url: "/routine/ords" }
,
{ category: "infix", value: "orelse", url: "/routine/orelse" }
,
{ category: "method", value: "orig", url: "/routine/orig" }
,
{ category: "method", value: "os-error", url: "/routine/os-error" }
,
{ category: "method", value: "osname", url: "/routine/osname" }
,
{ category: "Routine", value: "out-buffer", url: "/routine/out-buffer" }
,
{ category: "method", value: "outer-caller-idx", url: "/routine/outer-caller-idx" }
,
{ category: "sub", value: "pack", url: "/routine/pack" }
,
{ category: "Routine", value: "package", url: "/routine/package" }
,
{ category: "Routine", value: "package-kind", url: "/routine/package-kind" }
,
{ category: "method", value: "package-name", url: "/routine/package-name" }
,
{ category: "method", value: "packages", url: "/routine/packages" }
,
{ category: "method", value: "pair", url: "/routine/pair" }
,
{ category: "Routine", value: "pairs", url: "/routine/pairs" }
,
{ category: "method", value: "pairup", url: "/routine/pairup" }
,
{ category: "Routine", value: "parameter", url: "/routine/parameter" }
,
{ category: "method", value: "params", url: "/routine/params" }
,
{ category: "Routine", value: "parent", url: "/routine/parent" }
,
{ category: "method", value: "parent-name", url: "/routine/parent-name" }
,
{ category: "method", value: "parents", url: "/routine/parents" }
,
{ category: "method", value: "parse", url: "/routine/parse" }
,
{ category: "routine", value: "parse-base", url: "/routine/parse-base" }
,
{ category: "routine", value: "parse-names", url: "/routine/parse-names" }
,
{ category: "method", value: "parsefile", url: "/routine/parsefile" }
,
{ category: "Routine", value: "parts", url: "/routine/parts" }
,
{ category: "sub", value: "pass", url: "/routine/pass" }
,
{ category: "Routine", value: "path", url: "/routine/path" }
,
{ category: "method", value: "path-sep", url: "/routine/path-sep" }
,
{ category: "method", value: "payload", url: "/routine/payload" }
,
{ category: "method", value: "peer-host", url: "/routine/peer-host" }
,
{ category: "method", value: "peer-port", url: "/routine/peer-port" }
,
{ category: "routine", value: "periods", url: "/routine/periods" }
,
{ category: "Routine", value: "perl", url: "/routine/perl" }
,
{ category: "Routine", value: "permutations", url: "/routine/permutations" }
,
{ category: "method", value: "phaser", url: "/routine/phaser" }
,
{ category: "term", value: "pi", url: "/routine/pi" }
,
{ category: "Routine", value: "pick", url: "/routine/pick" }
,
{ category: "Routine", value: "pickpairs", url: "/routine/pickpairs" }
,
{ category: "Routine", value: "pid", url: "/routine/pid" }
,
{ category: "Routine", value: "placeholder", url: "/routine/placeholder" }
,
{ category: "sub", value: "plan", url: "/routine/plan" }
,
{ category: "method", value: "plus", url: "/routine/plus" }
,
{ category: "method", value: "polar", url: "/routine/polar" }
,
{ category: "method", value: "poll", url: "/routine/poll" }
,
{ category: "Routine", value: "polymod", url: "/routine/polymod" }
,
{ category: "Routine", value: "pop", url: "/routine/pop" }
,
{ category: "Routine", value: "pos", url: "/routine/pos" }
,
{ category: "method", value: "positional", url: "/routine/positional" }
,
{ category: "method", value: "posix", url: "/routine/posix" }
,
{ category: "method", value: "postfix", url: "/routine/postfix" }
,
{ category: "method", value: "postmatch", url: "/routine/postmatch" }
,
{ category: "method", value: "precomp-ext", url: "/routine/precomp-ext" }
,
{ category: "method", value: "precomp-target", url: "/routine/precomp-target" }
,
{ category: "method", value: "precompiled", url: "/routine/precompiled" }
,
{ category: "Routine", value: "pred", url: "/routine/pred" }
,
{ category: "Routine", value: "prefix", url: "/routine/prefix" }
,
{ category: "method", value: "prematch", url: "/routine/prematch" }
,
{ category: "Routine", value: "prepend", url: "/routine/prepend" }
,
{ category: "method", value: "primary", url: "/routine/primary" }
,
{ category: "Routine", value: "print", url: "/routine/print" }
,
{ category: "Routine", value: "print-nl", url: "/routine/print-nl" }
,
{ category: "method", value: "print-to", url: "/routine/print-to" }
,
{ category: "Routine", value: "printf", url: "/routine/printf" }
,
{ category: "method", value: "private", url: "/routine/private" }
,
{ category: "method", value: "private_method_table", url: "/routine/private_method_table" }
,
{ category: "Routine", value: "proc", url: "/routine/proc" }
,
{ category: "Routine", value: "produce", url: "/routine/produce" }
,
{ category: "Routine", value: "promise", url: "/routine/promise" }
,
{ category: "sub", value: "prompt", url: "/routine/prompt" }
,
{ category: "Routine", value: "protect", url: "/routine/protect" }
,
{ category: "method", value: "protect-or-queue-on-recursion", url: "/routine/protect-or-queue-on-recursion" }
,
{ category: "method", value: "publish_method_cache", url: "/routine/publish_method_cache" }
,
{ category: "method", value: "pull-one", url: "/routine/pull-one" }
,
{ category: "Routine", value: "push", url: "/routine/push" }
,
{ category: "method", value: "push-all", url: "/routine/push-all" }
,
{ category: "method", value: "push-at-least", url: "/routine/push-at-least" }
,
{ category: "method", value: "push-exactly", url: "/routine/push-exactly" }
,
{ category: "method", value: "push-until-lazy", url: "/routine/push-until-lazy" }
,
{ category: "Routine", value: "put", url: "/routine/put" }
,
{ category: "method", value: "qualifier-type", url: "/routine/qualifier-type" }
,
{ category: "method", value: "quaternary", url: "/routine/quaternary" }
,
{ category: "method", value: "quit", url: "/routine/quit" }
,
{ category: "Routine", value: "r", url: "/routine/r" }
,
{ category: "Routine", value: "race", url: "/routine/race" }
,
{ category: "method", value: "radix", url: "/routine/radix" }
,
{ category: "Routine", value: "rand", url: "/routine/rand" }
,
{ category: "method", value: "range", url: "/routine/range" }
,
{ category: "method", value: "raw", url: "/routine/raw" }
,
{ category: "method", value: "re", url: "/routine/re" }
,
{ category: "Routine", value: "read", url: "/routine/read" }
,
{ category: "method", value: "read-bits", url: "/routine/read-bits" }
,
{ category: "method", value: "read-int128", url: "/routine/read-int128" }
,
{ category: "method", value: "read-int16", url: "/routine/read-int16" }
,
{ category: "method", value: "read-int32", url: "/routine/read-int32" }
,
{ category: "method", value: "read-int64", url: "/routine/read-int64" }
,
{ category: "method", value: "read-int8", url: "/routine/read-int8" }
,
{ category: "method", value: "read-num32", url: "/routine/read-num32" }
,
{ category: "method", value: "read-num64", url: "/routine/read-num64" }
,
{ category: "method", value: "read-ubits", url: "/routine/read-ubits" }
,
{ category: "method", value: "read-uint128", url: "/routine/read-uint128" }
,
{ category: "method", value: "read-uint16", url: "/routine/read-uint16" }
,
{ category: "method", value: "read-uint32", url: "/routine/read-uint32" }
,
{ category: "method", value: "read-uint64", url: "/routine/read-uint64" }
,
{ category: "method", value: "read-uint8", url: "/routine/read-uint8" }
,
{ category: "Routine", value: "readchars", url: "/routine/readchars" }
,
{ category: "Routine", value: "readonly", url: "/routine/readonly" }
,
{ category: "method", value: "ready", url: "/routine/ready" }
,
{ category: "method", value: "reallocate", url: "/routine/reallocate" }
,
{ category: "method", value: "reals", url: "/routine/reals" }
,
{ category: "Routine", value: "reason", url: "/routine/reason" }
,
{ category: "method", value: "rebless", url: "/routine/rebless" }
,
{ category: "method", value: "receive", url: "/routine/receive" }
,
{ category: "method", value: "recv", url: "/routine/recv" }
,
{ category: "method", value: "redispatcher", url: "/routine/redispatcher" }
,
{ category: "method", value: "redo", url: "/routine/redo" }
,
{ category: "Routine", value: "reduce", url: "/routine/reduce" }
,
{ category: "Routine", value: "rel2abs", url: "/routine/rel2abs" }
,
{ category: "method", value: "relative", url: "/routine/relative" }
,
{ category: "Routine", value: "release", url: "/routine/release" }
,
{ category: "routine", value: "rename", url: "/routine/rename" }
,
{ category: "Routine", value: "repeated", url: "/routine/repeated" }
,
{ category: "method", value: "replacement", url: "/routine/replacement" }
,
{ category: "method", value: "repo", url: "/routine/repo" }
,
{ category: "method", value: "repo-id", url: "/routine/repo-id" }
,
{ category: "routine", value: "report", url: "/routine/report" }
,
{ category: "method", value: "required", url: "/routine/required" }
,
{ category: "method", value: "reserved", url: "/routine/reserved" }
,
{ category: "Routine", value: "resolve", url: "/routine/resolve" }
,
{ category: "method", value: "restore", url: "/routine/restore" }
,
{ category: "method", value: "result", url: "/routine/result" }
,
{ category: "method", value: "resume", url: "/routine/resume" }
,
{ category: "method", value: "rethrow", url: "/routine/rethrow" }
,
{ category: "method", value: "return", url: "/routine/return" }
,
{ category: "method", value: "return-rw", url: "/routine/return-rw" }
,
{ category: "method", value: "returns", url: "/routine/returns" }
,
{ category: "Routine", value: "reverse", url: "/routine/reverse" }
,
{ category: "method", value: "right", url: "/routine/right" }
,
{ category: "Routine", value: "rindex", url: "/routine/rindex" }
,
{ category: "routine", value: "rmdir", url: "/routine/rmdir" }
,
{ category: "method", value: "role", url: "/routine/role" }
,
{ category: "method", value: "roles_to_compose", url: "/routine/roles_to_compose" }
,
{ category: "method", value: "rolish", url: "/routine/rolish" }
,
{ category: "Routine", value: "roll", url: "/routine/roll" }
,
{ category: "Routine", value: "rootdir", url: "/routine/rootdir" }
,
{ category: "Routine", value: "roots", url: "/routine/roots" }
,
{ category: "routine", value: "rotate", url: "/routine/rotate" }
,
{ category: "Routine", value: "rotor", url: "/routine/rotor" }
,
{ category: "Routine", value: "round", url: "/routine/round" }
,
{ category: "routine", value: "roundrobin", url: "/routine/roundrobin" }
,
{ category: "method", value: "routine-type", url: "/routine/routine-type" }
,
{ category: "Routine", value: "run", url: "/routine/run" }
,
{ category: "Routine", value: "rw", url: "/routine/rw" }
,
{ category: "method", value: "rwx", url: "/routine/rwx" }
,
{ category: "Routine", value: "s", url: "/routine/s" }
,
{ category: "routine", value: "samecase", url: "/routine/samecase" }
,
{ category: "routine", value: "samemark", url: "/routine/samemark" }
,
{ category: "sub", value: "samewith", url: "/routine/samewith" }
,
{ category: "Routine", value: "say", url: "/routine/say" }
,
{ category: "method", value: "schedule-on", url: "/routine/schedule-on" }
,
{ category: "method", value: "scheduler", url: "/routine/scheduler" }
,
{ category: "Routine", value: "scope", url: "/routine/scope" }
,
{ category: "routine", value: "sec", url: "/routine/sec" }
,
{ category: "routine", value: "sech", url: "/routine/sech" }
,
{ category: "method", value: "second", url: "/routine/second" }
,
{ category: "method", value: "secondary", url: "/routine/secondary" }
,
{ category: "Routine", value: "seek", url: "/routine/seek" }
,
{ category: "Routine", value: "self", url: "/routine/self" }
,
{ category: "method", value: "send", url: "/routine/send" }
,
{ category: "Routine", value: "serial", url: "/routine/serial" }
,
{ category: "sub", value: "set", url: "/routine/set" }
,
{ category: "method", value: "set-instruments", url: "/routine/set-instruments" }
,
{ category: "method", value: "set_api", url: "/routine/set_api" }
,
{ category: "method", value: "set_auth", url: "/routine/set_auth" }
,
{ category: "method", value: "set_composalizer", url: "/routine/set_composalizer" }
,
{ category: "method", value: "set_export_callback", url: "/routine/set_export_callback" }
,
{ category: "method", value: "set_hidden", url: "/routine/set_hidden" }
,
{ category: "method", value: "set_name", url: "/routine/set_name" }
,
{ category: "method", value: "set_package", url: "/routine/set_package" }
,
{ category: "method", value: "set_rw", url: "/routine/set_rw" }
,
{ category: "method", value: "set_value", url: "/routine/set_value" }
,
{ category: "method", value: "set_ver", url: "/routine/set_ver" }
,
{ category: "method", value: "setup_finalization", url: "/routine/setup_finalization" }
,
{ category: "method", value: "shape", url: "/routine/shape" }
,
{ category: "method", value: "share", url: "/routine/share" }
,
{ category: "Routine", value: "shell", url: "/routine/shell" }
,
{ category: "Routine", value: "shift", url: "/routine/shift" }
,
{ category: "Routine", value: "short-id", url: "/routine/short-id" }
,
{ category: "method", value: "short-name", url: "/routine/short-name" }
,
{ category: "method", value: "sibling", url: "/routine/sibling" }
,
{ category: "method", value: "sigil", url: "/routine/sigil" }
,
{ category: "Routine", value: "sign", url: "/routine/sign" }
,
{ category: "Routine", value: "signal", url: "/routine/signal" }
,
{ category: "method", value: "signals", url: "/routine/signals" }
,
{ category: "Routine", value: "signature", url: "/routine/signature" }
,
{ category: "routine", value: "sin", url: "/routine/sin" }
,
{ category: "routine", value: "sinh", url: "/routine/sinh" }
,
{ category: "Routine", value: "sink", url: "/routine/sink" }
,
{ category: "method", value: "sink-all", url: "/routine/sink-all" }
,
{ category: "Routine", value: "skip", url: "/routine/skip" }
,
{ category: "method", value: "skip-at-least", url: "/routine/skip-at-least" }
,
{ category: "method", value: "skip-at-least-pull-one", url: "/routine/skip-at-least-pull-one" }
,
{ category: "method", value: "skip-one", url: "/routine/skip-one" }
,
{ category: "sub", value: "skip-rest", url: "/routine/skip-rest" }
,
{ category: "sub", value: "sleep", url: "/routine/sleep" }
,
{ category: "sub", value: "sleep-timer", url: "/routine/sleep-timer" }
,
{ category: "sub", value: "sleep-until", url: "/routine/sleep-until" }
,
{ category: "sub", value: "slip", url: "/routine/slip" }
,
{ category: "Routine", value: "slurp", url: "/routine/slurp" }
,
{ category: "method", value: "slurp-rest", url: "/routine/slurp-rest" }
,
{ category: "method", value: "slurpy", url: "/routine/slurpy" }
,
{ category: "routine", value: "snap", url: "/routine/snap" }
,
{ category: "routine", value: "snapper", url: "/routine/snapper" }
,
{ category: "Routine", value: "so", url: "/routine/so" }
,
{ category: "method", value: "socket-host", url: "/routine/socket-host" }
,
{ category: "method", value: "socket-port", url: "/routine/socket-port" }
,
{ category: "Routine", value: "sort", url: "/routine/sort" }
,
{ category: "Routine", value: "source", url: "/routine/source" }
,
{ category: "method", value: "source-package", url: "/routine/source-package" }
,
{ category: "method", value: "spawn", url: "/routine/spawn" }
,
{ category: "Routine", value: "splice", url: "/routine/splice" }
,
{ category: "Routine", value: "split", url: "/routine/split" }
,
{ category: "Routine", value: "splitdir", url: "/routine/splitdir" }
,
{ category: "Routine", value: "splitpath", url: "/routine/splitpath" }
,
{ category: "routine", value: "sprintf", url: "/routine/sprintf" }
,
{ category: "Routine", value: "spurt", url: "/routine/spurt" }
,
{ category: "Routine", value: "sqrt", url: "/routine/sqrt" }
,
{ category: "Routine", value: "squish", url: "/routine/squish" }
,
{ category: "sub", value: "srand", url: "/routine/srand" }
,
{ category: "method", value: "stable", url: "/routine/stable" }
,
{ category: "Routine", value: "start", url: "/routine/start" }
,
{ category: "method", value: "started", url: "/routine/started" }
,
{ category: "method", value: "starts-with", url: "/routine/starts-with" }
,
{ category: "Routine", value: "status", url: "/routine/status" }
,
{ category: "method", value: "stderr", url: "/routine/stderr" }
,
{ category: "method", value: "stdout", url: "/routine/stdout" }
,
{ category: "method", value: "sub_signature", url: "/routine/sub_signature" }
,
{ category: "method", value: "subbuf", url: "/routine/subbuf" }
,
{ category: "Routine", value: "subbuf-rw", url: "/routine/subbuf-rw" }
,
{ category: "method", value: "subname", url: "/routine/subname" }
,
{ category: "method", value: "subparse", url: "/routine/subparse" }
,
{ category: "Routine", value: "subst", url: "/routine/subst" }
,
{ category: "method", value: "subst-mutate", url: "/routine/subst-mutate" }
,
{ category: "Routine", value: "substr", url: "/routine/substr" }
,
{ category: "method", value: "substr-eq", url: "/routine/substr-eq" }
,
{ category: "Routine", value: "substr-rw", url: "/routine/substr-rw" }
,
{ category: "sub", value: "subtest", url: "/routine/subtest" }
,
{ category: "Routine", value: "succ", url: "/routine/succ" }
,
{ category: "Routine", value: "sum", url: "/routine/sum" }
,
{ category: "method", value: "summary", url: "/routine/summary" }
,
{ category: "Routine", value: "symbol", url: "/routine/symbol" }
,
{ category: "routine", value: "symlink", url: "/routine/symlink" }
,
{ category: "method", value: "t", url: "/routine/t" }
,
{ category: "method", value: "t  ", url: "/routine/t  " }
,
{ category: "Routine", value: "tail", url: "/routine/tail" }
,
{ category: "Routine", value: "take", url: "/routine/take" }
,
{ category: "routine", value: "take-rw", url: "/routine/take-rw" }
,
{ category: "routine", value: "tan", url: "/routine/tan" }
,
{ category: "routine", value: "tanh", url: "/routine/tanh" }
,
{ category: "method", value: "tap", url: "/routine/tap" }
,
{ category: "Routine", value: "target", url: "/routine/target" }
,
{ category: "method", value: "target-name", url: "/routine/target-name" }
,
{ category: "term", value: "tau", url: "/routine/tau" }
,
{ category: "Routine", value: "tc", url: "/routine/tc" }
,
{ category: "Routine", value: "tclc", url: "/routine/tclc" }
,
{ category: "Routine", value: "tell", url: "/routine/tell" }
,
{ category: "Routine", value: "temp", url: "/routine/temp" }
,
{ category: "method", value: "term", url: "/routine/term" }
,
{ category: "term", value: "term:<>", url: "/routine/term:<>" }
,
{ category: "method", value: "tertiary", url: "/routine/tertiary" }
,
{ category: "method", value: "then", url: "/routine/then" }
,
{ category: "method", value: "throttle", url: "/routine/throttle" }
,
{ category: "method", value: "throw", url: "/routine/throw" }
,
{ category: "sub", value: "throws-like", url: "/routine/throws-like" }
,
{ category: "term", value: "time", url: "/routine/time" }
,
{ category: "method", value: "timezone", url: "/routine/timezone" }
,
{ category: "Routine", value: "tmpdir", url: "/routine/tmpdir" }
,
{ category: "Routine", value: "to", url: "/routine/to" }
,
{ category: "method", value: "to-posix", url: "/routine/to-posix" }
,
{ category: "method", value: "today", url: "/routine/today" }
,
{ category: "sub", value: "todo", url: "/routine/todo" }
,
{ category: "method", value: "toggle", url: "/routine/toggle" }
,
{ category: "Routine", value: "total", url: "/routine/total" }
,
{ category: "method", value: "total-memory", url: "/routine/total-memory" }
,
{ category: "method", value: "trailing", url: "/routine/trailing" }
,
{ category: "Routine", value: "trans", url: "/routine/trans" }
,
{ category: "method", value: "tree", url: "/routine/tree" }
,
{ category: "Routine", value: "trim", url: "/routine/trim" }
,
{ category: "Routine", value: "trim-leading", url: "/routine/trim-leading" }
,
{ category: "Routine", value: "trim-trailing", url: "/routine/trim-trailing" }
,
{ category: "Routine", value: "truncate", url: "/routine/truncate" }
,
{ category: "Routine", value: "truncated-to", url: "/routine/truncated-to" }
,
{ category: "Routine", value: "trusts", url: "/routine/trusts" }
,
{ category: "method", value: "try_acquire", url: "/routine/try_acquire" }
,
{ category: "method", value: "trying", url: "/routine/trying" }
,
{ category: "Routine", value: "twigil", url: "/routine/twigil" }
,
{ category: "Routine", value: "type", url: "/routine/type" }
,
{ category: "method", value: "type_captures", url: "/routine/type_captures" }
,
{ category: "Routine", value: "typename", url: "/routine/typename" }
,
{ category: "Routine", value: "uc", url: "/routine/uc" }
,
{ category: "method", value: "udp", url: "/routine/udp" }
,
{ category: "method", value: "uncaught_handler", url: "/routine/uncaught_handler" }
,
{ category: "sub", value: "undefine", url: "/routine/undefine" }
,
{ category: "infix", value: "unicmp", url: "/routine/unicmp" }
,
{ category: "routine", value: "unimatch", url: "/routine/unimatch" }
,
{ category: "routine", value: "uniname", url: "/routine/uniname" }
,
{ category: "routine", value: "uninames", url: "/routine/uninames" }
,
{ category: "method", value: "uninstall", url: "/routine/uninstall" }
,
{ category: "routine", value: "uniparse", url: "/routine/uniparse" }
,
{ category: "routine", value: "uniprop", url: "/routine/uniprop" }
,
{ category: "sub", value: "uniprops", url: "/routine/uniprops" }
,
{ category: "Routine", value: "unique", url: "/routine/unique" }
,
{ category: "Routine", value: "unival", url: "/routine/unival" }
,
{ category: "method", value: "univals", url: "/routine/univals" }
,
{ category: "sub", value: "unlike", url: "/routine/unlike" }
,
{ category: "routine", value: "unlink", url: "/routine/unlink" }
,
{ category: "Routine", value: "unlock", url: "/routine/unlock" }
,
{ category: "method", value: "unpack", url: "/routine/unpack" }
,
{ category: "Routine", value: "unpolar", url: "/routine/unpolar" }
,
{ category: "Routine", value: "unshift", url: "/routine/unshift" }
,
{ category: "method", value: "unwrap", url: "/routine/unwrap" }
,
{ category: "method", value: "updir", url: "/routine/updir" }
,
{ category: "sub", value: "use-ok", url: "/routine/use-ok" }
,
{ category: "method", value: "utc", url: "/routine/utc" }
,
{ category: "routine", value: "val", url: "/routine/val" }
,
{ category: "Routine", value: "value", url: "/routine/value" }
,
{ category: "Routine", value: "values", url: "/routine/values" }
,
{ category: "method", value: "variable", url: "/routine/variable" }
,
{ category: "method", value: "ver", url: "/routine/ver" }
,
{ category: "method", value: "verbose-config", url: "/routine/verbose-config" }
,
{ category: "Routine", value: "version", url: "/routine/version" }
,
{ category: "method", value: "volume", url: "/routine/volume" }
,
{ category: "method", value: "vow", url: "/routine/vow" }
,
{ category: "Routine", value: "w", url: "/routine/w" }
,
{ category: "method", value: "wait", url: "/routine/wait" }
,
{ category: "sub", value: "warn", url: "/routine/warn" }
,
{ category: "method", value: "watch", url: "/routine/watch" }
,
{ category: "method", value: "watch-path", url: "/routine/watch-path" }
,
{ category: "method", value: "week", url: "/routine/week" }
,
{ category: "method", value: "week-number", url: "/routine/week-number" }
,
{ category: "method", value: "week-year", url: "/routine/week-year" }
,
{ category: "method", value: "weekday-of-month", url: "/routine/weekday-of-month" }
,
{ category: "Routine", value: "what", url: "/routine/what" }
,
{ category: "method", value: "when", url: "/routine/when" }
,
{ category: "method", value: "whole-second", url: "/routine/whole-second" }
,
{ category: "method", value: "why", url: "/routine/why" }
,
{ category: "method", value: "with-lock-hidden-from-recursion-check", url: "/routine/with-lock-hidden-from-recursion-check" }
,
{ category: "Routine", value: "wordcase", url: "/routine/wordcase" }
,
{ category: "Routine", value: "words", url: "/routine/words" }
,
{ category: "method", value: "workaround", url: "/routine/workaround" }
,
{ category: "method", value: "wrap", url: "/routine/wrap" }
,
{ category: "Routine", value: "write", url: "/routine/write" }
,
{ category: "Routine", value: "write-bits", url: "/routine/write-bits" }
,
{ category: "Routine", value: "write-int128", url: "/routine/write-int128" }
,
{ category: "Routine", value: "write-int16", url: "/routine/write-int16" }
,
{ category: "Routine", value: "write-int32", url: "/routine/write-int32" }
,
{ category: "Routine", value: "write-int64", url: "/routine/write-int64" }
,
{ category: "Routine", value: "write-int8", url: "/routine/write-int8" }
,
{ category: "Routine", value: "write-num32", url: "/routine/write-num32" }
,
{ category: "Routine", value: "write-num64", url: "/routine/write-num64" }
,
{ category: "method", value: "write-to", url: "/routine/write-to" }
,
{ category: "Routine", value: "write-ubits", url: "/routine/write-ubits" }
,
{ category: "Routine", value: "write-uint128", url: "/routine/write-uint128" }
,
{ category: "Routine", value: "write-uint16", url: "/routine/write-uint16" }
,
{ category: "Routine", value: "write-uint32", url: "/routine/write-uint32" }
,
{ category: "Routine", value: "write-uint64", url: "/routine/write-uint64" }
,
{ category: "Routine", value: "write-uint8", url: "/routine/write-uint8" }
,
{ category: "Routine", value: "x", url: "/routine/x" }
,
{ category: "infix", value: "xor", url: "/routine/xor" }
,
{ category: "infix", value: "xx", url: "/routine/xx" }
,
{ category: "method", value: "yada", url: "/routine/yada" }
,
{ category: "method", value: "year", url: "/routine/year" }
,
{ category: "method", value: "yield", url: "/routine/yield" }
,
{ category: "method", value: "yyyy-mm-dd", url: "/routine/yyyy-mm-dd" }
,
{ category: "method", value: "z", url: "/routine/z" }
,
{ category: "Routine", value: "zip", url: "/routine/zip" }
,
{ category: "method", value: "zip-latest", url: "/routine/zip-latest" }
,
{ category: "Routine", value: "{ }", url: "/routine/{ }" }
,
{ category: "Routine", value: "|", url: "/routine/|" }
,
{ category: "infix", value: "||", url: "/routine/||" }
,
{ category: "Routine", value: "~", url: "/routine/~" }
,
{ category: "infix", value: "~&", url: "/routine/~&" }
,
{ category: "infix", value: "~<", url: "/routine/~<" }
,
{ category: "infix", value: "~>", url: "/routine/~>" }
,
{ category: "Routine", value: "~^", url: "/routine/~$CIRCUMFLEX_ACCENT" }
,
{ category: "infix", value: "~|", url: "/routine/~|" }
,
{ category: "infix", value: "~~", url: "/routine/~~" }
,
{ category: "postcircumfix", value: "¬´ ¬ª", url: "/routine/¬´ ¬ª" }
,
{ category: "term", value: "œÄ", url: "/routine/œÄ" }
,
{ category: "term", value: "œÑ", url: "/routine/œÑ" }
,
{ category: "Routine", value: "‚àÖ", url: "/routine/‚àÖ" }
,
{ category: "Routine", value: "‚àâ", url: "/routine/‚àâ" }
,
{ category: "Routine", value: "‚àå", url: "/routine/‚àå" }
,
{ category: "infix", value: "‚àò", url: "/routine/‚àò" }
,
{ category: "infix", value: "‚â†", url: "/routine/‚â†" }
,
{ category: "infix", value: "‚â§", url: "/routine/‚â§" }
,
{ category: "infix", value: "‚â•", url: "/routine/‚â•" }
,
{ category: "Routine", value: "‚äÑ", url: "/routine/‚äÑ" }
,
{ category: "Routine", value: "‚äÖ", url: "/routine/‚äÖ" }
,
{ category: "Routine", value: "‚äà", url: "/routine/‚äà" }
,
{ category: "Routine", value: "‚äâ", url: "/routine/‚äâ" }
,
{ category: "Routine", value: "‚öõ", url: "/routine/‚öõ" }
,
{ category: "postfix", value: "‚öõ++", url: "/routine/‚öõ++" }
,
{ category: "infix", value: "‚öõ+=", url: "/routine/‚öõ+=" }
,
{ category: "postfix", value: "‚öõ--", url: "/routine/‚öõ--" }
,
{ category: "infix", value: "‚öõ-=", url: "/routine/‚öõ-=" }
,
{ category: "Routine", value: "‚öõ=", url: "/routine/‚öõ=" }
,
{ category: "infix", value: "‚öõ‚àí=", url: "/routine/‚öõ‚àí=" }
,
{ category: "term", value: "ùëí", url: "/routine/ùëí" }
,
{ category: "twigil", value: "!", url: "/syntax/!" }
,
{ category: "variable", value: "$", url: "/syntax/$" }
,
{ category: "variable", value: "$!", url: "/syntax/$!" }
,
{ category: "variable", value: "$\/", url: "/syntax/$$SOLIDUS" }
,
{ category: "variable", value: "$0", url: "/syntax/$0" }
,
{ category: "variable", value: "$<named>", url: "/syntax/$<named>" }
,
{ category: "syntax", value: "$?DISTRIBUTION", url: "/syntax/$%3FDISTRIBUTION" }
,
{ category: "variable", value: "$_", url: "/syntax/$_" }
,
{ category: "syntax", value: "%", url: "/syntax/$PERCENT_SIGN" }
,
{ category: "regex", value: "&", url: "/syntax/&" }
,
{ category: "regex", value: "&&", url: "/syntax/&&" }
,
{ category: "syntax", value: "&?BLOCK", url: "/syntax/&%3FBLOCK" }
,
{ category: "syntax", value: "&?ROUTINE", url: "/syntax/&%3FROUTINE" }
,
{ category: "regex", value: "( )", url: "/syntax/( )" }
,
{ category: "syntax", value: "*", url: "/syntax/*" }
,
{ category: "regex quantifier", value: "**", url: "/syntax/**" }
,
{ category: "parameter", value: "**@", url: "/syntax/**@" }
,
{ category: "regex quantifier", value: "+", url: "/syntax/+" }
,
{ category: "syntax", value: "->", url: "/syntax/->" }
,
{ category: "syntax", value: ".", url: "/syntax/." }
,
{ category: "quote", value: "\/ \/", url: "/syntax/$SOLIDUS $SOLIDUS" }
,
{ category: "syntax", value: ":", url: "/syntax/:" }
,
{ category: "matching adverb", value: ":1st", url: "/syntax/:1st" }
,
{ category: "matching adverb", value: ":continue", url: "/syntax/:continue" }
,
{ category: "matching adverb", value: ":exhaustive", url: "/syntax/:exhaustive" }
,
{ category: "matching adverb", value: ":global", url: "/syntax/:global" }
,
{ category: "regex adverb", value: ":ignorecase", url: "/syntax/:ignorecase" }
,
{ category: "regex adverb", value: ":ignoremark", url: "/syntax/:ignoremark" }
,
{ category: "matching adverb", value: ":overlap", url: "/syntax/:overlap" }
,
{ category: "matching adverb", value: ":pos", url: "/syntax/:pos" }
,
{ category: "regex adverb", value: ":ratchet", url: "/syntax/:ratchet" }
,
{ category: "substitution adverb", value: ":samecase", url: "/syntax/:samecase" }
,
{ category: "substitution adverb", value: ":samemark", url: "/syntax/:samemark" }
,
{ category: "substitution adverb", value: ":samespace", url: "/syntax/:samespace" }
,
{ category: "regex adverb", value: ":sigspace", url: "/syntax/:sigspace" }
,
{ category: "regex", value: "<( )>", url: "/syntax/<( )>" }
,
{ category: "regex", value: "<:property>", url: "/syntax/<:property>" }
,
{ category: "hyper", value: "<<", url: "/syntax/<<" }
,
{ category: "quote", value: "<< >>", url: "/syntax/<< >>" }
,
{ category: "regex", value: "<[ ]>", url: "/syntax/<[ ]>" }
,
{ category: "regex", value: "<|w>", url: "/syntax/<|w>" }
,
{ category: "twigil", value: "=", url: "/syntax/=" }
,
{ category: "syntax", value: "?", url: "/syntax/%3F" }
,
{ category: "variable", value: "@", url: "/syntax/@" }
,
{ category: "Phasers", value: "BEGIN", url: "/syntax/BEGIN" }
,
{ category: "Phasers", value: "CATCH", url: "/syntax/CATCH" }
,
{ category: "Phasers", value: "CHECK", url: "/syntax/CHECK" }
,
{ category: "Asynchronous Phasers", value: "CLOSE", url: "/syntax/CLOSE" }
,
{ category: "Phasers", value: "CONTROL", url: "/syntax/CONTROL" }
,
{ category: "Python", value: "Classes and objects", url: "/syntax/Classes and objects" }
,
{ category: "syntax", value: "Coercion type", url: "/syntax/Coercion type" }
,
{ category: "Python", value: "Context managers", url: "/syntax/Context managers" }
,
{ category: "Python", value: "Control flow", url: "/syntax/Control flow" }
,
{ category: "syntax", value: "Creating grammars", url: "/syntax/Creating grammars" }
,
{ category: "syntax", value: "DEFINITE", url: "/syntax/DEFINITE" }
,
{ category: "Asynchronous Phasers", value: "DOC", url: "/syntax/DOC" }
,
{ category: "Python", value: "Decorators", url: "/syntax/Decorators" }
,
{ category: "Phasers", value: "END", url: "/syntax/END" }
,
{ category: "Phasers", value: "ENTER", url: "/syntax/ENTER" }
,
{ category: "constant", value: "Empty", url: "/syntax/Empty" }
,
{ category: "Phasers", value: "FIRST", url: "/syntax/FIRST" }
,
{ category: "syntax", value: "HOW", url: "/syntax/HOW" }
,
{ category: "Phasers", value: "INIT", url: "/syntax/INIT" }
,
{ category: "p6doc", value: "INTRODUCTION", url: "/syntax/INTRODUCTION" }
,
{ category: "Phasers", value: "KEEP", url: "/syntax/KEEP" }
,
{ category: "syntax", value: "LAST", url: "/syntax/LAST" }
,
{ category: "Phasers", value: "LEAVE", url: "/syntax/LEAVE" }
,
{ category: "Python", value: "Lambdas, functions and subroutines", url: "/syntax/Lambdas, functions and subroutines" }
,
{ category: "Python", value: "List comprehensions", url: "/syntax/List comprehensions" }
,
{ category: "syntax", value: "Long names", url: "/syntax/Long names" }
,
{ category: "Phasers", value: "NEXT", url: "/syntax/NEXT" }
,
{ category: "regex", value: "Named captures", url: "/syntax/Named captures" }
,
{ category: "syntax", value: "Number literals", url: "/syntax/Number literals" }
,
{ category: "syntax", value: "Overriding default gist method", url: "/syntax/Overriding default gist method" }
,
{ category: "Phasers", value: "POST", url: "/syntax/POST" }
,
{ category: "Phasers", value: "PRE", url: "/syntax/PRE" }
,
{ category: "syntax", value: "Pair literals", url: "/syntax/Pair literals" }
,
{ category: "control flow", value: "Phasers", url: "/syntax/Phasers" }
,
{ category: ":sym<>", value: "Proto regexes", url: "/syntax/Proto regexes" }
,
{ category: "quote", value: "Q", url: "/syntax/Q" }
,
{ category: "Asynchronous Phasers", value: "QUIT", url: "/syntax/QUIT" }
,
{ category: "regex", value: "Regex Interpolation", url: "/syntax/Regex Interpolation" }
,
{ category: "syntax", value: "Running programs", url: "/syntax/Running programs" }
,
{ category: "syntax", value: "S\/\/\/", url: "/syntax/S$SOLIDUS$SOLIDUS$SOLIDUS" }
,
{ category: "syntax", value: "SAP", url: "/syntax/SAP" }
,
{ category: "syntax", value: "Semilist", url: "/syntax/Semilist" }
,
{ category: "syntax", value: "Single Argument Rule", url: "/syntax/Single Argument Rule" }
,
{ category: "TOP", value: "TOP", url: "/syntax/TOP" }
,
{ category: "syntax", value: "TR\/\/\/", url: "/syntax/TR$SOLIDUS$SOLIDUS$SOLIDUS" }
,
{ category: "syntax", value: "Trait is default", url: "/syntax/Trait is default" }
,
{ category: "Phasers", value: "UNDO", url: "/syntax/UNDO" }
,
{ category: "syntax", value: "VAR", url: "/syntax/VAR" }
,
{ category: "syntax", value: "WHAT", url: "/syntax/WHAT" }
,
{ category: "syntax", value: "WHERE", url: "/syntax/WHERE" }
,
{ category: "syntax", value: "WHICH", url: "/syntax/WHICH" }
,
{ category: "syntax", value: "WHO", url: "/syntax/WHO" }
,
{ category: "syntax", value: "WHY", url: "/syntax/WHY" }
,
{ category: "Zen slice (Basics)", value: "Zen slice", url: "/syntax/Zen slice" }
,
{ category: "regex", value: "[ ]", url: "/syntax/[ ]" }
,
{ category: "regex", value: "\\d", url: "/syntax/%5cd" }
,
{ category: "regex", value: "\\h", url: "/syntax/%5ch" }
,
{ category: "regex", value: "\\n", url: "/syntax/%5cn" }
,
{ category: "regex", value: "\\s", url: "/syntax/%5cs" }
,
{ category: "regex", value: "\\t", url: "/syntax/%5ct" }
,
{ category: "regex", value: "\\v", url: "/syntax/%5cv" }
,
{ category: "regex", value: "\\w", url: "/syntax/%5cw" }
,
{ category: "syntax", value: "^", url: "/syntax/$CIRCUMFLEX_ACCENT" }
,
{ category: "regex", value: "^^", url: "/syntax/$CIRCUMFLEX_ACCENT$CIRCUMFLEX_ACCENT" }
,
{ category: "regex", value: "after", url: "/syntax/after" }
,
{ category: "declarator", value: "also", url: "/syntax/also" }
,
{ category: "declarator", value: "anon", url: "/syntax/anon" }
,
{ category: "declarator", value: "augment", url: "/syntax/augment" }
,
{ category: "regex", value: "before", url: "/syntax/before" }
,
{ category: "block (Basics)", value: "block", url: "/syntax/block" }
,
{ category: "control flow", value: "blocks", url: "/syntax/blocks" }
,
{ category: ":cached", value: "cached", url: "/syntax/cached" }
,
{ category: "declarator", value: "class", url: "/syntax/class" }
,
{ category: "control flow", value: "default when", url: "/syntax/default when" }
,
{ category: "syntax", value: "do", url: "/syntax/do" }
,
{ category: "eager (statement prefix)", value: "eager", url: "/syntax/eager" }
,
{ category: "control flow", value: "else elsif", url: "/syntax/else elsif" }
,
{ category: "control flow", value: "fail", url: "/syntax/fail" }
,
{ category: "control flow", value: "for", url: "/syntax/for" }
,
{ category: "gather (statement prefix)", value: "gather", url: "/syntax/gather" }
,
{ category: "control flow", value: "gather take", url: "/syntax/gather take" }
,
{ category: "control flow", value: "given statement", url: "/syntax/given statement" }
,
{ category: "declarator", value: "has", url: "/syntax/has" }
,
{ category: "syntax", value: "hash", url: "/syntax/hash" }
,
{ category: "quote", value: "heredocs :to", url: "/syntax/heredocs :to" }
,
{ category: "identifier", value: "identifiers", url: "/syntax/identifiers" }
,
{ category: "control flow", value: "if", url: "/syntax/if" }
,
{ category: "Python", value: "input", url: "/syntax/input" }
,
{ category: "syntax", value: "interpolation", url: "/syntax/interpolation" }
,
{ category: "classes", value: "is", url: "/syntax/is" }
,
{ category: "trait", value: "is DEPRECATED (Attribute)", url: "/syntax/is DEPRECATED (Attribute)" }
,
{ category: "trait", value: "is required (Attribute)", url: "/syntax/is required (Attribute)" }
,
{ category: "trait", value: "is rw (Attribute)", url: "/syntax/is rw (Attribute)" }
,
{ category: "control flow", value: "last", url: "/syntax/last" }
,
{ category: "lazy (statement prefix)", value: "lazy", url: "/syntax/lazy" }
,
{ category: "control flow", value: "loop", url: "/syntax/loop" }
,
{ category: "macros", value: "macros", url: "/syntax/macros" }
,
{ category: "declarator", value: "multi", url: "/syntax/multi" }
,
{ category: "declarator", value: "my", url: "/syntax/my" }
,
{ category: "syntax", value: "need", url: "/syntax/need" }
,
{ category: "control flow", value: "next", url: "/syntax/next" }
,
{ category: "syntax", value: "once", url: "/syntax/once" }
,
{ category: "declarator", value: "only", url: "/syntax/only" }
,
{ category: "declarator", value: "our", url: "/syntax/our" }
,
{ category: "pack", value: "pack", url: "/syntax/pack" }
,
{ category: "regex", value: "positive lookaround assertion", url: "/syntax/positive lookaround assertion" }
,
{ category: "control flow", value: "proceed", url: "/syntax/proceed" }
,
{ category: "declarator", value: "proto", url: "/syntax/proto" }
,
{ category: "quote", value: "q", url: "/syntax/q" }
,
{ category: "quote", value: "qq", url: "/syntax/qq" }
,
{ category: "quote", value: "qqw", url: "/syntax/qqw" }
,
{ category: "quote", value: "qqww", url: "/syntax/qqww" }
,
{ category: "quote", value: "qqx", url: "/syntax/qqx" }
,
{ category: "syntax", value: "quietly", url: "/syntax/quietly" }
,
{ category: "quote", value: "qww", url: "/syntax/qww" }
,
{ category: "quote", value: "qx", url: "/syntax/qx" }
,
{ category: "react (statement prefix)", value: "react", url: "/syntax/react" }
,
{ category: "control flow", value: "redo", url: "/syntax/redo" }
,
{ category: "declarator", value: "regex", url: "/syntax/regex" }
,
{ category: "control flow", value: "repeat", url: "/syntax/repeat" }
,
{ category: "syntax", value: "require", url: "/syntax/require" }
,
{ category: "control flow", value: "return", url: "/syntax/return" }
,
{ category: "control flow", value: "return-rw", url: "/syntax/return-rw" }
,
{ category: "declarator", value: "role", url: "/syntax/role" }
,
{ category: "declarator", value: "rule", url: "/syntax/rule" }
,
{ category: "quote", value: "s\/ \/ \/", url: "/syntax/s$SOLIDUS $SOLIDUS $SOLIDUS" }
,
{ category: "syntax", value: "s\/\/\/", url: "/syntax/s$SOLIDUS$SOLIDUS$SOLIDUS" }
,
{ category: "syntax", value: "scalar", url: "/syntax/scalar" }
,
{ category: "syntax", value: "self", url: "/syntax/self" }
,
{ category: "sink (statement prefix)", value: "sink", url: "/syntax/sink" }
,
{ category: "syntax", value: "stable sort", url: "/syntax/stable sort" }
,
{ category: "syntax", value: "start", url: "/syntax/start" }
,
{ category: "declarator", value: "state", url: "/syntax/state" }
,
{ category: "statement (Basics)", value: "statement", url: "/syntax/statement" }
,
{ category: "control flow", value: "statements", url: "/syntax/statements" }
,
{ category: "syntax", value: "string literal", url: "/syntax/string literal" }
,
{ category: "declarator", value: "sub", url: "/syntax/sub" }
,
{ category: "control flow", value: "succeed", url: "/syntax/succeed" }
,
{ category: "supply (statement prefix)", value: "supply", url: "/syntax/supply" }
,
{ category: "control flow", value: "supply emit", url: "/syntax/supply emit" }
,
{ category: "<sym>", value: "sym", url: "/syntax/sym" }
,
{ category: "regex", value: "tilde", url: "/syntax/tilde" }
,
{ category: "declarator", value: "token", url: "/syntax/token" }
,
{ category: "syntax", value: "tr\/\/\/", url: "/syntax/tr$SOLIDUS$SOLIDUS$SOLIDUS" }
,
{ category: "is default (Variable)", value: "trait is default", url: "/syntax/trait is default" }
,
{ category: "try (statement prefix)", value: "try", url: "/syntax/try" }
,
{ category: "declarator", value: "unit", url: "/syntax/unit" }
,
{ category: "control flow", value: "unless", url: "/syntax/unless" }
,
{ category: "syntax", value: "use", url: "/syntax/use" }
,
{ category: "v6 (Basics)", value: "v6", url: "/syntax/v6" }
,
{ category: "syntax", value: "variables, $_", url: "/syntax/variables, $_" }
,
{ category: "control flow", value: "when", url: "/syntax/when" }
,
{ category: "control flow", value: "while until", url: "/syntax/while until" }
,
{ category: "with orwith without", value: "with orwith without", url: "/syntax/with orwith without" }
,
{ category: "syntax", value: "|", url: "/syntax/|" }
,
{ category: "regex", value: "||", url: "/syntax/||" }
,
{ category: "twigil", value: "~", url: "/syntax/~" }
,
{ category: "Reference", value: "PERL6LIB", url: "/language/5to6-nutshell#index-entry-PERL6LIB-PERL6LIB" }
,
{ category: "Reference", value: "\\ (syntax)", url: "/language/syntax#index-entry-syntax_%5c-Unspace" }
,
{ category: "Reference", value: "Unspace (syntax)", url: "/language/syntax#index-entry-syntax_Unspace" }
,
{ category: "Reference", value: "identifiers (identifier)", url: "/language/syntax#index-entry-identifier_identifiers-Identifiers" }
,
{ category: "Reference", value: "String (literals)", url: "/language/syntax#index-entry-String_(literals)" }
,
{ category: "Reference", value: "0b (radix form)", url: "/language/syntax#index-entry-0b_(radix_form)" }
,
{ category: "Reference", value: "0d (radix form)", url: "/language/syntax#index-entry-0d_(radix_form)" }
,
{ category: "Reference", value: "0o (radix form)", url: "/language/syntax#index-entry-0o_(radix_form)" }
,
{ category: "Reference", value: "0x (radix form)", url: "/language/syntax#index-entry-0x_(radix_form)" }
,
{ category: "Reference", value: "Number (literals)", url: "/language/syntax#index-entry-Number_(literals)" }
,
{ category: "Reference", value: "Number literals", url: "/language/syntax#index-entry-Number_literals" }
,
{ category: "Reference", value: "Pairs (literals)", url: "/language/syntax#index-entry-Pairs_(literals)" }
,
{ category: "Reference", value: "Pair literals", url: "/language/syntax#index-entry-Pair_literals" }
,
{ category: "Reference", value: "Boolean (literals)", url: "/language/syntax#index-entry-Boolean_(literals)" }
,
{ category: "Reference", value: "unit (declarator)", url: "/language/syntax#index-entry-declarator_unit-declarator_module-declarator_package-Package,_Module,_Class,_Role,_and_Grammar_declaration" }
,
{ category: "Reference", value: "module (declarator)", url: "/language/syntax#index-entry-declarator_unit-declarator_module-declarator_package-Package,_Module,_Class,_Role,_and_Grammar_declaration" }
,
{ category: "Reference", value: "package (declarator)", url: "/language/syntax#index-entry-declarator_unit-declarator_module-declarator_package-Package,_Module,_Class,_Role,_and_Grammar_declaration" }
,
{ category: "Reference", value: "prefix operator", url: "/language/operators#index-entry-prefix_operator" }
,
{ category: "Reference", value: "infix operator", url: "/language/operators#index-entry-infix_operator" }
,
{ category: "Reference", value: "postfix operator", url: "/language/operators#index-entry-postfix_operator" }
,
{ category: "Reference", value: "circumfix operator", url: "/language/operators#index-entry-circumfix_operator" }
,
{ category: "Reference", value: "postcircumfix operator", url: "/language/operators#index-entry-postcircumfix_operator" }
,
{ category: "Reference", value: "method operators", url: "/language/operators#index-entry-method_operators" }
,
{ category: "Reference", value: "s\/\/\/", url: "/language/operators#index-entry-s$SOLIDUS$SOLIDUS$SOLIDUS_in-place_substitution" }
,
{ category: "Reference", value: "S\/\/\/", url: "/language/operators#index-entry-S$SOLIDUS$SOLIDUS$SOLIDUS_non-destructive_substitution" }
,
{ category: "Reference", value: "tr\/\/\/", url: "/language/operators#index-entry-tr$SOLIDUS$SOLIDUS$SOLIDUS_in-place_transliteration" }
,
{ category: "Reference", value: "TR\/\/\/", url: "/language/operators#index-entry-TR$SOLIDUS$SOLIDUS$SOLIDUS_non-destructive_transliteration" }
,
{ category: "Reference", value: "! (negation metaoperator)", url: "/language/operators#index-entry-!_(negation_metaoperator)" }
,
{ category: "Reference", value: "!==", url: "/language/operators#index-entry-!==" }
,
{ category: "Reference", value: "!eq", url: "/language/operators#index-entry-!eq" }
,
{ category: "Reference", value: "reverse metaoperator (R)", url: "/language/operators#index-entry-R_reverse_metaoperator" }
,
{ category: "Reference", value: "¬ª=¬´", url: "/language/operators#index-entry-¬ª=¬´" }
,
{ category: "Reference", value: "¬´=¬ª", url: "/language/operators#index-entry-¬´=¬ª" }
,
{ category: "Reference", value: "<< (hyper)", url: "/language/operators#index-entry-hyper_<<-hyper_>>-hyper_¬´-hyper_¬ª-Hyper_operators" }
,
{ category: "Reference", value: ">> (hyper)", url: "/language/operators#index-entry-hyper_<<-hyper_>>-hyper_¬´-hyper_¬ª-Hyper_operators" }
,
{ category: "Reference", value: "¬´ (hyper)", url: "/language/operators#index-entry-hyper_<<-hyper_>>-hyper_¬´-hyper_¬ª-Hyper_operators" }
,
{ category: "Reference", value: "¬ª (hyper)", url: "/language/operators#index-entry-hyper_<<-hyper_>>-hyper_¬´-hyper_¬ª-Hyper_operators" }
,
{ category: "Reference", value: "[] (reduction metaoperators)", url: "/language/operators#index-entry-[]_(reduction_metaoperators)" }
,
{ category: "Reference", value: "[+] (reduction metaoperators)", url: "/language/operators#index-entry-[+]_(reduction_metaoperators)" }
,
{ category: "Reference", value: "[\\] (triangular reduction metaoperators)", url: "/language/operators#index-entry-[%5c]_(triangular_reduction_metaoperators)" }
,
{ category: "Reference", value: "X (cross metaoperator)", url: "/language/operators#index-entry-X_(cross_metaoperator)" }
,
{ category: "Reference", value: "Z (zip metaoperator)", url: "/language/operators#index-entry-Z_(zip_metaoperator)" }
,
{ category: "Reference", value: "sequential metaoperator (S)", url: "/language/operators#index-entry-S_sequential_metaoperator" }
,
{ category: "Reference", value: "qw", url: "/language/operators#index-entry-qw-quote-words-quote-words" }
,
{ category: "Reference", value: "quote-words", url: "/language/operators#index-entry-qw-quote-words-quote-words" }
,
{ category: "Reference", value: "grouping operator", url: "/language/operators#index-entry-grouping_operator" }
,
{ category: "Reference", value: "block constructor", url: "/language/operators#index-entry-block_constructor-hash_constructor" }
,
{ category: "Reference", value: "hash constructor", url: "/language/operators#index-entry-block_constructor-hash_constructor" }
,
{ category: "Reference", value: "Array", url: "/language/operators#index-entry-Array_constructor" }
,
{ category: "Reference", value: "array indexing operator", url: "/language/operators#index-entry-array_indexing_operator-array_subscript_operator-array_indexing_operator" }
,
{ category: "Reference", value: "array subscript operator", url: "/language/operators#index-entry-array_indexing_operator-array_subscript_operator-array_indexing_operator" }
,
{ category: "Reference", value: "hash indexing operator", url: "/language/operators#index-entry-hash_indexing_operator-hash_subscript_operator-hash_indexing_operator" }
,
{ category: "Reference", value: "hash subscript operator", url: "/language/operators#index-entry-hash_indexing_operator-hash_subscript_operator-hash_indexing_operator" }
,
{ category: "Reference", value: "call operator", url: "/language/operators#index-entry-call_operator" }
,
{ category: "Reference", value: "method call", url: "/language/operators#index-entry-method_call" }
,
{ category: "Reference", value: "methodop .&", url: "/language/operators#index-entry-methodop_.&" }
,
{ category: "Reference", value: "mutating method call", url: "/language/operators#index-entry-mutating_method_call" }
,
{ category: "Reference", value: "methodop .^", url: "/language/operators#index-entry-methodop_.$CIRCUMFLEX_ACCENT" }
,
{ category: "Reference", value: "metamethod call", url: "/language/operators#index-entry-metamethod_call" }
,
{ category: "Reference", value: "methodop .?", url: "/language/operators#index-entry-methodop_.%3F" }
,
{ category: "Reference", value: "Safe call operator", url: "/language/operators#index-entry-Safe_call_operator" }
,
{ category: "Reference", value: "methodop .+", url: "/language/operators#index-entry-methodop_.+" }
,
{ category: "Reference", value: "methodop .*", url: "/language/operators#index-entry-methodop_.*" }
,
{ category: "Reference", value: "methodop ¬ª.", url: "/language/operators#index-entry-methodop_¬ª." }
,
{ category: "Reference", value: "methodop >>.", url: "/language/operators#index-entry-methodop_>>." }
,
{ category: "Reference", value: "hyper method call operator", url: "/language/operators#index-entry-hyper_method_call_operator" }
,
{ category: "Reference", value: ".( )", url: "/language/operators#index-entry-.(_)" }
,
{ category: "Reference", value: ".[ ]", url: "/language/operators#index-entry-.[_]" }
,
{ category: "Reference", value: ".{ }", url: "/language/operators#index-entry-.{_}" }
,
{ category: "Reference", value: "postfix call", url: "/language/operators#index-entry-postfix_call" }
,
{ category: "Reference", value: "class-qualified method call", url: "/language/operators#index-entry-class-qualified_method_call" }
,
{ category: "Reference", value: "prefix ++", url: "/language/operators#index-entry-prefix_++-++" }
,
{ category: "Reference", value: "prefix increment operator", url: "/language/operators#index-entry-prefix_increment_operator" }
,
{ category: "Reference", value: "prefix decrement operator", url: "/language/operators#index-entry-prefix_decrement_operator" }
,
{ category: "Reference", value: "--", url: "/language/operators#index-entry------" }
,
{ category: "Reference", value: "postfix ++", url: "/language/operators#index-entry-postfix_++-++" }
,
{ category: "Reference", value: "postfix increment operator", url: "/language/operators#index-entry-postfix_increment_operator" }
,
{ category: "Reference", value: "postfix decrement operator", url: "/language/operators#index-entry-postfix_decrement_operator" }
,
{ category: "Reference", value: "exponentiation operator", url: "/language/operators#index-entry-exponentiation_operator" }
,
{ category: "Reference", value: "Boolean context operator", url: "/language/operators#index-entry-Boolean_context_operator" }
,
{ category: "Reference", value: "Negated boolean context operator", url: "/language/operators#index-entry-Negated_boolean_context_operator" }
,
{ category: "Reference", value: "Numeric context operator", url: "/language/operators#index-entry-Numeric_context_operator" }
,
{ category: "Reference", value: "Negative numeric context operator", url: "/language/operators#index-entry-Negative_numeric_context_operator" }
,
{ category: "Reference", value: "String context operator", url: "/language/operators#index-entry-String_context_operator" }
,
{ category: "Reference", value: "Integer bitwise negation operator", url: "/language/operators#index-entry-Integer_bitwise_negation_operator" }
,
{ category: "Reference", value: "Boolean bitwise negation operator", url: "/language/operators#index-entry-Boolean_bitwise_negation_operator" }
,
{ category: "Reference", value: "upto operator", url: "/language/operators#index-entry-upto_operator" }
,
{ category: "Reference", value: "Multiplication operator", url: "/language/operators#index-entry-Multiplication_operator" }
,
{ category: "Reference", value: "Division operator", url: "/language/operators#index-entry-Division_operator" }
,
{ category: "Reference", value: "Integer division operator", url: "/language/operators#index-entry-Integer_division_operator" }
,
{ category: "Reference", value: "Modulo operator", url: "/language/operators#index-entry-Modulo_operator" }
,
{ category: "Reference", value: "Divisibility operator", url: "/language/operators#index-entry-Divisibility_operator" }
,
{ category: "Reference", value: "Integer modulo operator", url: "/language/operators#index-entry-Integer_modulo_operator" }
,
{ category: "Reference", value: "Numeric bitwise AND operator", url: "/language/operators#index-entry-Numeric_bitwise_AND_operator" }
,
{ category: "Reference", value: "left (integer bit shift operator)", url: "/language/operators#index-entry-integer_bit_shift_operator_left" }
,
{ category: "Reference", value: "right (integer bit shift operator)", url: "/language/operators#index-entry-integer_bit_shift_operator_right" }
,
{ category: "Reference", value: "greatest common divisor operator", url: "/language/operators#index-entry-greatest_common_divisor_operator" }
,
{ category: "Reference", value: "least common multiple operator", url: "/language/operators#index-entry-least_common_multiple_operator" }
,
{ category: "Reference", value: "Addition operator", url: "/language/operators#index-entry-Addition_operator" }
,
{ category: "Reference", value: "Subtraction operator", url: "/language/operators#index-entry-Subtraction_operator" }
,
{ category: "Reference", value: "Integer bitwise OR operator", url: "/language/operators#index-entry-Integer_bitwise_OR_operator" }
,
{ category: "Reference", value: "Integer bitwise XOR operator", url: "/language/operators#index-entry-Integer_bitwise_XOR_operator" }
,
{ category: "Reference", value: "Boolean bitwise XOR operator", url: "/language/operators#index-entry-Boolean_bitwise_XOR_operator" }
,
{ category: "Reference", value: "Boolean logical OR operator", url: "/language/operators#index-entry-Boolean_logical_OR_operator" }
,
{ category: "Reference", value: "String repetition operator", url: "/language/operators#index-entry-String_repetition_operator" }
,
{ category: "Reference", value: "List repetition operator", url: "/language/operators#index-entry-List_repetition_operator" }
,
{ category: "Reference", value: "string concatenation operator", url: "/language/operators#index-entry-string_concatenation_operator" }
,
{ category: "Reference", value: "function composition operator", url: "/language/operators#index-entry-function_composition_operator" }
,
{ category: "Reference", value: "All junction operator", url: "/language/operators#index-entry-All_junction_operator" }
,
{ category: "Reference", value: "Intersection operator", url: "/language/operators#index-entry-Intersection_operator" }
,
{ category: "Reference", value: "Baggy multiplication operator", url: "/language/operators#index-entry-Baggy_multiplication_operator" }
,
{ category: "Reference", value: "Any junction operator", url: "/language/operators#index-entry-Any_junction_operator" }
,
{ category: "Reference", value: "Union operator", url: "/language/operators#index-entry-Union_operator" }
,
{ category: "Reference", value: "Baggy addition operator", url: "/language/operators#index-entry-Baggy_addition_operator" }
,
{ category: "Reference", value: "Set difference operator", url: "/language/operators#index-entry-Set_difference_operator" }
,
{ category: "Reference", value: "One junction operator", url: "/language/operators#index-entry-One_junction_operator" }
,
{ category: "Reference", value: "Symmetric set difference operator", url: "/language/operators#index-entry-Symmetric_set_difference_operator" }
,
{ category: "Reference", value: "Generic, \"smart\" three-way comparator", url: "/language/operators#index-entry-Generic,_\"smart\"_three-way_comparator" }
,
{ category: "Reference", value: "String three-way comparator", url: "/language/operators#index-entry-String_three-way_comparator" }
,
{ category: "Reference", value: "Numeric three-way comparator", url: "/language/operators#index-entry-Numeric_three-way_comparator" }
,
{ category: "Reference", value: "spaceship operator", url: "/language/operators#index-entry-spaceship_operator" }
,
{ category: "Reference", value: "Range operator", url: "/language/operators#index-entry-Range_operator" }
,
{ category: "Reference", value: "Right-open range operator", url: "/language/operators#index-entry-Right-open_range_operator" }
,
{ category: "Reference", value: "Left-open range operator", url: "/language/operators#index-entry-Left-open_range_operator" }
,
{ category: "Reference", value: "Open range operator", url: "/language/operators#index-entry-Open_range_operator" }
,
{ category: "Reference", value: "Numeric equality operator", url: "/language/operators#index-entry-Numeric_equality_operator" }
,
{ category: "Reference", value: "Numeric inequality operator", url: "/language/operators#index-entry-Numeric_inequality_operator" }
,
{ category: "Reference", value: "Numeric less than operator", url: "/language/operators#index-entry-Numeric_less_than_operator" }
,
{ category: "Reference", value: "Numeric less than or equal to operator", url: "/language/operators#index-entry-Numeric_less_than_or_equal_to_operator" }
,
{ category: "Reference", value: "Numeric greater than operator", url: "/language/operators#index-entry-Numeric_greater_than_operator" }
,
{ category: "Reference", value: "Numeric greater than or equal to operator", url: "/language/operators#index-entry-Numeric_greater_than_or_equal_to_operator" }
,
{ category: "Reference", value: "String equality operator", url: "/language/operators#index-entry-String_equality_operator" }
,
{ category: "Reference", value: "String inequality operator", url: "/language/operators#index-entry-String_inequality_operator" }
,
{ category: "Reference", value: "String greater than operator", url: "/language/operators#index-entry-String_greater_than_operator" }
,
{ category: "Reference", value: "String greater than or equal to operator", url: "/language/operators#index-entry-String_greater_than_or_equal_to_operator" }
,
{ category: "Reference", value: "String less than operator", url: "/language/operators#index-entry-String_less_than_operator" }
,
{ category: "Reference", value: "String less than or equal to operator", url: "/language/operators#index-entry-String_less_than_or_equal_to_operator" }
,
{ category: "Reference", value: "Equivalence operator", url: "/language/operators#index-entry-Equivalence_operator" }
,
{ category: "Reference", value: "Value identity operator", url: "/language/operators#index-entry-Value_identity_operator" }
,
{ category: "Reference", value: "Container identity operator", url: "/language/operators#index-entry-Container_identity_operator" }
,
{ category: "Reference", value: "smartmatch operator", url: "/language/operators#index-entry-smartmatch_operator" }
,
{ category: "Reference", value: "‚âÖ (infix)", url: "/language/operators#index-entry-infix__‚âÖ-‚âÖ" }
,
{ category: "Reference", value: "Membership operator", url: "/language/operators#index-entry-Membership_operator" }
,
{ category: "Reference", value: "Non-membership operator", url: "/language/operators#index-entry-Non-membership_operator" }
,
{ category: "Reference", value: "Membership operator", url: "/language/operators#index-entry-Membership_operator" }
,
{ category: "Reference", value: "Non-membership operator", url: "/language/operators#index-entry-Non-membership_operator" }
,
{ category: "Reference", value: "Subset of operator", url: "/language/operators#index-entry-Subset_of_operator" }
,
{ category: "Reference", value: "Not a subset of operator", url: "/language/operators#index-entry-Not_a_subset_of_operator" }
,
{ category: "Reference", value: "Subset of or equal to operator", url: "/language/operators#index-entry-Subset_of_or_equal_to_operator" }
,
{ category: "Reference", value: "Not a subset of nor equal to operator", url: "/language/operators#index-entry-Not_a_subset_of_nor_equal_to_operator" }
,
{ category: "Reference", value: "Superset of operator", url: "/language/operators#index-entry-Superset_of_operator" }
,
{ category: "Reference", value: "Not a superset of operator", url: "/language/operators#index-entry-Not_a_superset_of_operator" }
,
{ category: "Reference", value: "Superset of or equal to operator", url: "/language/operators#index-entry-Superset_of_or_equal_to_operator" }
,
{ category: "Reference", value: "Not a superset of nor equal to operator", url: "/language/operators#index-entry-Not_a_superset_of_nor_equal_to_operator" }
,
{ category: "Reference", value: "Short-circuit exclusive-or", url: "/language/operators#index-entry-Short-circuit_exclusive-or" }
,
{ category: "Reference", value: "defined-or operator", url: "/language/operators#index-entry-defined-or_operator-defined-or_operator" }
,
{ category: "Reference", value: "\/\/", url: "/language/operators#index-entry-$SOLIDUS$SOLIDUS-infix_$SOLIDUS$SOLIDUS" }
,
{ category: "Reference", value: "ternary (operator)", url: "/language/operators#index-entry-operator_ternary" }
,
{ category: "Reference", value: "conditional (operator)", url: "/language/operators#index-entry-operator_conditional" }
,
{ category: "Reference", value: "flipflop (operator)", url: "/language/operators#index-entry-operator_flipflop" }
,
{ category: "Reference", value: "item =", url: "/language/operators#index-entry-item_=" }
,
{ category: "Reference", value: "pair constructor", url: "/language/operators#index-entry-pair_constructor" }
,
{ category: "Reference", value: "Zip operator", url: "/language/operators#index-entry-Zip_operator" }
,
{ category: "Reference", value: "cross product operator", url: "/language/operators#index-entry-cross_product_operator" }
,
{ category: "Reference", value: "operators (X)", url: "/language/operators#index-entry-X_operators" }
,
{ category: "Reference", value: "operators (...)", url: "/language/operators#index-entry-..._operators" }
,
{ category: "Reference", value: "operators (...^)", url: "/language/operators#index-entry-...$CIRCUMFLEX_ACCENT_operators" }
,
{ category: "Reference", value: "operators (‚Ä¶)", url: "/language/operators#index-entry-‚Ä¶_operators" }
,
{ category: "Reference", value: "operators (‚Ä¶^)", url: "/language/operators#index-entry-‚Ä¶$CIRCUMFLEX_ACCENT_operators" }
,
{ category: "Reference", value: "‚Ä¶ (lazy list)", url: "/language/operators#index-entry-lazy_list_‚Ä¶" }
,
{ category: "Reference", value: "sequence operator", url: "/language/operators#index-entry-sequence_operator" }
,
{ category: "Reference", value: "list =", url: "/language/operators#index-entry-list_=" }
,
{ category: "Reference", value: "List assignment operator", url: "/language/operators#index-entry-List_assignment_operator" }
,
{ category: "Reference", value: "Binding operator", url: "/language/operators#index-entry-Binding_operator" }
,
{ category: "Reference", value: "Read-only binding operator", url: "/language/operators#index-entry-Read-only_binding_operator" }
,
{ category: "Reference", value: "stub operator", url: "/language/operators#index-entry-stub_operator" }
,
{ category: "Reference", value: "Fatal stub operator", url: "/language/operators#index-entry-Fatal_stub_operator" }
,
{ category: "Reference", value: "Admonitory stub operator", url: "/language/operators#index-entry-Admonitory_stub_operator" }
,
{ category: "Reference", value: "and", url: "/language/operators#index-entry-and" }
,
{ category: "Reference", value: "andthen", url: "/language/operators#index-entry-andthen" }
,
{ category: "Reference", value: "notandthen", url: "/language/operators#index-entry-notandthen" }
,
{ category: "Reference", value: "orelse", url: "/language/operators#index-entry-orelse" }
,
{ category: "Reference", value: "feed", url: "/language/operators#index-entry-feed" }
,
{ category: "Reference", value: "leftward feed", url: "/language/operators#index-entry-leftward_feed" }
,
{ category: "Reference", value: "import", url: "/language/module-packages#index-entry-import" }
,
{ category: "Reference", value: "Regular Expressions", url: "/language/regexes#index-entry-Regular_Expressions" }
,
{ category: "Reference", value: "\/ \/ (quote)", url: "/language/regexes#index-entry-quote_$SOLIDUS_$SOLIDUS-quote_rx-quote_m-Lexical_conventions" }
,
{ category: "Reference", value: "rx (quote)", url: "/language/regexes#index-entry-quote_$SOLIDUS_$SOLIDUS-quote_rx-quote_m-Lexical_conventions" }
,
{ category: "Reference", value: "m (quote)", url: "/language/regexes#index-entry-quote_$SOLIDUS_$SOLIDUS-quote_rx-quote_m-Lexical_conventions" }
,
{ category: "Reference", value: ". (regex)", url: "/language/regexes#index-entry-regex__.-Wildcards" }
,
{ category: "Reference", value: "\\n (regex)", url: "/language/regexes#index-entry-regex_%5cn-regex_%5cN-%5cn_and_%5cN" }
,
{ category: "Reference", value: "\\N (regex)", url: "/language/regexes#index-entry-regex_%5cn-regex_%5cN-%5cn_and_%5cN" }
,
{ category: "Reference", value: "\\t (regex)", url: "/language/regexes#index-entry-regex_%5ct-regex_%5cT-%5ct_and_%5cT" }
,
{ category: "Reference", value: "\\T (regex)", url: "/language/regexes#index-entry-regex_%5ct-regex_%5cT-%5ct_and_%5cT" }
,
{ category: "Reference", value: "\\h (regex)", url: "/language/regexes#index-entry-regex_%5ch-regex_%5cH-%5ch_and_%5cH" }
,
{ category: "Reference", value: "\\H (regex)", url: "/language/regexes#index-entry-regex_%5ch-regex_%5cH-%5ch_and_%5cH" }
,
{ category: "Reference", value: "\\v (regex)", url: "/language/regexes#index-entry-regex_%5cv-regex_%5cV-%5cv_and_%5cV" }
,
{ category: "Reference", value: "\\V (regex)", url: "/language/regexes#index-entry-regex_%5cv-regex_%5cV-%5cv_and_%5cV" }
,
{ category: "Reference", value: "\\s (regex)", url: "/language/regexes#index-entry-regex_%5cs-regex_%5cS-%5cs_and_%5cS" }
,
{ category: "Reference", value: "\\S (regex)", url: "/language/regexes#index-entry-regex_%5cs-regex_%5cS-%5cs_and_%5cS" }
,
{ category: "Reference", value: "\\d (regex)", url: "/language/regexes#index-entry-regex_%5cd-regex_%5cD-%5cd_and_%5cD" }
,
{ category: "Reference", value: "\\D (regex)", url: "/language/regexes#index-entry-regex_%5cd-regex_%5cD-%5cd_and_%5cD" }
,
{ category: "Reference", value: "\\w (regex)", url: "/language/regexes#index-entry-regex_%5cw-regex_%5cW-%5cw_and_%5cW" }
,
{ category: "Reference", value: "\\W (regex)", url: "/language/regexes#index-entry-regex_%5cw-regex_%5cW-%5cw_and_%5cW" }
,
{ category: "Reference", value: "<:property> (regex)", url: "/language/regexes#index-entry-regex_<:property>-Unicode_properties" }
,
{ category: "Reference", value: "<[ ]> (regex)", url: "/language/regexes#index-entry-regex_<[_]>-regex_<-[_]>-Enumerated_character_classes_and_ranges" }
,
{ category: "Reference", value: "<-[ ]> (regex)", url: "/language/regexes#index-entry-regex_<[_]>-regex_<-[_]>-Enumerated_character_classes_and_ranges" }
,
{ category: "Reference", value: "escaping characters", url: "/language/regexes#index-entry-escaping_characters" }
,
{ category: "Reference", value: "+ (regex quantifier)", url: "/language/regexes#index-entry-regex_quantifier_+-One_or_more:_+" }
,
{ category: "Reference", value: "* (regex quantifier)", url: "/language/regexes#index-entry-regex_quantifier_*-Zero_or_more:_*" }
,
{ category: "Reference", value: "? (regex quantifier)", url: "/language/regexes#index-entry-regex_quantifier_%3F-Zero_or_one:_%3F" }
,
{ category: "Reference", value: "** (regex quantifier)", url: "/language/regexes#index-entry-regex_quantifier_**-General_quantifier:_**_min..max" }
,
{ category: "Reference", value: "% (regex)", url: "/language/regexes#index-entry-regex_$PERCENT_SIGN-regex_$PERCENT_SIGN$PERCENT_SIGN-Modified_quantifier:_$PERCENT_SIGN,_$PERCENT_SIGN$PERCENT_SIGN" }
,
{ category: "Reference", value: "%% (regex)", url: "/language/regexes#index-entry-regex_$PERCENT_SIGN-regex_$PERCENT_SIGN$PERCENT_SIGN-Modified_quantifier:_$PERCENT_SIGN,_$PERCENT_SIGN$PERCENT_SIGN" }
,
{ category: "Reference", value: ": (regex)", url: "/language/regexes#index-entry-regex_:-Preventing_backtracking:_:" }
,
{ category: "Reference", value: "? (regex)", url: "/language/regexes#index-entry-regex_%3F-Greedy_versus_frugal_quantifiers:_%3F" }
,
{ category: "Reference", value: "|| (regex)", url: "/language/regexes#index-entry-regex_||-Alternation:_||" }
,
{ category: "Reference", value: "| (regex)", url: "/language/regexes#index-entry-regex_|-Longest_alternation:_|" }
,
{ category: "Reference", value: "&& (regex)", url: "/language/regexes#index-entry-regex_&&-Conjunction:_&&" }
,
{ category: "Reference", value: "& (regex)", url: "/language/regexes#index-entry-regex_&-Conjunction:_&" }
,
{ category: "Reference", value: "^ (regex)", url: "/language/regexes#index-entry-regex_$CIRCUMFLEX_ACCENT-regex_$-Start_of_string_and_end_of_string" }
,
{ category: "Reference", value: "$ (regex)", url: "/language/regexes#index-entry-regex_$CIRCUMFLEX_ACCENT-regex_$-Start_of_string_and_end_of_string" }
,
{ category: "Reference", value: "^^ (regex)", url: "/language/regexes#index-entry-regex_$CIRCUMFLEX_ACCENT$CIRCUMFLEX_ACCENT-regex_$$-Start_of_line_and_end_of_line" }
,
{ category: "Reference", value: "$$ (regex)", url: "/language/regexes#index-entry-regex_$CIRCUMFLEX_ACCENT$CIRCUMFLEX_ACCENT-regex_$$-Start_of_line_and_end_of_line" }
,
{ category: "Reference", value: "<|w> (regex)", url: "/language/regexes#index-entry-regex__<|w>-regex__<!|w>-Word_boundary" }
,
{ category: "Reference", value: "<!|w> (regex)", url: "/language/regexes#index-entry-regex__<|w>-regex__<!|w>-Word_boundary" }
,
{ category: "Reference", value: "\\b (regex deprecated)", url: "/language/regexes#index-entry-regex_deprecated_%5cb-%5cb" }
,
{ category: "Reference", value: "\\B (regex deprecated)", url: "/language/regexes#index-entry-regex_deprecated_%5cB-%5cB" }
,
{ category: "Reference", value: "<< (regex)", url: "/language/regexes#index-entry-regex__<<-_regex__>>-_regex__¬´-_regex__¬ª" }
,
{ category: "Reference", value: ">> ( regex)", url: "/language/regexes#index-entry-regex__<<-_regex__>>-_regex__¬´-_regex__¬ª" }
,
{ category: "Reference", value: "¬´ ( regex)", url: "/language/regexes#index-entry-regex__<<-_regex__>>-_regex__¬´-_regex__¬ª" }
,
{ category: "Reference", value: "¬ª ( regex)", url: "/language/regexes#index-entry-regex__<<-_regex__>>-_regex__¬´-_regex__¬ª" }
,
{ category: "Reference", value: "positive lookaround assertion (regex)", url: "/language/regexes#index-entry-regex_positive_lookaround_assertion-regex_negative_lookaround_assertion-Lookaround_assertions" }
,
{ category: "Reference", value: "negative lookaround assertion (regex)", url: "/language/regexes#index-entry-regex_positive_lookaround_assertion-regex_negative_lookaround_assertion-Lookaround_assertions" }
,
{ category: "Reference", value: "before (regex)", url: "/language/regexes#index-entry-regex_before-Lookahead_assertions" }
,
{ category: "Reference", value: "after (regex)", url: "/language/regexes#index-entry-regex_after-Lookbehind_assertions" }
,
{ category: "Reference", value: "( ) (regex)", url: "/language/regexes#index-entry-regex_(_)-Capturing" }
,
{ category: "Reference", value: "[ ] (regex)", url: "/language/regexes#index-entry-regex_[_]-Non-capturing_grouping" }
,
{ category: "Reference", value: ":my", url: "/language/regexes#index-entry-:my" }
,
{ category: "Reference", value: ":our", url: "/language/regexes#index-entry-:our" }
,
{ category: "Reference", value: "Named captures (regex)", url: "/language/regexes#index-entry-regex__Named_captures-Named_captures" }
,
{ category: "Reference", value: "<( )> (regex)", url: "/language/regexes#index-entry-regex_<(_)>-Capture_markers:_<(_)>" }
,
{ category: "Reference", value: "\\K (regex deprecated)", url: "/language/regexes#index-entry-regex_deprecated_%5cK-%5cK" }
,
{ category: "Reference", value: "s\/ \/ \/ (quote)", url: "/language/regexes#index-entry-quote_s$SOLIDUS_$SOLIDUS_$SOLIDUS-Lexical_conventions" }
,
{ category: "Reference", value: "S\/\/\/", url: "/language/regexes#index-entry-S$SOLIDUS$SOLIDUS$SOLIDUS_non-destructive_substitution" }
,
{ category: "Reference", value: "tilde (regex)", url: "/language/regexes#index-entry-regex__tilde-_regex__~-Tilde_for_nesting_structures" }
,
{ category: "Reference", value: "~ ( regex)", url: "/language/regexes#index-entry-regex__tilde-_regex__~-Tilde_for_nesting_structures" }
,
{ category: "Reference", value: "SETGOAL", url: "/language/regexes#index-entry-SETGOAL" }
,
{ category: "Reference", value: "FAILGOAL", url: "/language/regexes#index-entry-FAILGOAL" }
,
{ category: "Reference", value: "regex (declarator)", url: "/language/regexes#index-entry-declarator_regex-Subrules" }
,
{ category: "Reference", value: "Regex Interpolation (regex)", url: "/language/regexes#index-entry-regex__Regex_Interpolation-Regex_interpolation" }
,
{ category: "Reference", value: ":ignorecase (regex adverb)", url: "/language/regexes#index-entry-regex_adverb_:ignorecase-regex_adverb_:i-Regex_adverbs" }
,
{ category: "Reference", value: ":i (regex adverb)", url: "/language/regexes#index-entry-regex_adverb_:ignorecase-regex_adverb_:i-Regex_adverbs" }
,
{ category: "Reference", value: ":ignoremark (regex adverb)", url: "/language/regexes#index-entry-regex_adverb_:ignoremark-regex_adverb_:m-Ignoremark" }
,
{ category: "Reference", value: ":m (regex adverb)", url: "/language/regexes#index-entry-regex_adverb_:ignoremark-regex_adverb_:m-Ignoremark" }
,
{ category: "Reference", value: ":ratchet (regex adverb)", url: "/language/regexes#index-entry-regex_adverb_:ratchet-regex_adverb_:r-Ratchet" }
,
{ category: "Reference", value: ":r (regex adverb)", url: "/language/regexes#index-entry-regex_adverb_:ratchet-regex_adverb_:r-Ratchet" }
,
{ category: "Reference", value: ":sigspace (regex adverb)", url: "/language/regexes#index-entry-regex_adverb_:sigspace-regex_adverb_:s-Sigspace" }
,
{ category: "Reference", value: ":s (regex adverb)", url: "/language/regexes#index-entry-regex_adverb_:sigspace-regex_adverb_:s-Sigspace" }
,
{ category: "Reference", value: ":1st (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:1st-matching_adverb_:2nd-matching_adverb_:3rd-matching_adverb_:nth-Positional_adverbs" }
,
{ category: "Reference", value: ":2nd (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:1st-matching_adverb_:2nd-matching_adverb_:3rd-matching_adverb_:nth-Positional_adverbs" }
,
{ category: "Reference", value: ":3rd (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:1st-matching_adverb_:2nd-matching_adverb_:3rd-matching_adverb_:nth-Positional_adverbs" }
,
{ category: "Reference", value: ":nth (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:1st-matching_adverb_:2nd-matching_adverb_:3rd-matching_adverb_:nth-Positional_adverbs" }
,
{ category: "Reference", value: ":continue (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:continue-matching_adverb_:c-Continue" }
,
{ category: "Reference", value: ":c (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:continue-matching_adverb_:c-Continue" }
,
{ category: "Reference", value: ":exhaustive (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:exhaustive-matching_adverb_:ex-Exhaustive" }
,
{ category: "Reference", value: ":ex (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:exhaustive-matching_adverb_:ex-Exhaustive" }
,
{ category: "Reference", value: ":global (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:global-matching_adverb_:g-Global" }
,
{ category: "Reference", value: ":g (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:global-matching_adverb_:g-Global" }
,
{ category: "Reference", value: ":pos (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:pos-matching_adverb_:p-Pos" }
,
{ category: "Reference", value: ":p (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:pos-matching_adverb_:p-Pos" }
,
{ category: "Reference", value: ":overlap (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:overlap-matching_adverb_:ov-Overlap" }
,
{ category: "Reference", value: ":ov (matching adverb)", url: "/language/regexes#index-entry-matching_adverb_:overlap-matching_adverb_:ov-Overlap" }
,
{ category: "Reference", value: ":samecase (substitution adverb)", url: "/language/regexes#index-entry-substitution_adverb_:samecase-substitution_adverb_:ii-Samecase" }
,
{ category: "Reference", value: ":ii (substitution adverb)", url: "/language/regexes#index-entry-substitution_adverb_:samecase-substitution_adverb_:ii-Samecase" }
,
{ category: "Reference", value: ":samemark (substitution adverb)", url: "/language/regexes#index-entry-substitution_adverb_:samemark-substitution_adverb_:mm-Samemark" }
,
{ category: "Reference", value: ":mm (substitution adverb)", url: "/language/regexes#index-entry-substitution_adverb_:samemark-substitution_adverb_:mm-Samemark" }
,
{ category: "Reference", value: ":samespace (substitution adverb)", url: "/language/regexes#index-entry-substitution_adverb_:samespace-substitution_adverb_:ss-Samespace" }
,
{ category: "Reference", value: ":ss (substitution adverb)", url: "/language/regexes#index-entry-substitution_adverb_:samespace-substitution_adverb_:ss-Samespace" }
,
{ category: "Reference", value: "\\ (container binding)", url: "/language/containers#index-entry-%5c_(container_binding)" }
,
{ category: "Reference", value: "... (forward declaration)", url: "/language/typesystem#index-entry-..._(forward_declaration)" }
,
{ category: "Reference", value: "Forward declarations", url: "/language/typesystem#index-entry-Forward_declarations" }
,
{ category: "Reference", value: "method (declarator)", url: "/language/typesystem#index-entry-method_(declarator)" }
,
{ category: "Reference", value: "only method", url: "/language/typesystem#index-entry-only_method" }
,
{ category: "Reference", value: "FALLBACK (method)", url: "/language/typesystem#index-entry-FALLBACK_(method)" }
,
{ category: "Reference", value: "WHAT (reserved method)", url: "/language/typesystem#index-entry-WHAT_(reserved_method)" }
,
{ category: "Reference", value: "WHO (reserved method)", url: "/language/typesystem#index-entry-WHO_(reserved_method)" }
,
{ category: "Reference", value: "HOW (reserved method)", url: "/language/typesystem#index-entry-HOW_(reserved_method)" }
,
{ category: "Reference", value: "VAR (reserved method)", url: "/language/typesystem#index-entry-VAR_(reserved_method)" }
,
{ category: "Reference", value: "handles trait", url: "/language/typesystem#index-entry-handles_trait-handles" }
,
{ category: "Reference", value: "FALLBACK (trait handles)", url: "/language/typesystem#index-entry-FALLBACK_(trait_handles)-FALLBACK" }
,
{ category: "Reference", value: "is (classes)", url: "/language/typesystem#index-entry-classes_is-trait_is" }
,
{ category: "Reference", value: "is rw (class)", url: "/language/typesystem#index-entry-is_rw_(class)-is_rw" }
,
{ category: "Reference", value: ":ver<> (class)", url: "/language/typesystem#index-entry-:ver<>_(class)-:ver<>" }
,
{ category: "Reference", value: ":auth<> (class)", url: "/language/typesystem#index-entry-:auth<>_(class)-:auth<>" }
,
{ category: "Reference", value: "role (typesystem) (declarator)", url: "/language/typesystem#index-entry-declarator_role_(typesystem)" }
,
{ category: "Reference", value: "Type Capture (role)", url: "/language/typesystem#index-entry-Type_Capture_(role)" }
,
{ category: "Reference", value: ":ver<> (role)", url: "/language/typesystem#index-entry-:ver<>_(role)-:ver<>" }
,
{ category: "Reference", value: ":auth<> (role)", url: "/language/typesystem#index-entry-:auth<>_(role)-:auth<>" }
,
{ category: "Reference", value: "Enumeration", url: "/language/typesystem#index-entry-Enumeration-_Enums-_enum" }
,
{ category: "Reference", value: "Enums", url: "/language/typesystem#index-entry-Enumeration-_Enums-_enum" }
,
{ category: "Reference", value: "enum", url: "/language/typesystem#index-entry-Enumeration-_Enums-_enum" }
,
{ category: "Reference", value: ":ver<> (grammar)", url: "/language/typesystem#index-entry-:ver<>_(grammar)-:ver<>" }
,
{ category: "Reference", value: ":auth<> (grammar)", url: "/language/typesystem#index-entry-:auth<>_(grammar)-:auth<>" }
,
{ category: "Reference", value: "subset", url: "/language/typesystem#index-entry-subset-subset" }
,
{ category: "Reference", value: "dynamic subset", url: "/language/typesystem#index-entry-dynamic_subset" }
,
{ category: "Reference", value: "pack", url: "/language/experimental#index-entry-pack-pack" }
,
{ category: "Reference", value: "macros", url: "/language/experimental#index-entry-macros-macros" }
,
{ category: "Reference", value: "quasi (macros)", url: "/language/experimental#index-entry-quasi_(macros)" }
,
{ category: "Reference", value: "unquoting (macros)", url: "/language/experimental#index-entry-unquoting_(macros)" }
,
{ category: "Reference", value: "{{{}}} (macros)", url: "/language/experimental#index-entry-{{{}}}_(macros)" }
,
{ category: "Reference", value: ":cached", url: "/language/experimental#index-entry-:cached-cached" }
,
{ category: "Reference", value: "Futures", url: "/language/concurrency#index-entry-Futures" }
,
{ category: "Reference", value: "supply (on-demand)", url: "/language/concurrency#index-entry-supply_(on-demand)" }
,
{ category: "Reference", value: "whenever", url: "/language/concurrency#index-entry-whenever" }
,
{ category: "Reference", value: "react", url: "/language/concurrency#index-entry-react" }
,
{ category: "Reference", value: "int", url: "/language/nativetypes#index-entry-int" }
,
{ category: "Reference", value: "uint", url: "/language/nativetypes#index-entry-uint" }
,
{ category: "Reference", value: "num", url: "/language/nativetypes#index-entry-num" }
,
{ category: "Reference", value: "str", url: "/language/nativetypes#index-entry-str" }
,
{ category: "Reference", value: "int @", url: "/language/nativetypes#index-entry-int_@" }
,
{ category: "Reference", value: "num @", url: "/language/nativetypes#index-entry-num_@" }
,
{ category: "Reference", value: "str @", url: "/language/nativetypes#index-entry-str_@" }
,
{ category: "Reference", value: "native array", url: "/language/nativetypes#index-entry-native_array" }
,
{ category: "Reference", value: "int8", url: "/language/nativetypes#index-entry-int8" }
,
{ category: "Reference", value: "int16", url: "/language/nativetypes#index-entry-int16" }
,
{ category: "Reference", value: "int32", url: "/language/nativetypes#index-entry-int32" }
,
{ category: "Reference", value: "int64", url: "/language/nativetypes#index-entry-int64" }
,
{ category: "Reference", value: "uint8", url: "/language/nativetypes#index-entry-uint8" }
,
{ category: "Reference", value: "uint16", url: "/language/nativetypes#index-entry-uint16" }
,
{ category: "Reference", value: "uint32", url: "/language/nativetypes#index-entry-uint32" }
,
{ category: "Reference", value: "uint64", url: "/language/nativetypes#index-entry-uint64" }
,
{ category: "Reference", value: "num32", url: "/language/nativetypes#index-entry-num32" }
,
{ category: "Reference", value: "num64", url: "/language/nativetypes#index-entry-num64" }
,
{ category: "Reference", value: "byte", url: "/language/nativetypes#index-entry-byte" }
,
{ category: "Reference", value: "is nativesize", url: "/language/nativetypes#index-entry-is_nativesize" }
,
{ category: "Reference", value: "void type (NativeCall)", url: "/language/nativetypes#index-entry-void_type_(NativeCall)" }
,
{ category: "Reference", value: "sub (declarator)", url: "/language/functions#index-entry-declarator_sub-Subroutines" }
,
{ category: "Reference", value: "pointy blocks", url: "/language/functions#index-entry-pointy_blocks" }
,
{ category: "Reference", value: "-> (syntax)", url: "/language/functions#index-entry-syntax_->-Blocks_and_lambdas" }
,
{ category: "Reference", value: "@_", url: "/language/functions#index-entry-@__" }
,
{ category: "Reference", value: "%_", url: "/language/functions#index-entry-$PERCENT_SIGN__" }
,
{ category: "Reference", value: "Argument", url: "/language/functions#index-entry-Argument" }
,
{ category: "Reference", value: "multi (declarator)", url: "/language/functions#index-entry-declarator_multi-Multi-dispatch" }
,
{ category: "Reference", value: "declarator", url: "/language/functions#index-entry-declarator-proto" }
,
{ category: "Reference", value: "declarator", url: "/language/functions#index-entry-declarator-only" }
,
{ category: "Reference", value: "prefix &", url: "/language/functions#index-entry-prefix_&" }
,
{ category: "Reference", value: "closures", url: "/language/functions#index-entry-closures" }
,
{ category: "Reference", value: "use soft (pragma)", url: "/language/functions#index-entry-use_soft_(pragma)" }
,
{ category: "Reference", value: "is tighter", url: "/language/functions#index-entry-is_tighter" }
,
{ category: "Reference", value: "is equiv", url: "/language/functions#index-entry-is_equiv" }
,
{ category: "Reference", value: "is looser", url: "/language/functions#index-entry-is_looser" }
,
{ category: "Reference", value: "is assoc (trait)", url: "/language/functions#index-entry-is_assoc_(trait)" }
,
{ category: "Reference", value: "callsame (dispatch)", url: "/language/functions#index-entry-dispatch_callsame" }
,
{ category: "Reference", value: "callwith (dispatch)", url: "/language/functions#index-entry-dispatch_callwith" }
,
{ category: "Reference", value: "nextsame (dispatch)", url: "/language/functions#index-entry-dispatch_nextsame" }
,
{ category: "Reference", value: "nextwith (dispatch)", url: "/language/functions#index-entry-dispatch_nextwith" }
,
{ category: "Reference", value: "samewith (dispatch)", url: "/language/functions#index-entry-dispatch_samewith" }
,
{ category: "Reference", value: "nextcallee (dispatch)", url: "/language/functions#index-entry-dispatch_nextcallee" }
,
{ category: "Reference", value: "wrapped routines (dispatch)", url: "/language/functions#index-entry-dispatch_wrapped_routines" }
,
{ category: "Reference", value: "sink context", url: "/language/contexts#index-entry-sink_context" }
,
{ category: "Reference", value: "sinking", url: "/language/contexts#index-entry-sinking" }
,
{ category: "Reference", value: "number context", url: "/language/contexts#index-entry-number_context" }
,
{ category: "Reference", value: "string context", url: "/language/contexts#index-entry-string_context" }
,
{ category: "Reference", value: "Boolean context", url: "/language/contexts#index-entry-Boolean_context" }
,
{ category: "Reference", value: "list context", url: "/language/contexts#index-entry-list_context" }
,
{ category: "Reference", value: "IPC", url: "/language/ipc#index-entry-IPC" }
,
{ category: "Reference", value: "Running programs", url: "/language/ipc#index-entry-Running_programs" }
,
{ category: "Reference", value: "v6 (Basics)", url: "/language/101-basics#index-entry-v6_(Basics)-v6" }
,
{ category: "Reference", value: "statement (Basics)", url: "/language/101-basics#index-entry-statement_(Basics)-statement" }
,
{ category: "Reference", value: "lexical", url: "/language/101-basics#index-entry-lexical" }
,
{ category: "Reference", value: "block", url: "/language/101-basics#index-entry-block" }
,
{ category: "Reference", value: "sigil", url: "/language/101-basics#index-entry-sigil" }
,
{ category: "Reference", value: "identifier (Basics)", url: "/language/101-basics#index-entry-identifier_(Basics)-identifier" }
,
{ category: "Reference", value: "scalar", url: "/language/101-basics#index-entry-scalar" }
,
{ category: "Reference", value: "filehandle", url: "/language/101-basics#index-entry-filehandle" }
,
{ category: "Reference", value: "assignment", url: "/language/101-basics#index-entry-assignment" }
,
{ category: "Reference", value: "string literal", url: "/language/101-basics#index-entry-string_literal" }
,
{ category: "Reference", value: "array", url: "/language/101-basics#index-entry-array" }
,
{ category: "Reference", value: "method (Basics)", url: "/language/101-basics#index-entry-method_(Basics)-method" }
,
{ category: "Reference", value: "invocant (Basics)", url: "/language/101-basics#index-entry-invocant_(Basics)-invocant" }
,
{ category: "Reference", value: "hash", url: "/language/101-basics#index-entry-hash" }
,
{ category: "Reference", value: "for (Basics)", url: "/language/101-basics#index-entry-for_(Basics)-for" }
,
{ category: "Reference", value: "block", url: "/language/101-basics#index-entry-block" }
,
{ category: "Reference", value: "Any (Basics)", url: "/language/101-basics#index-entry-Any_(Basics)-Any" }
,
{ category: "Reference", value: "+=", url: "/language/101-basics#index-entry-+=" }
,
{ category: "Reference", value: "fat arrow", url: "/language/101-basics#index-entry-fat_arrow" }
,
{ category: "Reference", value: "pair", url: "/language/101-basics#index-entry-pair" }
,
{ category: "Reference", value: "autovivification", url: "/language/101-basics#index-entry-autovivification" }
,
{ category: "Reference", value: "postincrement", url: "/language/101-basics#index-entry-postincrement" }
,
{ category: "Reference", value: "preincrement", url: "/language/101-basics#index-entry-preincrement" }
,
{ category: "Reference", value: "variables, $_", url: "/language/101-basics#index-entry-variables,_$__" }
,
{ category: "Reference", value: "block (Basics)", url: "/language/101-basics#index-entry-block_(Basics)-block" }
,
{ category: "Reference", value: "stable sort", url: "/language/101-basics#index-entry-stable_sort" }
,
{ category: "Reference", value: "say (Basics)", url: "/language/101-basics#index-entry-say_(Basics)-say" }
,
{ category: "Reference", value: "say (Basics)", url: "/language/101-basics#index-entry-say_(Basics)-print" }
,
{ category: "Reference", value: "put (Basics)", url: "/language/101-basics#index-entry-put_(Basics)-put" }
,
{ category: "Reference", value: "interpolation", url: "/language/101-basics#index-entry-interpolation" }
,
{ category: "Reference", value: "double-quoted strings", url: "/language/101-basics#index-entry-double-quoted_strings" }
,
{ category: "Reference", value: "single-quoted strings", url: "/language/101-basics#index-entry-single-quoted_strings" }
,
{ category: "Reference", value: "Zen slice (Basics)", url: "/language/101-basics#index-entry-Zen_slice_(Basics)-Zen_slice" }
,
{ category: "Reference", value: "$ (sigil)", url: "/language/variables#index-entry-sigil_$" }
,
{ category: "Reference", value: "@ (sigil)", url: "/language/variables#index-entry-sigil_@" }
,
{ category: "Reference", value: "% (sigil)", url: "/language/variables#index-entry-sigil_$PERCENT_SIGN" }
,
{ category: "Reference", value: "& (sigil)", url: "/language/variables#index-entry-sigil_&" }
,
{ category: "Reference", value: "is (type of variable)", url: "/language/variables#index-entry-is_(type_of_variable)" }
,
{ category: "Reference", value: "\\ (sigilless variables)", url: "/language/variables#index-entry-%5c_(sigilless_variables)" }
,
{ category: "Reference", value: "Twigil", url: "/language/variables#index-entry-Twigil" }
,
{ category: "Reference", value: "$*", url: "/language/variables#index-entry-$*" }
,
{ category: "Reference", value: "$?", url: "/language/variables#index-entry-$%3F" }
,
{ category: "Reference", value: "$!", url: "/language/variables#index-entry-$!" }
,
{ category: "Reference", value: "$.", url: "/language/variables#index-entry-$." }
,
{ category: "Reference", value: "$^", url: "/language/variables#index-entry-$$CIRCUMFLEX_ACCENT" }
,
{ category: "Reference", value: "$:", url: "/language/variables#index-entry-$:" }
,
{ category: "Reference", value: "$=", url: "/language/variables#index-entry-$=" }
,
{ category: "Reference", value: "$~", url: "/language/variables#index-entry-$~" }
,
{ category: "Reference", value: "$~MAIN", url: "/language/variables#index-entry-$~MAIN" }
,
{ category: "Reference", value: "$~Quote", url: "/language/variables#index-entry-$~Quote" }
,
{ category: "Reference", value: "$~Quasi", url: "/language/variables#index-entry-$~Quasi" }
,
{ category: "Reference", value: "$~Regex", url: "/language/variables#index-entry-$~Regex" }
,
{ category: "Reference", value: "$~Trans", url: "/language/variables#index-entry-$~Trans" }
,
{ category: "Reference", value: "$~P5Regex", url: "/language/variables#index-entry-$~P5Regex" }
,
{ category: "Reference", value: "supersede", url: "/language/variables#index-entry-supersede" }
,
{ category: "Reference", value: "declaring a list of variables", url: "/language/variables#index-entry-declaring_a_list_of_variables" }
,
{ category: "Reference", value: "destructuring assignment", url: "/language/variables#index-entry-destructuring_assignment" }
,
{ category: "Reference", value: "anon state variables", url: "/language/variables#index-entry-anon_state_variables" }
,
{ category: "Reference", value: "nameless variables", url: "/language/variables#index-entry-nameless_variables" }
,
{ category: "Reference", value: "$ (variable)", url: "/language/variables#index-entry-$_(variable)" }
,
{ category: "Reference", value: "constant (Prefix)", url: "/language/variables#index-entry-constant_(Prefix)" }
,
{ category: "Reference", value: "topic variable", url: "/language/variables#index-entry-topic_variable" }
,
{ category: "Reference", value: "match variable", url: "/language/variables#index-entry-match_variable" }
,
{ category: "Reference", value: "$0 (variable)", url: "/language/variables#index-entry-variable_$0-variable_$1-Positional_attributes" }
,
{ category: "Reference", value: "$1 (variable)", url: "/language/variables#index-entry-variable_$0-variable_$1-Positional_attributes" }
,
{ category: "Reference", value: "$<named> (variable)", url: "/language/variables#index-entry-variable_$<named>-Named_attributes" }
,
{ category: "Reference", value: "error variable", url: "/language/variables#index-entry-error_variable" }
,
{ category: "Reference", value: "$?FILE", url: "/language/variables#index-entry-$%3FFILE" }
,
{ category: "Reference", value: "$?LINE", url: "/language/variables#index-entry-$%3FLINE" }
,
{ category: "Reference", value: "::?CLASS", url: "/language/variables#index-entry-::%3FCLASS" }
,
{ category: "Reference", value: "%?RESOURCES", url: "/language/variables#index-entry-$PERCENT_SIGN%3FRESOURCES" }
,
{ category: "Reference", value: "$?PACKAGE", url: "/language/variables#index-entry-$%3FPACKAGE" }
,
{ category: "Reference", value: "$?MODULE", url: "/language/variables#index-entry-$%3FMODULE" }
,
{ category: "Reference", value: "$?CLASS", url: "/language/variables#index-entry-$%3FCLASS" }
,
{ category: "Reference", value: "$?ROLE", url: "/language/variables#index-entry-$%3FROLE" }
,
{ category: "Reference", value: "$?TABSTOP", url: "/language/variables#index-entry-$%3FTABSTOP" }
,
{ category: "Reference", value: "$?NL", url: "/language/variables#index-entry-$%3FNL" }
,
{ category: "Reference", value: "$?DISTRIBUTION", url: "/language/variables#index-entry-$%3FDISTRIBUTION" }
,
{ category: "Reference", value: "&?ROUTINE", url: "/language/variables#index-entry-&%3FROUTINE" }
,
{ category: "Reference", value: "&?BLOCK", url: "/language/variables#index-entry-&%3FBLOCK" }
,
{ category: "Reference", value: "$?DISTRIBUTION", url: "/language/variables#index-entry-$%3FDISTRIBUTION" }
,
{ category: "Reference", value: "$*ARGFILES", url: "/language/variables#index-entry-$*ARGFILES" }
,
{ category: "Reference", value: "@*ARGS", url: "/language/variables#index-entry-@*ARGS" }
,
{ category: "Reference", value: "&*ARGS-TO-CAPTURE", url: "/language/variables#index-entry-&*ARGS-TO-CAPTURE" }
,
{ category: "Reference", value: "&*GENERATE-USAGE", url: "/language/variables#index-entry-&*GENERATE-USAGE" }
,
{ category: "Reference", value: "$*IN", url: "/language/variables#index-entry-$*IN" }
,
{ category: "Reference", value: "$*OUT", url: "/language/variables#index-entry-$*OUT" }
,
{ category: "Reference", value: "$*ERR", url: "/language/variables#index-entry-$*ERR" }
,
{ category: "Reference", value: "%*ENV", url: "/language/variables#index-entry-$PERCENT_SIGN*ENV" }
,
{ category: "Reference", value: "$*REPO", url: "/language/variables#index-entry-$*REPO" }
,
{ category: "Reference", value: "$*INIT-INSTANT", url: "/language/variables#index-entry-$*INIT-INSTANT" }
,
{ category: "Reference", value: "$*TZ", url: "/language/variables#index-entry-$*TZ" }
,
{ category: "Reference", value: "$*CWD", url: "/language/variables#index-entry-$*CWD" }
,
{ category: "Reference", value: "$*KERNEL", url: "/language/variables#index-entry-$*KERNEL" }
,
{ category: "Reference", value: "$*DISTRO", url: "/language/variables#index-entry-$*DISTRO" }
,
{ category: "Reference", value: "$*VM", url: "/language/variables#index-entry-$*VM" }
,
{ category: "Reference", value: "$*PERL", url: "/language/variables#index-entry-$*PERL" }
,
{ category: "Reference", value: "$*PID", url: "/language/variables#index-entry-$*PID" }
,
{ category: "Reference", value: "$*PROGRAM-NAME", url: "/language/variables#index-entry-$*PROGRAM-NAME" }
,
{ category: "Reference", value: "$*PROGRAM", url: "/language/variables#index-entry-$*PROGRAM" }
,
{ category: "Reference", value: "&*EXIT", url: "/language/variables#index-entry-&*EXIT" }
,
{ category: "Reference", value: "$*EXECUTABLE", url: "/language/variables#index-entry-$*EXECUTABLE" }
,
{ category: "Reference", value: "$*EXECUTABLE-NAME", url: "/language/variables#index-entry-$*EXECUTABLE-NAME" }
,
{ category: "Reference", value: "$*USAGE", url: "/language/variables#index-entry-$*USAGE" }
,
{ category: "Reference", value: "$*USER", url: "/language/variables#index-entry-$*USER" }
,
{ category: "Reference", value: "$*GROUP", url: "/language/variables#index-entry-$*GROUP" }
,
{ category: "Reference", value: "$*HOMEDRIVE", url: "/language/variables#index-entry-$*HOMEDRIVE" }
,
{ category: "Reference", value: "$*HOMEPATH", url: "/language/variables#index-entry-$*HOMEPATH" }
,
{ category: "Reference", value: "$*HOME", url: "/language/variables#index-entry-$*HOME" }
,
{ category: "Reference", value: "$*SPEC", url: "/language/variables#index-entry-$*SPEC" }
,
{ category: "Reference", value: "$*TMPDIR", url: "/language/variables#index-entry-$*TMPDIR" }
,
{ category: "Reference", value: "$*THREAD", url: "/language/variables#index-entry-$*THREAD" }
,
{ category: "Reference", value: "$*SCHEDULER", url: "/language/variables#index-entry-$*SCHEDULER" }
,
{ category: "Reference", value: "$*SAMPLER", url: "/language/variables#index-entry-$*SAMPLER" }
,
{ category: "Reference", value: "$*USAGE", url: "/language/variables#index-entry-$*USAGE" }
,
{ category: "Reference", value: "$*COLLATION", url: "/language/variables#index-entry-$*COLLATION" }
,
{ category: "Reference", value: "$*TOLERANCE", url: "/language/variables#index-entry-$*TOLERANCE" }
,
{ category: "Reference", value: "$*DEFAULT-READ-ELEMS", url: "/language/variables#index-entry-$*DEFAULT-READ-ELEMS" }
,
{ category: "Reference", value: "Zen slices", url: "/language/subscripts#index-entry-Zen_slices" }
,
{ category: "Reference", value: "flattening", url: "/language/subscripts#index-entry-flattening_" }
,
{ category: "Reference", value: ":exists (subscript adverb)", url: "/language/subscripts#index-entry-:exists_(subscript_adverb)" }
,
{ category: "Reference", value: ":delete (subscript adverb)", url: "/language/subscripts#index-entry-:delete_(subscript_adverb)" }
,
{ category: "Reference", value: ":p (subscript adverb)", url: "/language/subscripts#index-entry-:p_(subscript_adverb)" }
,
{ category: "Reference", value: ":kv (subscript adverb)", url: "/language/subscripts#index-entry-:kv_(subscript_adverb)" }
,
{ category: "Reference", value: ":k (subscript adverb)", url: "/language/subscripts#index-entry-:k_(subscript_adverb)" }
,
{ category: "Reference", value: ":v (subscript adverb)", url: "/language/subscripts#index-entry-:v_(subscript_adverb)" }
,
{ category: "Reference", value: "¬´", url: "/language/unicode_ascii#index-entry-¬´" }
,
{ category: "Reference", value: "¬ª", url: "/language/unicode_ascii#index-entry-¬ª" }
,
{ category: "Reference", value: "√ó", url: "/language/unicode_ascii#index-entry-√ó" }
,
{ category: "Reference", value: "√∑", url: "/language/unicode_ascii#index-entry-√∑" }
,
{ category: "Reference", value: "‚â§", url: "/language/unicode_ascii#index-entry-‚â§" }
,
{ category: "Reference", value: "‚â•", url: "/language/unicode_ascii#index-entry-‚â•" }
,
{ category: "Reference", value: "‚â†", url: "/language/unicode_ascii#index-entry-‚â†" }
,
{ category: "Reference", value: "‚àí", url: "/language/unicode_ascii#index-entry-‚àí" }
,
{ category: "Reference", value: "‚àò", url: "/language/unicode_ascii#index-entry-‚àò" }
,
{ category: "Reference", value: "‚âÖ", url: "/language/unicode_ascii#index-entry-‚âÖ" }
,
{ category: "Reference", value: "œÄ", url: "/language/unicode_ascii#index-entry-œÄ" }
,
{ category: "Reference", value: "œÑ", url: "/language/unicode_ascii#index-entry-œÑ" }
,
{ category: "Reference", value: "ùëí", url: "/language/unicode_ascii#index-entry-ùëí" }
,
{ category: "Reference", value: "‚àû", url: "/language/unicode_ascii#index-entry-‚àû" }
,
{ category: "Reference", value: "‚Ä¶", url: "/language/unicode_ascii#index-entry-‚Ä¶" }
,
{ category: "Reference", value: "‚Äò", url: "/language/unicode_ascii#index-entry-‚Äò" }
,
{ category: "Reference", value: "‚Äô", url: "/language/unicode_ascii#index-entry-‚Äô" }
,
{ category: "Reference", value: "‚Äö", url: "/language/unicode_ascii#index-entry-‚Äö" }
,
{ category: "Reference", value: "‚Äú", url: "/language/unicode_ascii#index-entry-‚Äú" }
,
{ category: "Reference", value: "‚Äù", url: "/language/unicode_ascii#index-entry-‚Äù" }
,
{ category: "Reference", value: "‚Äû", url: "/language/unicode_ascii#index-entry-‚Äû" }
,
{ category: "Reference", value: "ÔΩ¢", url: "/language/unicode_ascii#index-entry-ÔΩ¢" }
,
{ category: "Reference", value: "ÔΩ£", url: "/language/unicode_ascii#index-entry-ÔΩ£" }
,
{ category: "Reference", value: "‚Å∫", url: "/language/unicode_ascii#index-entry-‚Å∫" }
,
{ category: "Reference", value: "‚Åª", url: "/language/unicode_ascii#index-entry-‚Åª" }
,
{ category: "Reference", value: "¬Ø", url: "/language/unicode_ascii#index-entry-¬Ø" }
,
{ category: "Reference", value: "‚Å∞", url: "/language/unicode_ascii#index-entry-‚Å∞" }
,
{ category: "Reference", value: "¬π", url: "/language/unicode_ascii#index-entry-¬π" }
,
{ category: "Reference", value: "¬≤", url: "/language/unicode_ascii#index-entry-¬≤" }
,
{ category: "Reference", value: "¬≥", url: "/language/unicode_ascii#index-entry-¬≥" }
,
{ category: "Reference", value: "‚Å¥", url: "/language/unicode_ascii#index-entry-‚Å¥" }
,
{ category: "Reference", value: "‚Åµ", url: "/language/unicode_ascii#index-entry-‚Åµ" }
,
{ category: "Reference", value: "‚Å∂", url: "/language/unicode_ascii#index-entry-‚Å∂" }
,
{ category: "Reference", value: "‚Å∑", url: "/language/unicode_ascii#index-entry-‚Å∑" }
,
{ category: "Reference", value: "‚Å∏", url: "/language/unicode_ascii#index-entry-‚Å∏" }
,
{ category: "Reference", value: "‚Åπ", url: "/language/unicode_ascii#index-entry-‚Åπ" }
,
{ category: "Reference", value: "‚àà", url: "/language/unicode_ascii#index-entry-‚àà" }
,
{ category: "Reference", value: "‚àâ", url: "/language/unicode_ascii#index-entry-‚àâ" }
,
{ category: "Reference", value: "‚àã", url: "/language/unicode_ascii#index-entry-‚àã" }
,
{ category: "Reference", value: "‚àå", url: "/language/unicode_ascii#index-entry-‚àå" }
,
{ category: "Reference", value: "‚äÜ", url: "/language/unicode_ascii#index-entry-‚äÜ" }
,
{ category: "Reference", value: "‚äà", url: "/language/unicode_ascii#index-entry-‚äà" }
,
{ category: "Reference", value: "‚äÇ", url: "/language/unicode_ascii#index-entry-‚äÇ" }
,
{ category: "Reference", value: "‚äÑ", url: "/language/unicode_ascii#index-entry-‚äÑ" }
,
{ category: "Reference", value: "‚äá", url: "/language/unicode_ascii#index-entry-‚äá" }
,
{ category: "Reference", value: "‚äâ", url: "/language/unicode_ascii#index-entry-‚äâ" }
,
{ category: "Reference", value: "‚äÉ", url: "/language/unicode_ascii#index-entry-‚äÉ" }
,
{ category: "Reference", value: "‚äÖ", url: "/language/unicode_ascii#index-entry-‚äÖ" }
,
{ category: "Reference", value: "‚âº", url: "/language/unicode_ascii#index-entry-‚âº" }
,
{ category: "Reference", value: "‚âΩ", url: "/language/unicode_ascii#index-entry-‚âΩ" }
,
{ category: "Reference", value: "‚à™", url: "/language/unicode_ascii#index-entry-‚à™" }
,
{ category: "Reference", value: "‚à©", url: "/language/unicode_ascii#index-entry-‚à©" }
,
{ category: "Reference", value: "‚àñ", url: "/language/unicode_ascii#index-entry-‚àñ" }
,
{ category: "Reference", value: "‚äñ", url: "/language/unicode_ascii#index-entry-‚äñ" }
,
{ category: "Reference", value: "‚äç", url: "/language/unicode_ascii#index-entry-‚äç" }
,
{ category: "Reference", value: "‚äé", url: "/language/unicode_ascii#index-entry-‚äé" }
,
{ category: "Reference", value: "‚öõ=", url: "/language/unicode_ascii#index-entry-‚öõ=" }
,
{ category: "Reference", value: "‚öõ", url: "/language/unicode_ascii#index-entry-‚öõ" }
,
{ category: "Reference", value: "‚öõ+=", url: "/language/unicode_ascii#index-entry-‚öõ+=" }
,
{ category: "Reference", value: "‚öõ-=", url: "/language/unicode_ascii#index-entry-‚öõ-=" }
,
{ category: "Reference", value: "‚öõ‚àí=", url: "/language/unicode_ascii#index-entry-‚öõ‚àí=" }
,
{ category: "Reference", value: "++‚öõ", url: "/language/unicode_ascii#index-entry-++‚öõ" }
,
{ category: "Reference", value: "‚öõ++", url: "/language/unicode_ascii#index-entry-‚öõ++" }
,
{ category: "Reference", value: "--‚öõ", url: "/language/unicode_ascii#index-entry---‚öõ" }
,
{ category: "Reference", value: "‚öõ--", url: "/language/unicode_ascii#index-entry-‚öõ--" }
,
{ category: "Reference", value: "¬ª=¬ª", url: "/language/unicode_ascii#index-entry-¬ª=¬ª" }
,
{ category: "Reference", value: "¬´=¬´", url: "/language/unicode_ascii#index-entry-¬´=¬´" }
,
{ category: "Reference", value: "¬´=¬ª", url: "/language/unicode_ascii#index-entry-¬´=¬ª" }
,
{ category: "Reference", value: "¬ª=¬´", url: "/language/unicode_ascii#index-entry-¬ª=¬´" }
,
{ category: "Reference", value: "compunit", url: "/language/modules#index-entry-compunit" }
,
{ category: "Reference", value: "need", url: "/language/modules#index-entry-need" }
,
{ category: "Reference", value: "use", url: "/language/modules#index-entry-use" }
,
{ category: "Reference", value: "require", url: "/language/modules#index-entry-require" }
,
{ category: "Reference", value: "sub EXPORT", url: "/language/modules#index-entry-sub_EXPORT" }
,
{ category: "Reference", value: "use lib", url: "/language/modules#index-entry-use_lib" }
,
{ category: "Reference", value: "Build.pm6", url: "/language/modules#index-entry-Build.pm6-Build.pm6" }
,
{ category: "Reference", value: "META6.json", url: "/language/modules#index-entry-META6.json-META6.json" }
,
{ category: "Reference", value: "zef", url: "/language/modules#index-entry-zef" }
,
{ category: "Reference", value: "Date and time functions", url: "/language/temporal#index-entry-Date_and_time_functions" }
,
{ category: "Reference", value: "Date ranges", url: "/language/temporal#index-entry-Date_ranges" }
,
{ category: "Reference", value: "OOP", url: "/language/classtut#index-entry-OOP" }
,
{ category: "Reference", value: "DESTROY", url: "/language/classtut#index-entry-DESTROY" }
,
{ category: "Reference", value: "submethod DESTROY", url: "/language/classtut#index-entry-submethod_DESTROY" }
,
{ category: "Reference", value: "class", url: "/language/classtut#index-entry-class" }
,
{ category: "Reference", value: "classes", url: "/language/classtut#index-entry-classes" }
,
{ category: "Reference", value: "state", url: "/language/classtut#index-entry-state" }
,
{ category: "Reference", value: "has", url: "/language/classtut#index-entry-has" }
,
{ category: "Reference", value: "has (classes)", url: "/language/classtut#index-entry-classes_has" }
,
{ category: "Reference", value: "behavior", url: "/language/classtut#index-entry-behavior" }
,
{ category: "Reference", value: "behavior (classes)", url: "/language/classtut#index-entry-classes_behavior" }
,
{ category: "Reference", value: "type object", url: "/language/classtut#index-entry-type_object" }
,
{ category: "Reference", value: "DEFINITE", url: "/language/classtut#index-entry-DEFINITE" }
,
{ category: "Reference", value: ".DEFINITE", url: "/language/classtut#index-entry-.DEFINITE" }
,
{ category: "Reference", value: "attributes", url: "/language/classtut#index-entry-attributes" }
,
{ category: "Reference", value: "attributes (classes)", url: "/language/classtut#index-entry-classes_attributes" }
,
{ category: "Reference", value: "encapsulation", url: "/language/classtut#index-entry-encapsulation" }
,
{ category: "Reference", value: "encapsulation (classes)", url: "/language/classtut#index-entry-classes_encapsulation" }
,
{ category: "Reference", value: "& (sigils)", url: "/language/classtut#index-entry-sigils_&" }
,
{ category: "Reference", value: "twigils", url: "/language/classtut#index-entry-twigils" }
,
{ category: "Reference", value: "! (twigils)", url: "/language/classtut#index-entry-twigils_!" }
,
{ category: "Reference", value: ". (twigils)", url: "/language/classtut#index-entry-twigils_." }
,
{ category: "Reference", value: "accessors (twigils)", url: "/language/classtut#index-entry-twigils_accessors" }
,
{ category: "Reference", value: "accessor methods", url: "/language/classtut#index-entry-accessor_methods" }
,
{ category: "Reference", value: "accessors (classes)", url: "/language/classtut#index-entry-classes_accessors" }
,
{ category: "Reference", value: "is rw (traits)", url: "/language/classtut#index-entry-traits_is_rw" }
,
{ category: "Reference", value: "class variables", url: "/language/classtut#index-entry-class_variables" }
,
{ category: "Reference", value: "methods", url: "/language/classtut#index-entry-methods" }
,
{ category: "Reference", value: "methods (classes)", url: "/language/classtut#index-entry-classes_methods" }
,
{ category: "Reference", value: "invocant", url: "/language/classtut#index-entry-invocant" }
,
{ category: "Reference", value: ". (operators)", url: "/language/classtut#index-entry-operators_." }
,
{ category: "Reference", value: "! (private methods)", url: "/language/classtut#index-entry-!_(private_methods)" }
,
{ category: "Reference", value: "FQN", url: "/language/classtut#index-entry-FQN" }
,
{ category: "Reference", value: "constructors", url: "/language/classtut#index-entry-constructors" }
,
{ category: "Reference", value: "bless (objects)", url: "/language/classtut#index-entry-objects_bless" }
,
{ category: "Reference", value: "bless", url: "/language/classtut#index-entry-bless" }
,
{ category: "Reference", value: "BUILD", url: "/language/classtut#index-entry-BUILD" }
,
{ category: "Reference", value: "inheritance (classes)", url: "/language/classtut#index-entry-classes__inheritance" }
,
{ category: "Reference", value: "also declarator", url: "/language/classtut#index-entry-also_declarator-also" }
,
{ category: "Reference", value: "^methods", url: "/language/classtut#index-entry-$CIRCUMFLEX_ACCENTmethods" }
,
{ category: "Reference", value: "Overriding default gist method", url: "/language/classtut#index-entry-Overriding_default_gist_method" }
,
{ category: "Reference", value: "nativecall", url: "/language/nativecall#index-entry-nativecall" }
,
{ category: "Reference", value: "repr", url: "/language/nativecall#index-entry-repr" }
,
{ category: "Reference", value: "is repr", url: "/language/nativecall#index-entry-is_repr" }
,
{ category: "Reference", value: "CStruct (native representation)", url: "/language/nativecall#index-entry-CStruct_(native_representation)" }
,
{ category: "Reference", value: "CArray", url: "/language/nativecall#index-entry-CArray" }
,
{ category: "Reference", value: "CArray methods", url: "/language/nativecall#index-entry-CArray_methods" }
,
{ category: "Reference", value: "deref", url: "/language/nativecall#index-entry-deref-.deref" }
,
{ category: "Reference", value: "is (trait)", url: "/language/traits#index-entry-is_(trait)-is_trait" }
,
{ category: "Reference", value: "Uninstantiable representation trait", url: "/language/traits#index-entry-Uninstantiable_representation_trait" }
,
{ category: "Reference", value: "CStruct", url: "/language/traits#index-entry-CStruct" }
,
{ category: "Reference", value: "CPPStruct", url: "/language/traits#index-entry-CPPStruct" }
,
{ category: "Reference", value: "CPointer", url: "/language/traits#index-entry-CPointer" }
,
{ category: "Reference", value: "CUnion", url: "/language/traits#index-entry-CUnion" }
,
{ category: "Reference", value: "P6opaque", url: "/language/traits#index-entry-P6opaque" }
,
{ category: "Reference", value: ":$translate-nl", url: "/language/newline#index-entry-:$translate-nl" }
,
{ category: "Reference", value: ":nl-out", url: "/language/newline#index-entry-:nl-out" }
,
{ category: "Reference", value: "‚àÖ", url: "/language/terms#index-entry-‚àÖ" }
,
{ category: "Reference", value: "empty set", url: "/language/terms#index-entry-empty_set" }
,
{ category: "Reference", value: "constant (Terms)", url: "/language/terms#index-entry-constant_(Terms)" }
,
{ category: "Reference", value: "lazy (statement prefix)", url: "/language/statement-prefixes#index-entry-lazy_(statement_prefix)-lazy" }
,
{ category: "Reference", value: "eager (statement prefix)", url: "/language/statement-prefixes#index-entry-eager_(statement_prefix)-eager" }
,
{ category: "Reference", value: "hyper (statement prefix)", url: "/language/statement-prefixes#index-entry-hyper_(statement_prefix)-hyper" }
,
{ category: "Reference", value: "race (statement prefix)", url: "/language/statement-prefixes#index-entry-race_(statement_prefix)-race" }
,
{ category: "Reference", value: "quietly (statement prefix)", url: "/language/statement-prefixes#index-entry-quietly_(statement_prefix)-quietly" }
,
{ category: "Reference", value: "try (statement prefix)", url: "/language/statement-prefixes#index-entry-try_(statement_prefix)-try" }
,
{ category: "Reference", value: "do (statement prefix)", url: "/language/statement-prefixes#index-entry-do_(statement_prefix)-do" }
,
{ category: "Reference", value: "sink (statement prefix)", url: "/language/statement-prefixes#index-entry-sink_(statement_prefix)-sink" }
,
{ category: "Reference", value: "once (statement prefix)", url: "/language/statement-prefixes#index-entry-once_(statement_prefix)-once" }
,
{ category: "Reference", value: "gather (statement prefix)", url: "/language/statement-prefixes#index-entry-gather_(statement_prefix)-gather" }
,
{ category: "Reference", value: "start (statement prefix)", url: "/language/statement-prefixes#index-entry-start_(statement_prefix)-start" }
,
{ category: "Reference", value: "react (statement prefix)", url: "/language/statement-prefixes#index-entry-react_(statement_prefix)-react" }
,
{ category: "Reference", value: "supply (statement prefix)", url: "/language/statement-prefixes#index-entry-supply_(statement_prefix)-supply" }
,
{ category: "Reference", value: "Special Variables (Perl¬†5)", url: "/language/5to6-perlvar#index-entry-Special_Variables_(Perl¬†5)" }
,
{ category: "Reference", value: "$_ (Perl¬†5)", url: "/language/5to6-perlvar#index-entry-$___(Perl¬†5)" }
,
{ category: "Reference", value: "@_ (Perl¬†5)", url: "/language/5to6-perlvar#index-entry-@___(Perl¬†5)" }
,
{ category: "Reference", value: "$$ (Perl¬†5)", url: "/language/5to6-perlvar#index-entry-$$_(Perl¬†5)" }
,
{ category: "Reference", value: "$0 (Perl¬†5)", url: "/language/5to6-perlvar#index-entry-$0_(Perl¬†5)" }
,
{ category: "Reference", value: "@INC (Perl¬†5)", url: "/language/5to6-perlvar#index-entry-@INC_(Perl¬†5)" }
,
{ category: "Reference", value: "%INC (Perl¬†5)", url: "/language/5to6-perlvar#index-entry-$PERCENT_SIGNINC_(Perl¬†5)" }
,
{ category: "Reference", value: "XCompose", url: "/language/unicode_entry#index-entry-XCompose" }
,
{ category: "Reference", value: "ibus", url: "/language/unicode_entry#index-entry-ibus" }
,
{ category: "Reference", value: "WinCompose", url: "/language/unicode_entry#index-entry-WinCompose" }
,
{ category: "Reference", value: "Vim", url: "/language/unicode_entry#index-entry-Vim" }
,
{ category: "Reference", value: "Emacs", url: "/language/unicode_entry#index-entry-Emacs" }
,
{ category: "Reference", value: "CATCH", url: "/language/exceptions#index-entry-CATCH-CATCH" }
,
{ category: "Reference", value: "try blocks", url: "/language/exceptions#index-entry-try_blocks" }
,
{ category: "Reference", value: "resume (Exceptions)", url: "/language/exceptions#index-entry-resume_(Exceptions)" }
,
{ category: "Reference", value: "Single Argument Rule", url: "/language/list#index-entry-Single_Argument_Rule" }
,
{ category: "Reference", value: "laziness in Iterable objects", url: "/language/list#index-entry-laziness_in_Iterable_objects" }
,
{ category: "Reference", value: "typed array", url: "/language/list#index-entry-typed_array" }
,
{ category: "Reference", value: "[ ] (typed array)", url: "/language/list#index-entry-[_]_(typed_array)" }
,
{ category: "Reference", value: "Shaped arrays", url: "/language/list#index-entry-Shaped_arrays" }
,
{ category: "Reference", value: "Type objects", url: "/language/objects#index-entry-Type_objects" }
,
{ category: "Reference", value: "class (declarator)", url: "/language/objects#index-entry-declarator_class-Classes" }
,
{ category: "Reference", value: "Attribute", url: "/language/objects#index-entry-Attribute" }
,
{ category: "Reference", value: "Property", url: "/language/objects#index-entry-Property" }
,
{ category: "Reference", value: "Member", url: "/language/objects#index-entry-Member" }
,
{ category: "Reference", value: "Slot", url: "/language/objects#index-entry-Slot" }
,
{ category: "Reference", value: "indirect invocant syntax", url: "/language/objects#index-entry-indirect_invocant_syntax" }
,
{ category: "Reference", value: "self", url: "/language/objects#index-entry-self" }
,
{ category: "Reference", value: "Private methods", url: "/language/objects#index-entry-Private_methods" }
,
{ category: "Reference", value: "Submethods", url: "/language/objects#index-entry-Submethods" }
,
{ category: "Reference", value: "new (method)", url: "/language/objects#index-entry-new_(method)" }
,
{ category: "Reference", value: "TWEAK", url: "/language/objects#index-entry-TWEAK" }
,
{ category: "Reference", value: "role (declarator)", url: "/language/objects#index-entry-declarator_role-Roles" }
,
{ category: "Reference", value: "does", url: "/language/objects#index-entry-does" }
,
{ category: "Reference", value: "Parameterized Roles", url: "/language/objects#index-entry-Parameterized_Roles" }
,
{ category: "Reference", value: "but", url: "/language/objects#index-entry-but" }
,
{ category: "Reference", value: "Mixins", url: "/language/objects#index-entry-Mixins" }
,
{ category: "Reference", value: "Q (quote)", url: "/language/quoting#index-entry-quote_Q-quote_ÔΩ¢_ÔΩ£-Literal_strings:_Q" }
,
{ category: "Reference", value: "ÔΩ¢ ÔΩ£ (quote)", url: "/language/quoting#index-entry-quote_Q-quote_ÔΩ¢_ÔΩ£-Literal_strings:_Q" }
,
{ category: "Reference", value: ":x (quoting adverb)", url: "/language/quoting#index-entry-:x_(quoting_adverb)" }
,
{ category: "Reference", value: ":exec (quoting adverb)", url: "/language/quoting#index-entry-:exec_(quoting_adverb)" }
,
{ category: "Reference", value: ":w (quoting adverb)", url: "/language/quoting#index-entry-:w_(quoting_adverb)" }
,
{ category: "Reference", value: ":words (quoting adverb)", url: "/language/quoting#index-entry-:words_(quoting_adverb)" }
,
{ category: "Reference", value: ":ww (quoting adverb)", url: "/language/quoting#index-entry-:ww_(quoting_adverb)" }
,
{ category: "Reference", value: ":quotewords (quoting adverb)", url: "/language/quoting#index-entry-:quotewords_(quoting_adverb)" }
,
{ category: "Reference", value: ":q (quoting adverb)", url: "/language/quoting#index-entry-:q_(quoting_adverb)" }
,
{ category: "Reference", value: ":single (quoting adverb)", url: "/language/quoting#index-entry-:single_(quoting_adverb)" }
,
{ category: "Reference", value: ":qq (quoting adverb)", url: "/language/quoting#index-entry-:qq_(quoting_adverb)" }
,
{ category: "Reference", value: ":double (quoting adverb)", url: "/language/quoting#index-entry-:double_(quoting_adverb)" }
,
{ category: "Reference", value: ":s (quoting adverb)", url: "/language/quoting#index-entry-:s_(quoting_adverb)" }
,
{ category: "Reference", value: ":scalar (quoting adverb)", url: "/language/quoting#index-entry-:scalar_(quoting_adverb)" }
,
{ category: "Reference", value: ":a (quoting adverb)", url: "/language/quoting#index-entry-:a_(quoting_adverb)" }
,
{ category: "Reference", value: ":array (quoting adverb)", url: "/language/quoting#index-entry-:array_(quoting_adverb)" }
,
{ category: "Reference", value: ":h (quoting adverb)", url: "/language/quoting#index-entry-:h_(quoting_adverb)" }
,
{ category: "Reference", value: ":hash (quoting adverb)", url: "/language/quoting#index-entry-:hash_(quoting_adverb)" }
,
{ category: "Reference", value: ":f (quoting adverb)", url: "/language/quoting#index-entry-:f_(quoting_adverb)" }
,
{ category: "Reference", value: ":function (quoting adverb)", url: "/language/quoting#index-entry-:function_(quoting_adverb)" }
,
{ category: "Reference", value: ":c (quoting adverb)", url: "/language/quoting#index-entry-:c_(quoting_adverb)" }
,
{ category: "Reference", value: ":closure (quoting adverb)", url: "/language/quoting#index-entry-:closure_(quoting_adverb)" }
,
{ category: "Reference", value: ":b (quoting adverb)", url: "/language/quoting#index-entry-:b_(quoting_adverb)" }
,
{ category: "Reference", value: ":backslash (quoting adverb)", url: "/language/quoting#index-entry-:backslash_(quoting_adverb)" }
,
{ category: "Reference", value: ":to (quoting adverb)", url: "/language/quoting#index-entry-:to_(quoting_adverb)" }
,
{ category: "Reference", value: ":heredoc (quoting adverb)", url: "/language/quoting#index-entry-:heredoc_(quoting_adverb)" }
,
{ category: "Reference", value: ":v (quoting adverb)", url: "/language/quoting#index-entry-:v_(quoting_adverb)" }
,
{ category: "Reference", value: ":val (quoting adverb)", url: "/language/quoting#index-entry-:val_(quoting_adverb)" }
,
{ category: "Reference", value: "escaping quote", url: "/language/quoting#index-entry-escaping_quote" }
,
{ category: "Reference", value: "q (quote)", url: "/language/quoting#index-entry-quote_q-quote_'_'-Escaping:_q" }
,
{ category: "Reference", value: "' ' (quote)", url: "/language/quoting#index-entry-quote_q-quote_'_'-Escaping:_q" }
,
{ category: "Reference", value: "qq (quote)", url: "/language/quoting#index-entry-quote_qq-quote_\"_\"-Interpolation:_qq" }
,
{ category: "Reference", value: "\" \" (quote)", url: "/language/quoting#index-entry-quote_qq-quote_\"_\"-Interpolation:_qq" }
,
{ category: "Reference", value: "\\ (quoting)", url: "/language/quoting#index-entry-%5c_(quoting)" }
,
{ category: "Reference", value: "& (interpolation)", url: "/language/quoting#index-entry-&_(interpolation)" }
,
{ category: "Reference", value: "qw word quote", url: "/language/quoting#index-entry-qw_word_quote" }
,
{ category: "Reference", value: "< > word quote", url: "/language/quoting#index-entry-<_>_word_quote" }
,
{ category: "Reference", value: "qww (quote)", url: "/language/quoting#index-entry-quote_qww-Word_quoting_with_quote_protection:_qww" }
,
{ category: "Reference", value: "qqw (quote)", url: "/language/quoting#index-entry-quote_qqw-Word_quoting_with_interpolation:_qqw" }
,
{ category: "Reference", value: "qqww (quote)", url: "/language/quoting#index-entry-quote_qqww-Word_quoting_with_interpolation_and_quote_protection:_qqww" }
,
{ category: "Reference", value: "<< >> (quote)", url: "/language/quoting#index-entry-quote_<<_>>-quote_¬´_¬ª-Word_quoting_with_interpolation_and_quote_protection:_¬´_¬ª" }
,
{ category: "Reference", value: "¬´ ¬ª (quote)", url: "/language/quoting#index-entry-quote_<<_>>-quote_¬´_¬ª-Word_quoting_with_interpolation_and_quote_protection:_¬´_¬ª" }
,
{ category: "Reference", value: "qx (quote)", url: "/language/quoting#index-entry-quote_qx-Shell_quoting:_qx" }
,
{ category: "Reference", value: "qqx (quote)", url: "/language/quoting#index-entry-quote_qqx-Shell_quoting_with_interpolation:_qqx" }
,
{ category: "Reference", value: "heredocs :to (quote)", url: "/language/quoting#index-entry-quote_heredocs_:to-Heredocs:_:to" }
,
{ category: "Reference", value: "statements (control flow)", url: "/language/control#index-entry-control_flow__statements-statements" }
,
{ category: "Reference", value: "blocks (control flow)", url: "/language/control#index-entry-control_flow__blocks-Blocks" }
,
{ category: "Reference", value: "Phasers (control flow)", url: "/language/control#index-entry-control_flow_Phasers-Phasers" }
,
{ category: "Reference", value: "do (control flow)", url: "/language/control#index-entry-control_flow_do-do" }
,
{ category: "Reference", value: "start (control flow)", url: "/language/control#index-entry-control_flow_start-start" }
,
{ category: "Reference", value: "if (control flow)", url: "/language/control#index-entry-control_flow_if-if" }
,
{ category: "Reference", value: "else elsif (control flow)", url: "/language/control#index-entry-control_flow_else_elsif-else$SOLIDUSelsif" }
,
{ category: "Reference", value: "unless (control flow)", url: "/language/control#index-entry-control_flow__unless-unless" }
,
{ category: "Reference", value: "with (control flow)", url: "/language/control#index-entry-control_flow_with" }
,
{ category: "Reference", value: "orwith (control flow)", url: "/language/control#index-entry-control_flow_orwith" }
,
{ category: "Reference", value: "without (control flow)", url: "/language/control#index-entry-control_flow_without" }
,
{ category: "Reference", value: "with orwith without", url: "/language/control#index-entry-with_orwith_without-with_orwith_without" }
,
{ category: "Reference", value: "when (control flow)", url: "/language/control#index-entry-control_flow__when-when" }
,
{ category: "Reference", value: "for (control flow)", url: "/language/control#index-entry-control_flow__for-for" }
,
{ category: "Reference", value: "gather take (control flow)", url: "/language/control#index-entry-control_flow_gather_take-gather$SOLIDUStake" }
,
{ category: "Reference", value: "gather (lazy list)", url: "/language/control#index-entry-lazy_list_gather" }
,
{ category: "Reference", value: "take (lazy list)", url: "/language/control#index-entry-lazy_list_take" }
,
{ category: "Reference", value: "supply emit (control flow)", url: "/language/control#index-entry-control_flow_supply_emit-supply$SOLIDUSemit" }
,
{ category: "Reference", value: "given (control flow)", url: "/language/control#index-entry-control_flow__given-given" }
,
{ category: "Reference", value: "switch (given)", url: "/language/control#index-entry-switch_(given)" }
,
{ category: "Reference", value: "default when (control flow)", url: "/language/control#index-entry-control_flow_default_when-default_and_when" }
,
{ category: "Reference", value: "proceed (control flow)", url: "/language/control#index-entry-control_flow__proceed-proceed" }
,
{ category: "Reference", value: "succeed (control flow)", url: "/language/control#index-entry-control_flow__succeed-succeed" }
,
{ category: "Reference", value: "given statement (control flow)", url: "/language/control#index-entry-control_flow_given_statement-given_as_a_statement" }
,
{ category: "Reference", value: "loop (control flow)", url: "/language/control#index-entry-control_flow__loop-loop" }
,
{ category: "Reference", value: "while until (control flow)", url: "/language/control#index-entry-control_flow_while_until-while,_until" }
,
{ category: "Reference", value: "repeat (control flow)", url: "/language/control#index-entry-control_flow_repeat-repeat$SOLIDUSwhile,_repeat$SOLIDUSuntil" }
,
{ category: "Reference", value: "return (control flow)", url: "/language/control#index-entry-control_flow_return-return" }
,
{ category: "Reference", value: "return-rw (control flow)", url: "/language/control#index-entry-control_flow__return-rw-return-rw" }
,
{ category: "Reference", value: "fail (control flow)", url: "/language/control#index-entry-control_flow__fail-fail" }
,
{ category: "Reference", value: "once (control flow)", url: "/language/control#index-entry-control_flow__once-once" }
,
{ category: "Reference", value: "quietly (control flow)", url: "/language/control#index-entry-control_flow__quietly-quietly" }
,
{ category: "Reference", value: "next (control flow)", url: "/language/control#index-entry-control_flow__next-next" }
,
{ category: "Reference", value: "last (control flow)", url: "/language/control#index-entry-control_flow__last-last" }
,
{ category: "Reference", value: "redo (control flow)", url: "/language/control#index-entry-control_flow__redo-redo" }
,
{ category: "Reference", value: "token (declarator)", url: "/language/grammars#index-entry-declarator_token-Named_Regexes" }
,
{ category: "Reference", value: "rule (declarator)", url: "/language/grammars#index-entry-declarator_rule-Rules" }
,
{ category: "Reference", value: "Creating grammars", url: "/language/grammars#index-entry-Creating_grammars" }
,
{ category: "Reference", value: ":sym<>", url: "/language/grammars#index-entry-:sym<>-_proto_regex-_declarator_grammar-Proto_regexes" }
,
{ category: "Reference", value: "proto regex", url: "/language/grammars#index-entry-:sym<>-_proto_regex-_declarator_grammar-Proto_regexes" }
,
{ category: "Reference", value: "grammar ( declarator)", url: "/language/grammars#index-entry-:sym<>-_proto_regex-_declarator_grammar-Proto_regexes" }
,
{ category: "Reference", value: "TOP", url: "/language/grammars#index-entry-TOP-TOP" }
,
{ category: "Reference", value: "ws", url: "/language/grammars#index-entry-ws" }
,
{ category: "Reference", value: "<sym>", url: "/language/grammars#index-entry-<sym>-sym" }
,
{ category: "Reference", value: "<?>", url: "/language/grammars#index-entry-<%3F>" }
,
{ category: "Reference", value: "Actions", url: "/language/grammars#index-entry-Actions" }
,
{ category: "Reference", value: "filetests - perlfunc", url: "/language/5to6-perlfunc#index-entry-filetests_-_perlfunc" }
,
{ category: "Reference", value: "abs - perlfunc", url: "/language/5to6-perlfunc#index-entry-abs_-_perlfunc" }
,
{ category: "Reference", value: "accept - perlfunc", url: "/language/5to6-perlfunc#index-entry-accept_-_perlfunc" }
,
{ category: "Reference", value: "alarm - perlfunc", url: "/language/5to6-perlfunc#index-entry-alarm_-_perlfunc" }
,
{ category: "Reference", value: "atan2 - perlfunc", url: "/language/5to6-perlfunc#index-entry-atan2_-_perlfunc" }
,
{ category: "Reference", value: "bind - perlfunc", url: "/language/5to6-perlfunc#index-entry-bind_-_perlfunc" }
,
{ category: "Reference", value: "binmode - perlfunc", url: "/language/5to6-perlfunc#index-entry-binmode_-_perlfunc" }
,
{ category: "Reference", value: "bless - perlfunc", url: "/language/5to6-perlfunc#index-entry-bless_-_perlfunc" }
,
{ category: "Reference", value: "break - perlfunc", url: "/language/5to6-perlfunc#index-entry-break_-_perlfunc" }
,
{ category: "Reference", value: "caller - perlfunc", url: "/language/5to6-perlfunc#index-entry-caller_-_perlfunc" }
,
{ category: "Reference", value: "chdir - perlfunc", url: "/language/5to6-perlfunc#index-entry-chdir_-_perlfunc" }
,
{ category: "Reference", value: "chmod - perlfunc", url: "/language/5to6-perlfunc#index-entry-chmod_-_perlfunc" }
,
{ category: "Reference", value: "chomp - perlfunc", url: "/language/5to6-perlfunc#index-entry-chomp_-_perlfunc" }
,
{ category: "Reference", value: "chop - perlfunc", url: "/language/5to6-perlfunc#index-entry-chop_-_perlfunc" }
,
{ category: "Reference", value: "chr - perlfunc", url: "/language/5to6-perlfunc#index-entry-chr_-_perlfunc" }
,
{ category: "Reference", value: "chroot - perlfunc", url: "/language/5to6-perlfunc#index-entry-chroot_-_perlfunc" }
,
{ category: "Reference", value: "close - perlfunc", url: "/language/5to6-perlfunc#index-entry-close_-_perlfunc" }
,
{ category: "Reference", value: "closedir - perlfunc", url: "/language/5to6-perlfunc#index-entry-closedir_-_perlfunc" }
,
{ category: "Reference", value: "connect - perlfunc", url: "/language/5to6-perlfunc#index-entry-connect_-_perlfunc" }
,
{ category: "Reference", value: "continue - perlfunc", url: "/language/5to6-perlfunc#index-entry-continue_-_perlfunc" }
,
{ category: "Reference", value: "cos - perlfunc", url: "/language/5to6-perlfunc#index-entry-cos_-_perlfunc" }
,
{ category: "Reference", value: "crypt - perlfunc", url: "/language/5to6-perlfunc#index-entry-crypt_-_perlfunc" }
,
{ category: "Reference", value: "dbm - perlfunc", url: "/language/5to6-perlfunc#index-entry-dbm_-_perlfunc" }
,
{ category: "Reference", value: "defined - perlfunc", url: "/language/5to6-perlfunc#index-entry-defined_-_perlfunc" }
,
{ category: "Reference", value: "delete - perlfunc", url: "/language/5to6-perlfunc#index-entry-delete_-_perlfunc" }
,
{ category: "Reference", value: "die - perlfunc", url: "/language/5to6-perlfunc#index-entry-die_-_perlfunc" }
,
{ category: "Reference", value: "do - perlfunc", url: "/language/5to6-perlfunc#index-entry-do_-_perlfunc" }
,
{ category: "Reference", value: "dump - perlfunc", url: "/language/5to6-perlfunc#index-entry-dump_-_perlfunc" }
,
{ category: "Reference", value: "each - perlfunc", url: "/language/5to6-perlfunc#index-entry-each_-_perlfunc" }
,
{ category: "Reference", value: "eof - perlfunc", url: "/language/5to6-perlfunc#index-entry-eof_-_perlfunc" }
,
{ category: "Reference", value: "eval - perlfunc", url: "/language/5to6-perlfunc#index-entry-eval_-_perlfunc" }
,
{ category: "Reference", value: "evalbytes - perlfunc", url: "/language/5to6-perlfunc#index-entry-evalbytes_-_perlfunc" }
,
{ category: "Reference", value: "exec - perlfunc", url: "/language/5to6-perlfunc#index-entry-exec_-_perlfunc" }
,
{ category: "Reference", value: "exists - perlfunc", url: "/language/5to6-perlfunc#index-entry-exists_-_perlfunc" }
,
{ category: "Reference", value: "exit - perlfunc", url: "/language/5to6-perlfunc#index-entry-exit_-_perlfunc" }
,
{ category: "Reference", value: "exp - perlfunc", url: "/language/5to6-perlfunc#index-entry-exp_-_perlfunc" }
,
{ category: "Reference", value: "fc - perlfunc", url: "/language/5to6-perlfunc#index-entry-fc_-_perlfunc" }
,
{ category: "Reference", value: "fcntl - perlfunc", url: "/language/5to6-perlfunc#index-entry-fcntl_-_perlfunc" }
,
{ category: "Reference", value: "__FILE__ - perlfunc", url: "/language/5to6-perlfunc#index-entry-____FILE_____-_perlfunc" }
,
{ category: "Reference", value: "fileno - perlfunc", url: "/language/5to6-perlfunc#index-entry-fileno_-_perlfunc" }
,
{ category: "Reference", value: "flock - perlfunc", url: "/language/5to6-perlfunc#index-entry-flock_-_perlfunc" }
,
{ category: "Reference", value: "fork - perlfunc", url: "/language/5to6-perlfunc#index-entry-fork_-_perlfunc" }
,
{ category: "Reference", value: "formats - perlfunc", url: "/language/5to6-perlfunc#index-entry-formats_-_perlfunc" }
,
{ category: "Reference", value: "getc - perlfunc", url: "/language/5to6-perlfunc#index-entry-getc_-_perlfunc" }
,
{ category: "Reference", value: "getpeernmae - perlfunc", url: "/language/5to6-perlfunc#index-entry-getpeernmae_-_perlfunc" }
,
{ category: "Reference", value: "getpgrp - perlfunc", url: "/language/5to6-perlfunc#index-entry-getpgrp_-_perlfunc" }
,
{ category: "Reference", value: "getppid - perlfunc", url: "/language/5to6-perlfunc#index-entry-getppid_-_perlfunc" }
,
{ category: "Reference", value: "getpriority - perlfunc", url: "/language/5to6-perlfunc#index-entry-getpriority_-_perlfunc" }
,
{ category: "Reference", value: "get and set - perlfunc", url: "/language/5to6-perlfunc#index-entry-get_and_set_-_perlfunc" }
,
{ category: "Reference", value: "getshock - perlfunc", url: "/language/5to6-perlfunc#index-entry-getshock_-_perlfunc" }
,
{ category: "Reference", value: "glob - perlfunc", url: "/language/5to6-perlfunc#index-entry-glob_-_perlfunc" }
,
{ category: "Reference", value: "gmtime - perlfunc", url: "/language/5to6-perlfunc#index-entry-gmtime_-_perlfunc" }
,
{ category: "Reference", value: "goto - perlfunc", url: "/language/5to6-perlfunc#index-entry-goto_-_perlfunc" }
,
{ category: "Reference", value: "grep - perlfunc", url: "/language/5to6-perlfunc#index-entry-grep_-_perlfunc" }
,
{ category: "Reference", value: "hex - perlfunc", url: "/language/5to6-perlfunc#index-entry-hex_-_perlfunc" }
,
{ category: "Reference", value: "import - perlfunc", url: "/language/5to6-perlfunc#index-entry-import_-_perlfunc" }
,
{ category: "Reference", value: "index - perlfunc", url: "/language/5to6-perlfunc#index-entry-index_-_perlfunc" }
,
{ category: "Reference", value: "int - perlfunc", url: "/language/5to6-perlfunc#index-entry-int_-_perlfunc" }
,
{ category: "Reference", value: "ioctl - perlfunc", url: "/language/5to6-perlfunc#index-entry-ioctl_-_perlfunc" }
,
{ category: "Reference", value: "join - perlfunc", url: "/language/5to6-perlfunc#index-entry-join_-_perlfunc" }
,
{ category: "Reference", value: "keys - perlfunc", url: "/language/5to6-perlfunc#index-entry-keys_-_perlfunc" }
,
{ category: "Reference", value: "kill - perlfunc", url: "/language/5to6-perlfunc#index-entry-kill_-_perlfunc" }
,
{ category: "Reference", value: "last - perlfunc", url: "/language/5to6-perlfunc#index-entry-last_-_perlfunc" }
,
{ category: "Reference", value: "lc - perlfunc", url: "/language/5to6-perlfunc#index-entry-lc_-_perlfunc" }
,
{ category: "Reference", value: "lcfirst - perlfunc", url: "/language/5to6-perlfunc#index-entry-lcfirst_-_perlfunc" }
,
{ category: "Reference", value: "length - perlfunc", url: "/language/5to6-perlfunc#index-entry-length_-_perlfunc" }
,
{ category: "Reference", value: "__LINE__ - perlfunc", url: "/language/5to6-perlfunc#index-entry-____LINE_____-_perlfunc" }
,
{ category: "Reference", value: "link - perlfunc", url: "/language/5to6-perlfunc#index-entry-link_-_perlfunc" }
,
{ category: "Reference", value: "listen - perlfunc", url: "/language/5to6-perlfunc#index-entry-listen_-_perlfunc" }
,
{ category: "Reference", value: "local - perlfunc", url: "/language/5to6-perlfunc#index-entry-local_-_perlfunc" }
,
{ category: "Reference", value: "localtime - perlfunc", url: "/language/5to6-perlfunc#index-entry-localtime_-_perlfunc" }
,
{ category: "Reference", value: "lock - perlfunc", url: "/language/5to6-perlfunc#index-entry-lock_-_perlfunc" }
,
{ category: "Reference", value: "log - perlfunc", url: "/language/5to6-perlfunc#index-entry-log_-_perlfunc" }
,
{ category: "Reference", value: "lstat - perlfunc", url: "/language/5to6-perlfunc#index-entry-lstat_-_perlfunc" }
,
{ category: "Reference", value: "m\/\/ - perlfunc", url: "/language/5to6-perlfunc#index-entry-m$SOLIDUS$SOLIDUS_-_perlfunc" }
,
{ category: "Reference", value: "map - perlfunc", url: "/language/5to6-perlfunc#index-entry-map_-_perlfunc" }
,
{ category: "Reference", value: "mkdir - perlfunc", url: "/language/5to6-perlfunc#index-entry-mkdir_-_perlfunc" }
,
{ category: "Reference", value: "msg* - perlfunc", url: "/language/5to6-perlfunc#index-entry-msg*_-_perlfunc" }
,
{ category: "Reference", value: "my - perlfunc", url: "/language/5to6-perlfunc#index-entry-my_-_perlfunc" }
,
{ category: "Reference", value: "next - perlfunc", url: "/language/5to6-perlfunc#index-entry-next_-_perlfunc" }
,
{ category: "Reference", value: "no - perlfunc", url: "/language/5to6-perlfunc#index-entry-no_-_perlfunc" }
,
{ category: "Reference", value: "oct - perlfunc", url: "/language/5to6-perlfunc#index-entry-oct_-_perlfunc" }
,
{ category: "Reference", value: "open - perlfunc", url: "/language/5to6-perlfunc#index-entry-open_-_perlfunc" }
,
{ category: "Reference", value: "opendir - perlfunc", url: "/language/5to6-perlfunc#index-entry-opendir_-_perlfunc" }
,
{ category: "Reference", value: "ord - perlfunc", url: "/language/5to6-perlfunc#index-entry-ord_-_perlfunc" }
,
{ category: "Reference", value: "our - perlfunc", url: "/language/5to6-perlfunc#index-entry-our_-_perlfunc" }
,
{ category: "Reference", value: "pack - perlfunc", url: "/language/5to6-perlfunc#index-entry-pack_-_perlfunc" }
,
{ category: "Reference", value: "package - perlfunc", url: "/language/5to6-perlfunc#index-entry-package_-_perlfunc" }
,
{ category: "Reference", value: "__PACKAGE__ - perlfunc", url: "/language/5to6-perlfunc#index-entry-____PACKAGE_____-_perlfunc" }
,
{ category: "Reference", value: "pipe - perlfunc", url: "/language/5to6-perlfunc#index-entry-pipe_-_perlfunc" }
,
{ category: "Reference", value: "pop - perlfunc", url: "/language/5to6-perlfunc#index-entry-pop_-_perlfunc" }
,
{ category: "Reference", value: "pos - perlfunc", url: "/language/5to6-perlfunc#index-entry-pos_-_perlfunc" }
,
{ category: "Reference", value: "print - perlfunc", url: "/language/5to6-perlfunc#index-entry-print_-_perlfunc" }
,
{ category: "Reference", value: "printf - perlfunc", url: "/language/5to6-perlfunc#index-entry-printf_-_perlfunc" }
,
{ category: "Reference", value: "prototype - perlfunc", url: "/language/5to6-perlfunc#index-entry-prototype_-_perlfunc" }
,
{ category: "Reference", value: "push - perlfunc", url: "/language/5to6-perlfunc#index-entry-push_-_perlfunc" }
,
{ category: "Reference", value: "quoting - perlfunc", url: "/language/5to6-perlfunc#index-entry-quoting_-_perlfunc" }
,
{ category: "Reference", value: "qr (Perl¬†5)", url: "/language/5to6-perlfunc#index-entry-qr_(Perl¬†5)" }
,
{ category: "Reference", value: "rand - perlfunc", url: "/language/5to6-perlfunc#index-entry-rand_-_perlfunc" }
,
{ category: "Reference", value: "read - perlfunc", url: "/language/5to6-perlfunc#index-entry-read_-_perlfunc" }
,
{ category: "Reference", value: "readdir - perlfunc", url: "/language/5to6-perlfunc#index-entry-readdir_-_perlfunc" }
,
{ category: "Reference", value: "readline - perlfunc", url: "/language/5to6-perlfunc#index-entry-readline_-_perlfunc" }
,
{ category: "Reference", value: "readlink - perlfunc", url: "/language/5to6-perlfunc#index-entry-readlink_-_perlfunc" }
,
{ category: "Reference", value: "readpipe - perlfunc", url: "/language/5to6-perlfunc#index-entry-readpipe_-_perlfunc" }
,
{ category: "Reference", value: "recv - perlfunc", url: "/language/5to6-perlfunc#index-entry-recv_-_perlfunc" }
,
{ category: "Reference", value: "redo - perlfunc", url: "/language/5to6-perlfunc#index-entry-redo_-_perlfunc" }
,
{ category: "Reference", value: "ref - perlfunc", url: "/language/5to6-perlfunc#index-entry-ref_-_perlfunc" }
,
{ category: "Reference", value: "rename - perlfunc", url: "/language/5to6-perlfunc#index-entry-rename_-_perlfunc" }
,
{ category: "Reference", value: "requires - perlfunc", url: "/language/5to6-perlfunc#index-entry-requires_-_perlfunc" }
,
{ category: "Reference", value: "reset - perlfunc", url: "/language/5to6-perlfunc#index-entry-reset_-_perlfunc" }
,
{ category: "Reference", value: "return - perlfunc", url: "/language/5to6-perlfunc#index-entry-return_-_perlfunc" }
,
{ category: "Reference", value: "reverse - perlfunc", url: "/language/5to6-perlfunc#index-entry-reverse_-_perlfunc" }
,
{ category: "Reference", value: "rewinddir - perlfunc", url: "/language/5to6-perlfunc#index-entry-rewinddir_-_perlfunc" }
,
{ category: "Reference", value: "rindex - perlfunc", url: "/language/5to6-perlfunc#index-entry-rindex_-_perlfunc" }
,
{ category: "Reference", value: "rmdir - perlfunc", url: "/language/5to6-perlfunc#index-entry-rmdir_-_perlfunc" }
,
{ category: "Reference", value: "s\/\/\/ - perlfunc", url: "/language/5to6-perlfunc#index-entry-s$SOLIDUS$SOLIDUS$SOLIDUS_-_perlfunc" }
,
{ category: "Reference", value: "say - perlfunc", url: "/language/5to6-perlfunc#index-entry-say_-_perlfunc" }
,
{ category: "Reference", value: "scalar - perlfunc", url: "/language/5to6-perlfunc#index-entry-scalar_-_perlfunc" }
,
{ category: "Reference", value: "seek - perlfunc", url: "/language/5to6-perlfunc#index-entry-seek_-_perlfunc" }
,
{ category: "Reference", value: "seekdir - perlfunc", url: "/language/5to6-perlfunc#index-entry-seekdir_-_perlfunc" }
,
{ category: "Reference", value: "select - perlfunc", url: "/language/5to6-perlfunc#index-entry-select_-_perlfunc" }
,
{ category: "Reference", value: "semget - perlfunc", url: "/language/5to6-perlfunc#index-entry-semget_-_perlfunc" }
,
{ category: "Reference", value: "semop - perlfunc", url: "/language/5to6-perlfunc#index-entry-semop_-_perlfunc" }
,
{ category: "Reference", value: "send - perlfunc", url: "/language/5to6-perlfunc#index-entry-send_-_perlfunc" }
,
{ category: "Reference", value: "setpgrp - perlfunc", url: "/language/5to6-perlfunc#index-entry-setpgrp_-_perlfunc" }
,
{ category: "Reference", value: "setpriority - perlfunc", url: "/language/5to6-perlfunc#index-entry-setpriority_-_perlfunc" }
,
{ category: "Reference", value: "setsockopt - perlfunc", url: "/language/5to6-perlfunc#index-entry-setsockopt_-_perlfunc" }
,
{ category: "Reference", value: "shift - perlfunc", url: "/language/5to6-perlfunc#index-entry-shift_-_perlfunc" }
,
{ category: "Reference", value: "shm* - perlfunc", url: "/language/5to6-perlfunc#index-entry-shm*_-_perlfunc" }
,
{ category: "Reference", value: "shutdown - perlfunc", url: "/language/5to6-perlfunc#index-entry-shutdown_-_perlfunc" }
,
{ category: "Reference", value: "sin - perlfunc", url: "/language/5to6-perlfunc#index-entry-sin_-_perlfunc" }
,
{ category: "Reference", value: "sleep - perlfunc", url: "/language/5to6-perlfunc#index-entry-sleep_-_perlfunc" }
,
{ category: "Reference", value: "sockets - perlfunc", url: "/language/5to6-perlfunc#index-entry-sockets_-_perlfunc" }
,
{ category: "Reference", value: "sort - perlfunc", url: "/language/5to6-perlfunc#index-entry-sort_-_perlfunc" }
,
{ category: "Reference", value: "splice - perlfunc", url: "/language/5to6-perlfunc#index-entry-splice_-_perlfunc" }
,
{ category: "Reference", value: "split - perlfunc", url: "/language/5to6-perlfunc#index-entry-split_-_perlfunc" }
,
{ category: "Reference", value: "sprintf - perlfunc", url: "/language/5to6-perlfunc#index-entry-sprintf_-_perlfunc" }
,
{ category: "Reference", value: "sqrt - perlfunc", url: "/language/5to6-perlfunc#index-entry-sqrt_-_perlfunc" }
,
{ category: "Reference", value: "srand - perlfunc", url: "/language/5to6-perlfunc#index-entry-srand_-_perlfunc" }
,
{ category: "Reference", value: "state - perlfunc", url: "/language/5to6-perlfunc#index-entry-state_-_perlfunc" }
,
{ category: "Reference", value: "study - perlfunc", url: "/language/5to6-perlfunc#index-entry-study_-_perlfunc" }
,
{ category: "Reference", value: "sub - perlfunc", url: "/language/5to6-perlfunc#index-entry-sub_-_perlfunc" }
,
{ category: "Reference", value: "__SUB__ - perlfunc", url: "/language/5to6-perlfunc#index-entry-____SUB_____-_perlfunc" }
,
{ category: "Reference", value: "substr - perlfunc", url: "/language/5to6-perlfunc#index-entry-substr_-_perlfunc" }
,
{ category: "Reference", value: "symlink - perlfunc", url: "/language/5to6-perlfunc#index-entry-symlink_-_perlfunc" }
,
{ category: "Reference", value: "syscall - perlfunc", url: "/language/5to6-perlfunc#index-entry-syscall_-_perlfunc" }
,
{ category: "Reference", value: "sys* - perlfunc", url: "/language/5to6-perlfunc#index-entry-sys*_-_perlfunc" }
,
{ category: "Reference", value: "system - perlfunc", url: "/language/5to6-perlfunc#index-entry-system_-_perlfunc" }
,
{ category: "Reference", value: "syswrite - perlfunc", url: "/language/5to6-perlfunc#index-entry-syswrite_-_perlfunc" }
,
{ category: "Reference", value: "tell - perlfunc", url: "/language/5to6-perlfunc#index-entry-tell_-_perlfunc" }
,
{ category: "Reference", value: "telldir - perlfunc", url: "/language/5to6-perlfunc#index-entry-telldir_-_perlfunc" }
,
{ category: "Reference", value: "tie - perlfunc", url: "/language/5to6-perlfunc#index-entry-tie_-_perlfunc" }
,
{ category: "Reference", value: "time - perlfunc", url: "/language/5to6-perlfunc#index-entry-time_-_perlfunc" }
,
{ category: "Reference", value: "times - perlfunc", url: "/language/5to6-perlfunc#index-entry-times_-_perlfunc" }
,
{ category: "Reference", value: "tr\/\/\/ - perlfunc", url: "/language/5to6-perlfunc#index-entry-tr$SOLIDUS$SOLIDUS$SOLIDUS_-_perlfunc" }
,
{ category: "Reference", value: "truncate - perlfunc", url: "/language/5to6-perlfunc#index-entry-truncate_-_perlfunc" }
,
{ category: "Reference", value: "uc - perlfunc", url: "/language/5to6-perlfunc#index-entry-uc_-_perlfunc" }
,
{ category: "Reference", value: "ucfirst - perlfunc", url: "/language/5to6-perlfunc#index-entry-ucfirst_-_perlfunc" }
,
{ category: "Reference", value: "undef - perlfunc", url: "/language/5to6-perlfunc#index-entry-undef_-_perlfunc" }
,
{ category: "Reference", value: "unlink - perlfunc", url: "/language/5to6-perlfunc#index-entry-unlink_-_perlfunc" }
,
{ category: "Reference", value: "unpack - perlfunc", url: "/language/5to6-perlfunc#index-entry-unpack_-_perlfunc" }
,
{ category: "Reference", value: "unshift - perlfunc", url: "/language/5to6-perlfunc#index-entry-unshift_-_perlfunc" }
,
{ category: "Reference", value: "untie - perlfunc", url: "/language/5to6-perlfunc#index-entry-untie_-_perlfunc" }
,
{ category: "Reference", value: "use - perlfunc", url: "/language/5to6-perlfunc#index-entry-use_-_perlfunc" }
,
{ category: "Reference", value: "utime - perlfunc", url: "/language/5to6-perlfunc#index-entry-utime_-_perlfunc" }
,
{ category: "Reference", value: "values - perlfunc", url: "/language/5to6-perlfunc#index-entry-values_-_perlfunc" }
,
{ category: "Reference", value: "vec - perlfunc", url: "/language/5to6-perlfunc#index-entry-vec_-_perlfunc" }
,
{ category: "Reference", value: "wait - perlfunc", url: "/language/5to6-perlfunc#index-entry-wait_-_perlfunc" }
,
{ category: "Reference", value: "waitpid - perlfunc", url: "/language/5to6-perlfunc#index-entry-waitpid_-_perlfunc" }
,
{ category: "Reference", value: "wantarray - perlfunc", url: "/language/5to6-perlfunc#index-entry-wantarray_-_perlfunc" }
,
{ category: "Reference", value: "warn - perlfunc", url: "/language/5to6-perlfunc#index-entry-warn_-_perlfunc" }
,
{ category: "Reference", value: "write - perlfunc", url: "/language/5to6-perlfunc#index-entry-write_-_perlfunc" }
,
{ category: "Reference", value: "y\/\/\/ - perlfunc", url: "/language/5to6-perlfunc#index-entry-y$SOLIDUS$SOLIDUS$SOLIDUS_-_perlfunc" }
,
{ category: "Reference", value: "√æ (infix)", url: "/language/about#index-entry-infix_√æ-How_to_use_the_√æ_infix" }
,
{ category: "Reference", value: "foo", url: "/language/about#index-entry-foo-foo" }
,
{ category: "Reference", value: "package (::)", url: "/language/packages#index-entry-::_package" }
,
{ category: "Reference", value: "MY (package)", url: "/language/packages#index-entry-MY_(package)" }
,
{ category: "Reference", value: "OUR (package)", url: "/language/packages#index-entry-OUR_(package)" }
,
{ category: "Reference", value: "CORE (package)", url: "/language/packages#index-entry-CORE_(package)" }
,
{ category: "Reference", value: "GLOBAL (package)", url: "/language/packages#index-entry-GLOBAL_(package)" }
,
{ category: "Reference", value: "PROCESS (package)", url: "/language/packages#index-entry-PROCESS_(package)" }
,
{ category: "Reference", value: "COMPILING(package)", url: "/language/packages#index-entry-COMPILING(package)" }
,
{ category: "Reference", value: "CALLER (package)", url: "/language/packages#index-entry-CALLER_(package)" }
,
{ category: "Reference", value: "CALLERS (package)", url: "/language/packages#index-entry-CALLERS_(package)" }
,
{ category: "Reference", value: "DYNAMIC (package)", url: "/language/packages#index-entry-DYNAMIC_(package)" }
,
{ category: "Reference", value: "OUTER (package)", url: "/language/packages#index-entry-OUTER_(package)" }
,
{ category: "Reference", value: "OUTERS (package)", url: "/language/packages#index-entry-OUTERS_(package)" }
,
{ category: "Reference", value: "LEXICAL (package)", url: "/language/packages#index-entry-LEXICAL_(package)" }
,
{ category: "Reference", value: "UNIT (package)", url: "/language/packages#index-entry-UNIT_(package)" }
,
{ category: "Reference", value: "SETTING (package)", url: "/language/packages#index-entry-SETTING_(package)" }
,
{ category: "Reference", value: "PARENT (package)", url: "/language/packages#index-entry-PARENT_(package)" }
,
{ category: "Reference", value: "CLIENT (package)", url: "/language/packages#index-entry-CLIENT_(package)" }
,
{ category: "Reference", value: "interpolating into names", url: "/language/packages#index-entry-interpolating_into_names" }
,
{ category: "Reference", value: "::()", url: "/language/packages#index-entry-::()" }
,
{ category: "Reference", value: "::($c).m", url: "/language/packages#index-entry-::($c).m" }
,
{ category: "Reference", value: "A.\"$m\"()", url: "/language/packages#index-entry-A.\"$m\"()" }
,
{ category: "Reference", value: "CompUnit (Rakudo classes)", url: "/language/modules-core#index-entry-CompUnit_(Rakudo_classes)" }
,
{ category: "Reference", value: "Normalization", url: "/language/unicode#index-entry-Normalization" }
,
{ category: "Reference", value: "NFC", url: "/language/unicode#index-entry-NFC" }
,
{ category: "Reference", value: "UTF8-C8", url: "/language/unicode#index-entry-UTF8-C8" }
,
{ category: "Reference", value: "UTF-8 Clean-8", url: "/language/unicode#index-entry-UTF-8_Clean-8" }
,
{ category: "Reference", value: "\\c[] unicode name", url: "/language/unicode#index-entry-%5cc[]_unicode_name" }
,
{ category: "Reference", value: "command line arguments", url: "/language/create-cli#index-entry-command_line_arguments" }
,
{ category: "Reference", value: "MAIN", url: "/language/create-cli#index-entry-MAIN" }
,
{ category: "Reference", value: "%*SUB-MAIN-OPTS", url: "/language/create-cli#index-entry-$PERCENT_SIGN*SUB-MAIN-OPTS" }
,
{ category: "Reference", value: "named-anywhere", url: "/language/create-cli#index-entry-named-anywhere" }
,
{ category: "Reference", value: "hidden-from-USAGE", url: "/language/create-cli#index-entry-hidden-from-USAGE" }
,
{ category: "Reference", value: "unit (MAIN) (declarator)", url: "/language/create-cli#index-entry-declarator_unit_(MAIN)" }
,
{ category: "Reference", value: "USAGE", url: "/language/create-cli#index-entry-USAGE" }
,
{ category: "Reference", value: "$*USAGE", url: "/language/create-cli#index-entry-$*USAGE" }
,
{ category: "Reference", value: "ARGS-TO-CAPTURE", url: "/language/create-cli#index-entry-ARGS-TO-CAPTURE" }
,
{ category: "Reference", value: "RUN-MAIN", url: "/language/create-cli#index-entry-RUN-MAIN" }
,
{ category: "Reference", value: "GENERATE-USAGE", url: "/language/create-cli#index-entry-GENERATE-USAGE" }
,
{ category: "Reference", value: "Abstract Class", url: "/language/glossary#index-entry-Abstract_Class" }
,
{ category: "Reference", value: "Advent Calendar", url: "/language/glossary#index-entry-Advent_Calendar" }
,
{ category: "Reference", value: "Adverb", url: "/language/glossary#index-entry-Adverb" }
,
{ category: "Reference", value: "Adverbial Pair", url: "/language/glossary#index-entry-Adverbial_Pair" }
,
{ category: "Reference", value: "Allomorph", url: "/language/glossary#index-entry-Allomorph" }
,
{ category: "Reference", value: "Anonymous", url: "/language/glossary#index-entry-Anonymous" }
,
{ category: "Reference", value: "API", url: "/language/glossary#index-entry-API" }
,
{ category: "Reference", value: "Apocalypse", url: "/language/glossary#index-entry-Apocalypse" }
,
{ category: "Reference", value: "Arity", url: "/language/glossary#index-entry-Arity" }
,
{ category: "Reference", value: "ASCII operator", url: "/language/glossary#index-entry-ASCII_operator" }
,
{ category: "Reference", value: "Texas operator", url: "/language/glossary#index-entry-Texas_operator" }
,
{ category: "Reference", value: "Autothreading", url: "/language/glossary#index-entry-Autothreading" }
,
{ category: "Reference", value: "Backtracking", url: "/language/glossary#index-entry-Backtracking" }
,
{ category: "Reference", value: "block", url: "/language/glossary#index-entry-block" }
,
{ category: "Reference", value: "bytecode", url: "/language/glossary#index-entry-bytecode" }
,
{ category: "Reference", value: "Camelia", url: "/language/glossary#index-entry-Camelia" }
,
{ category: "Reference", value: "Colon Pair", url: "/language/glossary#index-entry-Colon_Pair" }
,
{ category: "Reference", value: "Colon List", url: "/language/glossary#index-entry-Colon_List" }
,
{ category: "Reference", value: "Community", url: "/language/glossary#index-entry-Community" }
,
{ category: "Reference", value: "decont", url: "/language/glossary#index-entry-decont" }
,
{ category: "Reference", value: "diffy", url: "/language/glossary#index-entry-diffy" }
,
{ category: "Reference", value: "Exegesis", url: "/language/glossary#index-entry-Exegesis" }
,
{ category: "Reference", value: "fiddly", url: "/language/glossary#index-entry-fiddly" }
,
{ category: "Reference", value: "iffy", url: "/language/glossary#index-entry-iffy" }
,
{ category: "Reference", value: "instance", url: "/language/glossary#index-entry-instance" }
,
{ category: "Reference", value: "Interface", url: "/language/glossary#index-entry-Interface" }
,
{ category: "Reference", value: "IRC", url: "/language/glossary#index-entry-IRC" }
,
{ category: "Reference", value: "ALAP", url: "/language/glossary#index-entry-ALAP" }
,
{ category: "Reference", value: "autopun", url: "/language/glossary#index-entry-autopun" }
,
{ category: "Reference", value: "backlog", url: "/language/glossary#index-entry-backlog" }
,
{ category: "Reference", value: "Bot", url: "/language/glossary#index-entry-Bot" }
,
{ category: "Reference", value: "compunit (glossary)", url: "/language/glossary#index-entry-compunit_(glossary)" }
,
{ category: "Reference", value: "compilation unit", url: "/language/glossary#index-entry-compilation_unit" }
,
{ category: "Reference", value: "DWIM", url: "/language/glossary#index-entry-DWIM" }
,
{ category: "Reference", value: "flap", url: "/language/glossary#index-entry-flap" }
,
{ category: "Reference", value: "fossil", url: "/language/glossary#index-entry-fossil" }
,
{ category: "Reference", value: "FSVO", url: "/language/glossary#index-entry-FSVO" }
,
{ category: "Reference", value: "FTFY", url: "/language/glossary#index-entry-FTFY" }
,
{ category: "Reference", value: "gradual typing", url: "/language/glossary#index-entry-gradual_typing" }
,
{ category: "Reference", value: "IIRC", url: "/language/glossary#index-entry-IIRC" }
,
{ category: "Reference", value: "IMHO", url: "/language/glossary#index-entry-IMHO" }
,
{ category: "Reference", value: "IWBN", url: "/language/glossary#index-entry-IWBN" }
,
{ category: "Reference", value: "LHF", url: "/language/glossary#index-entry-LHF" }
,
{ category: "Reference", value: "LGTM", url: "/language/glossary#index-entry-LGTM" }
,
{ category: "Reference", value: "LTA", url: "/language/glossary#index-entry-LTA" }
,
{ category: "Reference", value: "NST", url: "/language/glossary#index-entry-NST" }
,
{ category: "Reference", value: "Opt", url: "/language/glossary#index-entry-Opt" }
,
{ category: "Reference", value: "PB", url: "/language/glossary#index-entry-PB" }
,
{ category: "Reference", value: "PR", url: "/language/glossary#index-entry-PR" }
,
{ category: "Reference", value: "P5", url: "/language/glossary#index-entry-P5" }
,
{ category: "Reference", value: "P6", url: "/language/glossary#index-entry-P6" }
,
{ category: "Reference", value: "RSN", url: "/language/glossary#index-entry-RSN" }
,
{ category: "Reference", value: "RT", url: "/language/glossary#index-entry-RT" }
,
{ category: "Reference", value: "TIMTOWTDI", url: "/language/glossary#index-entry-TIMTOWTDI" }
,
{ category: "Reference", value: "TMI", url: "/language/glossary#index-entry-TMI" }
,
{ category: "Reference", value: "TMTOWTDI", url: "/language/glossary#index-entry-TMTOWTDI" }
,
{ category: "Reference", value: "UGT", url: "/language/glossary#index-entry-UGT" }
,
{ category: "Reference", value: "WFM", url: "/language/glossary#index-entry-WFM" }
,
{ category: "Reference", value: "WIP", url: "/language/glossary#index-entry-WIP" }
,
{ category: "Reference", value: "WP", url: "/language/glossary#index-entry-WP" }
,
{ category: "Reference", value: "WW", url: "/language/glossary#index-entry-WW" }
,
{ category: "Reference", value: "Lexing", url: "/language/glossary#index-entry-Lexing" }
,
{ category: "Reference", value: "Literal", url: "/language/glossary#index-entry-Literal" }
,
{ category: "Reference", value: "LHS", url: "/language/glossary#index-entry-LHS" }
,
{ category: "Reference", value: "Value", url: "/language/glossary#index-entry-Value" }
,
{ category: "Reference", value: "Mainline", url: "/language/glossary#index-entry-Mainline" }
,
{ category: "Reference", value: "Mayspec", url: "/language/glossary#index-entry-Mayspec" }
,
{ category: "Reference", value: "MoarVM", url: "/language/glossary#index-entry-MoarVM" }
,
{ category: "Reference", value: "Multi-Dispatch", url: "/language/glossary#index-entry-Multi-Dispatch" }
,
{ category: "Reference", value: "MMD", url: "/language/glossary#index-entry-MMD" }
,
{ category: "Reference", value: "multi-method", url: "/language/glossary#index-entry-multi-method" }
,
{ category: "Reference", value: "Niecza", url: "/language/glossary#index-entry-Niecza" }
,
{ category: "Reference", value: "NQP", url: "/language/glossary#index-entry-NQP" }
,
{ category: "Reference", value: "Not Quite Perl", url: "/language/glossary#index-entry-Not_Quite_Perl" }
,
{ category: "Reference", value: "NYI", url: "/language/glossary#index-entry-NYI" }
,
{ category: "Reference", value: "opcode", url: "/language/glossary#index-entry-opcode" }
,
{ category: "Reference", value: "Operator", url: "/language/glossary#index-entry-Operator" }
,
{ category: "Reference", value: "Parse Tree", url: "/language/glossary#index-entry-Parse_Tree" }
,
{ category: "Reference", value: "Parameter", url: "/language/glossary#index-entry-Parameter" }
,
{ category: "Reference", value: "Parrot", url: "/language/glossary#index-entry-Parrot" }
,
{ category: "Reference", value: "PAST", url: "/language/glossary#index-entry-PAST" }
,
{ category: "Reference", value: "Perl", url: "/language/glossary#index-entry-Perl" }
,
{ category: "Reference", value: "PERL", url: "/language/glossary#index-entry-PERL" }
,
{ category: "Reference", value: "POD", url: "/language/glossary#index-entry-POD" }
,
{ category: "Reference", value: "POV", url: "/language/glossary#index-entry-POV" }
,
{ category: "Reference", value: "Propspec", url: "/language/glossary#index-entry-Propspec" }
,
{ category: "Reference", value: "Pull request", url: "/language/glossary#index-entry-Pull_request" }
,
{ category: "Reference", value: "pugs", url: "/language/glossary#index-entry-pugs" }
,
{ category: "Reference", value: "p6y", url: "/language/glossary#index-entry-p6y" }
,
{ category: "Reference", value: "QAST", url: "/language/glossary#index-entry-QAST" }
,
{ category: "Reference", value: "Raku", url: "/language/glossary#index-entry-Raku" }
,
{ category: "Reference", value: "Rakudo", url: "/language/glossary#index-entry-Rakudo" }
,
{ category: "Reference", value: "Reify", url: "/language/glossary#index-entry-Reify" }
,
{ category: "Reference", value: "Repository", url: "/language/glossary#index-entry-Repository" }
,
{ category: "Reference", value: "RHS", url: "/language/glossary#index-entry-RHS" }
,
{ category: "Reference", value: "roast", url: "/language/glossary#index-entry-roast" }
,
{ category: "Reference", value: "role", url: "/language/glossary#index-entry-role" }
,
{ category: "Reference", value: "rule", url: "/language/glossary#index-entry-rule" }
,
{ category: "Reference", value: "rvalue", url: "/language/glossary#index-entry-rvalue" }
,
{ category: "Reference", value: "SAP", url: "/language/glossary#index-entry-SAP" }
,
{ category: "Reference", value: "Semilist", url: "/language/glossary#index-entry-Semilist" }
,
{ category: "Reference", value: "Sigil", url: "/language/glossary#index-entry-Sigil" }
,
{ category: "Reference", value: "Sigilless Variable", url: "/language/glossary#index-entry-Sigilless_Variable" }
,
{ category: "Reference", value: "Spesh", url: "/language/glossary#index-entry-Spesh" }
,
{ category: "Reference", value: "STD", url: "/language/glossary#index-entry-STD" }
,
{ category: "Reference", value: "Stub", url: "/language/glossary#index-entry-Stub" }
,
{ category: "Reference", value: "Symbol", url: "/language/glossary#index-entry-Symbol" }
,
{ category: "Reference", value: "Synopsis", url: "/language/glossary#index-entry-Synopsis" }
,
{ category: "Reference", value: "Syntax Analysis", url: "/language/glossary#index-entry-Syntax_Analysis" }
,
{ category: "Reference", value: "test suite", url: "/language/glossary#index-entry-test_suite" }
,
{ category: "Reference", value: "Thunk", url: "/language/glossary#index-entry-Thunk" }
,
{ category: "Reference", value: "Loose", url: "/language/glossary#index-entry-Loose" }
,
{ category: "Reference", value: "Tight", url: "/language/glossary#index-entry-Tight" }
,
{ category: "Reference", value: "twine", url: "/language/glossary#index-entry-twine" }
,
{ category: "Reference", value: "value", url: "/language/glossary#index-entry-value" }
,
{ category: "Reference", value: "UB", url: "/language/glossary#index-entry-UB" }
,
{ category: "Reference", value: "Value type", url: "/language/glossary#index-entry-Value_type" }
,
{ category: "Reference", value: "Variable", url: "/language/glossary#index-entry-Variable" }
,
{ category: "Reference", value: "Variable Interpolation", url: "/language/glossary#index-entry-Variable_Interpolation" }
,
{ category: "Reference", value: "Virtual Machine", url: "/language/glossary#index-entry-Virtual_Machine" }
,
{ category: "Reference", value: "WAT", url: "/language/glossary#index-entry-WAT" }
,
{ category: "Reference", value: "whitespace", url: "/language/glossary#index-entry-whitespace" }
,
{ category: "Reference", value: "6model", url: "/language/glossary#index-entry-6model" }
,
{ category: "Reference", value: "Python", url: "/language/py-nutshell#index-entry-Python-Control_flow" }
,
{ category: "Reference", value: "Python", url: "/language/py-nutshell#index-entry-Python-Lambdas,_functions_and_subroutines" }
,
{ category: "Reference", value: "Python", url: "/language/py-nutshell#index-entry-Python-List_comprehensions" }
,
{ category: "Reference", value: "Python", url: "/language/py-nutshell#index-entry-Python-Classes_and_objects" }
,
{ category: "Reference", value: "Python", url: "/language/py-nutshell#index-entry-Python-Decorators" }
,
{ category: "Reference", value: "Python", url: "/language/py-nutshell#index-entry-Python-Context_managers" }
,
{ category: "Reference", value: "Python", url: "/language/py-nutshell#index-entry-Python-input" }
,
{ category: "Reference", value: "#| (declarator blocks)", url: "/language/pod#index-entry-declarator_blocks_#|" }
,
{ category: "Reference", value: "#= (declarator blocks)", url: "/language/pod#index-entry-declarator_blocks_#=" }
,
{ category: "Reference", value: "will trait (Phasers)", url: "/language/phasers#index-entry-Phasers__will_trait" }
,
{ category: "Reference", value: "BEGIN (Phasers)", url: "/language/phasers#index-entry-Phasers__BEGIN-BEGIN" }
,
{ category: "Reference", value: "CHECK (Phasers)", url: "/language/phasers#index-entry-Phasers__CHECK-CHECK" }
,
{ category: "Reference", value: "INIT (Phasers)", url: "/language/phasers#index-entry-Phasers__INIT-INIT" }
,
{ category: "Reference", value: "END (Phasers)", url: "/language/phasers#index-entry-Phasers__END-END" }
,
{ category: "Reference", value: "ENTER (Phasers)", url: "/language/phasers#index-entry-Phasers__ENTER-ENTER" }
,
{ category: "Reference", value: "LEAVE (Phasers)", url: "/language/phasers#index-entry-Phasers__LEAVE-LEAVE" }
,
{ category: "Reference", value: "KEEP (Phasers)", url: "/language/phasers#index-entry-Phasers__KEEP-KEEP" }
,
{ category: "Reference", value: "UNDO (Phasers)", url: "/language/phasers#index-entry-Phasers__UNDO-UNDO" }
,
{ category: "Reference", value: "PRE (Phasers)", url: "/language/phasers#index-entry-Phasers__PRE-PRE" }
,
{ category: "Reference", value: "POST (Phasers)", url: "/language/phasers#index-entry-Phasers__POST-POST" }
,
{ category: "Reference", value: "FIRST (Phasers)", url: "/language/phasers#index-entry-Phasers__FIRST-FIRST" }
,
{ category: "Reference", value: "NEXT (Phasers)", url: "/language/phasers#index-entry-Phasers__NEXT-NEXT" }
,
{ category: "Reference", value: "LAST (Phasers)", url: "/language/phasers#index-entry-Phasers__LAST-LAST" }
,
{ category: "Reference", value: "CATCH (Phasers)", url: "/language/phasers#index-entry-Phasers__CATCH-CATCH" }
,
{ category: "Reference", value: "CONTROL (Phasers)", url: "/language/phasers#index-entry-Phasers__CONTROL-CONTROL" }
,
{ category: "Reference", value: "COMPOSE (Phasers)", url: "/language/phasers#index-entry-Phasers__COMPOSE-COMPOSE" }
,
{ category: "Reference", value: "LAST (Asynchronous Phasers)", url: "/language/phasers#index-entry-Asynchronous_Phasers__LAST-LAST" }
,
{ category: "Reference", value: "QUIT (Asynchronous Phasers)", url: "/language/phasers#index-entry-Asynchronous_Phasers__QUIT-QUIT" }
,
{ category: "Reference", value: "CLOSE (Asynchronous Phasers)", url: "/language/phasers#index-entry-Asynchronous_Phasers__CLOSE-CLOSE" }
,
{ category: "Reference", value: "DOC (Asynchronous Phasers)", url: "/language/phasers#index-entry-Asynchronous_Phasers__DOC-DOC" }
,
{ category: "Reference", value: "pragma (v6.x)", url: "/language/pragmas#index-entry-v6.x__pragma" }
,
{ category: "Reference", value: "pragma (MONKEY-GUTS)", url: "/language/pragmas#index-entry-MONKEY-GUTS__pragma" }
,
{ category: "Reference", value: "pragma (MONKEY-SEE-NO-EVAL)", url: "/language/pragmas#index-entry-MONKEY-SEE-NO-EVAL__pragma" }
,
{ category: "Reference", value: "pragma (MONKEY-TYPING)", url: "/language/pragmas#index-entry-MONKEY-TYPING__pragma" }
,
{ category: "Reference", value: "pragma (MONKEY)", url: "/language/pragmas#index-entry-MONKEY__pragma" }
,
{ category: "Reference", value: "dynamic-scope, pragma", url: "/language/pragmas#index-entry-dynamic-scope,_pragma" }
,
{ category: "Reference", value: "pragma (experimental)", url: "/language/pragmas#index-entry-experimental__pragma" }
,
{ category: "Reference", value: "pragma (fatal)", url: "/language/pragmas#index-entry-fatal__pragma" }
,
{ category: "Reference", value: "pragma (internals)", url: "/language/pragmas#index-entry-internals__pragma" }
,
{ category: "Reference", value: "pragma (invocant)", url: "/language/pragmas#index-entry-invocant__pragma" }
,
{ category: "Reference", value: "pragma (isms)", url: "/language/pragmas#index-entry-isms__pragma" }
,
{ category: "Reference", value: "pragma (lib)", url: "/language/pragmas#index-entry-lib__pragma" }
,
{ category: "Reference", value: "pragma (newline)", url: "/language/pragmas#index-entry-newline__pragma" }
,
{ category: "Reference", value: "pragma (nqp)", url: "/language/pragmas#index-entry-nqp__pragma" }
,
{ category: "Reference", value: "pragma (parameters)", url: "/language/pragmas#index-entry-parameters__pragma" }
,
{ category: "Reference", value: "pragma (precompilation)", url: "/language/pragmas#index-entry-precompilation__pragma" }
,
{ category: "Reference", value: "pragma (soft)", url: "/language/pragmas#index-entry-soft__pragma" }
,
{ category: "Reference", value: "pragma (strict)", url: "/language/pragmas#index-entry-strict__pragma" }
,
{ category: "Reference", value: "pragma (trace)", url: "/language/pragmas#index-entry-trace__pragma" }
,
{ category: "Reference", value: "pragma (v6)", url: "/language/pragmas#index-entry-v6__pragma" }
,
{ category: "Reference", value: "pragma (variables)", url: "/language/pragmas#index-entry-variables__pragma" }
,
{ category: "Reference", value: "pragma (worries)", url: "/language/pragmas#index-entry-worries__pragma" }
,
{ category: "Reference", value: "does-ok", url: "/language/testing#index-entry-does-ok-does-ok($variable,_$role,_$description%3F)" }
,
{ category: "Reference", value: "MOP", url: "/language/mop#index-entry-MOP" }
,
{ category: "Reference", value: "Introspection", url: "/language/mop#index-entry-Introspection" }
,
{ category: "Reference", value: "WHAT (syntax)", url: "/language/mop#index-entry-syntax_WHAT-WHAT" }
,
{ category: "Reference", value: "WHICH (syntax)", url: "/language/mop#index-entry-syntax_WHICH-WHICH" }
,
{ category: "Reference", value: "WHO (syntax)", url: "/language/mop#index-entry-syntax_WHO-WHO" }
,
{ category: "Reference", value: "WHERE (syntax)", url: "/language/mop#index-entry-syntax_WHERE-WHERE" }
,
{ category: "Reference", value: "HOW (syntax)", url: "/language/mop#index-entry-syntax_HOW-HOW" }
,
{ category: "Reference", value: "WHY (syntax)", url: "/language/mop#index-entry-syntax_WHY-WHY" }
,
{ category: "Reference", value: "DEFINITE (syntax)", url: "/language/mop#index-entry-syntax_DEFINITE-DEFINITE" }
,
{ category: "Reference", value: "VAR (syntax)", url: "/language/mop#index-entry-syntax_VAR-VAR" }
,
{ category: "Reference", value: "is itemized?", url: "/language/mop#index-entry-is_itemized%3F" }
,
{ category: "Reference", value: "Raku and Perl¬†6 (FAQ) (Rakudo)", url: "/language/faq#index-entry-Rakudo__Raku_and_Perl¬†6_(FAQ)" }
,
{ category: "Reference", value: "v6.d (FAQ)", url: "/language/faq#index-entry-v6.d_(FAQ)" }
,
{ category: "Reference", value: "Rakudo Star DMG binary installer (FAQ)", url: "/language/faq#index-entry-Rakudo_Star_DMG_binary_installer_(FAQ)" }
,
{ category: "Reference", value: "Rakudo Star MSI binary installer (FAQ)", url: "/language/faq#index-entry-Rakudo_Star_MSI_binary_installer_(FAQ)" }
,
{ category: "Reference", value: "Rakudo Star docker image (FAQ)", url: "/language/faq#index-entry-Rakudo_Star_docker_image_(FAQ)" }
,
{ category: "Reference", value: "Rakudo Star for Linux (FAQ)", url: "/language/faq#index-entry-Rakudo_Star_for_Linux_(FAQ)" }
,
{ category: "Reference", value: "Rakudo Star for Windows (FAQ)", url: "/language/faq#index-entry-Rakudo_Star_for_Windows_(FAQ)" }
,
{ category: "Reference", value: "Rakudo Star for Mac (FAQ)", url: "/language/faq#index-entry-Rakudo_Star_for_Mac_(FAQ)" }
,
{ category: "Reference", value: "rakudobrew (FAQ)", url: "/language/faq#index-entry-rakudobrew_(FAQ)" }
,
{ category: "Reference", value: "Books", url: "/language/faq#index-entry-Books" }
,
{ category: "Reference", value: "Specification (FAQ)", url: "/language/faq#index-entry-Specification_(FAQ)" }
,
{ category: "Reference", value: "Ruby Quickstart (FAQ)", url: "/language/faq#index-entry-Ruby_Quickstart_(FAQ)" }
,
{ category: "Reference", value: "CPAN (FAQ)", url: "/language/faq#index-entry-CPAN_(FAQ)" }
,
{ category: "Reference", value: "ecosystem", url: "/language/faq#index-entry-ecosystem" }
,
{ category: "Reference", value: "p6doc (FAQ)", url: "/language/faq#index-entry-p6doc_(FAQ)" }
,
{ category: "Reference", value: "perldoc (FAQ)", url: "/language/faq#index-entry-perldoc_(FAQ)" }
,
{ category: "Reference", value: "Perl¬†5 modules (FAQ)", url: "/language/faq#index-entry-Perl¬†5_modules_(FAQ)" }
,
{ category: "Reference", value: "C and C++ (FAQ)", url: "/language/faq#index-entry-C_and_C++_(FAQ)" }
,
{ category: "Reference", value: "UNIX library functions (FAQ)", url: "/language/faq#index-entry-UNIX_library_functions_(FAQ)" }
,
{ category: "Reference", value: "POSIX (FAQ)", url: "/language/faq#index-entry-POSIX_(FAQ)" }
,
{ category: "Reference", value: "Core standard library (FAQ)", url: "/language/faq#index-entry-Core_standard_library_(FAQ)" }
,
{ category: "Reference", value: "Rakudo Star distribution and compiler-only release (FAQ)", url: "/language/faq#index-entry-Rakudo_Star_distribution_and_compiler-only_release_(FAQ)" }
,
{ category: "Reference", value: "Precompile (FAQ)", url: "/language/faq#index-entry-Precompile_(FAQ)" }
,
{ category: "Reference", value: "Circular dependencies (FAQ)", url: "/language/faq#index-entry-Circular_dependencies_(FAQ)" }
,
{ category: "Reference", value: "Data::Dumper (FAQ)", url: "/language/faq#index-entry-Data::Dumper_(FAQ)" }
,
{ category: "Reference", value: "Junction (FAQ)", url: "/language/faq#index-entry-Junction_(FAQ)" }
,
{ category: "Reference", value: "Sigils (FAQ)", url: "/language/faq#index-entry-Sigils_(FAQ)" }
,
{ category: "Reference", value: "Coroutine (FAQ)", url: "/language/faq#index-entry-Coroutine_(FAQ)" }
,
{ category: "Reference", value: "Perl¬†6 Implementation (FAQ)", url: "/language/faq#index-entry-Perl¬†6_Implementation_(FAQ)" }
,
{ category: "Reference", value: "NQP (FAQ)", url: "/language/faq#index-entry-NQP_(FAQ)" }
,
{ category: "Reference", value: "Perl¬†6 Distribution (FAQ)", url: "/language/faq#index-entry-Perl¬†6_Distribution_(FAQ)" }
,
{ category: "Reference", value: "Rakudo Star release cycle (FAQ)", url: "/language/faq#index-entry-Rakudo_Star_release_cycle_(FAQ)" }
,
{ category: "Reference", value: "non-string keys", url: "/language/hashmap#index-entry-non-string_keys" }
,
{ category: "Reference", value: "object hash", url: "/language/hashmap#index-entry-object_hash" }
,
{ category: "Reference", value: ":{}", url: "/language/hashmap#index-entry-:{}" }
,
{ category: "Reference", value: "is default (Variable)", url: "/type/Variable#index-entry-is_default_(Variable)-trait_is_default" }
,
{ category: "Reference", value: "defined (method)", url: "/type/Mu#index-entry-method_defined" }
,
{ category: "Reference", value: "Inf (definition)", url: "/type/Num#index-entry-Inf_(definition)" }
,
{ category: "Reference", value: "‚àû (definition)", url: "/type/Num#index-entry-‚àû_(definition)" }
,
{ category: "Reference", value: "NaN (definition)", url: "/type/Num#index-entry-NaN_(definition)-NaN" }
,
{ category: "Reference", value: "in-range", url: "/type/Range#index-entry-in-range" }
,
{ category: "Reference", value: "Nil assignment", url: "/type/Nil#index-entry-Nil_assignment" }
,
{ category: "Reference", value: "True", url: "/type/Bool#index-entry-True" }
,
{ category: "Reference", value: "False", url: "/type/Bool#index-entry-False" }
,
{ category: "Reference", value: "Boolean", url: "/type/Bool#index-entry-Boolean" }
,
{ category: "Reference", value: "Grapheme", url: "/type/Cool#index-entry-Grapheme" }
,
{ category: "Reference", value: "return-rw", url: "/type/Routine#index-entry-return-rw-return-rw" }
,
{ category: "Reference", value: "is default (Routine)", url: "/type/Routine#index-entry-is_default_(Routine)" }
,
{ category: "Reference", value: "buf8", url: "/type/Buf#index-entry-buf8" }
,
{ category: "Reference", value: "buf16", url: "/type/Buf#index-entry-buf16" }
,
{ category: "Reference", value: "buf32", url: "/type/Buf#index-entry-buf32" }
,
{ category: "Reference", value: "buf64", url: "/type/Buf#index-entry-buf64" }
,
{ category: "Reference", value: "\\ (sigilless scalar)", url: "/type/Scalar#index-entry-%5c_(sigilless_scalar)" }
,
{ category: "Reference", value: "is default (Attribute)", url: "/type/Attribute#index-entry-is_default_(Attribute)" }
,
{ category: "Reference", value: "Trait is default", url: "/type/Attribute#index-entry-Trait_is_default" }
,
{ category: "Reference", value: "is required (Attribute) (trait)", url: "/type/Attribute#index-entry-trait_is_required_(Attribute)-Trait_is_required" }
,
{ category: "Reference", value: "is DEPRECATED (Attribute) (trait)", url: "/type/Attribute#index-entry-trait_is_DEPRECATED_(Attribute)-trait_is_DEPRECATED" }
,
{ category: "Reference", value: "is rw (Attribute) (trait)", url: "/type/Attribute#index-entry-trait_is_rw_(Attribute)-trait_is_rw" }
,
{ category: "Reference", value: "<->", url: "/type/Block#index-entry-<->" }
,
{ category: "Reference", value: "exponentiation operator", url: "/type/Complex#index-entry-exponentiation_operator" }
,
{ category: "Reference", value: "NativeEndian", url: "/type/Endian#index-entry-NativeEndian" }
,
{ category: "Reference", value: "LittleEndian", url: "/type/Endian#index-entry-LittleEndian" }
,
{ category: "Reference", value: "BigEndian", url: "/type/Endian#index-entry-BigEndian" }
,
{ category: "Reference", value: "Endian", url: "/type/Endian#index-entry-Endian" }
,
{ category: "Reference", value: "v (version)", url: "/type/Version#index-entry-v_(version)" }
,
{ category: "Reference", value: "Signal", url: "/type/Supply#index-entry-Signal" }
,
{ category: "Reference", value: "@ list contextualizer", url: "/type/Any#index-entry-@_list_contextualizer" }
,
{ category: "Reference", value: "$ (item contextualizer)", url: "/type/Any#index-entry-$_(item_contextualizer)" }
,
{ category: "Reference", value: "$*COLLATION", url: "/type/Any#index-entry-$*COLLATION-$*COLLATION" }
,
{ category: "Reference", value: "collation levels", url: "/type/Any#index-entry-collation_levels" }
,
{ category: "Reference", value: "colon pair (Pair)", url: "/type/Pair#index-entry-colon_pair_(Pair)" }
,
{ category: "Reference", value: ":", url: "/type/Pair#index-entry-:" }
,
{ category: "Reference", value: "=>", url: "/type/Pair#index-entry-=>_" }
,
{ category: "Reference", value: ":!", url: "/type/Pair#index-entry-:!" }
,
{ category: "Reference", value: ":$", url: "/type/Pair#index-entry-:$" }
,
{ category: "Reference", value: "colon list (Pair)", url: "/type/Pair#index-entry-colon_list_(Pair)" }
,
{ category: "Reference", value: "Pair", url: "/type/Pair#index-entry-Pair" }
,
{ category: "Reference", value: ":exists", url: "/type/Pair#index-entry-:exists" }
,
{ category: "Reference", value: "IterationEnd", url: "/type/Iterator#index-entry-IterationEnd" }
,
{ category: "Reference", value: "extra named arguments", url: "/type/Method#index-entry-extra_named_arguments" }
,
{ category: "Reference", value: "capture literal (Capture)", url: "/type/Capture#index-entry-capture_literal_(Capture)" }
,
{ category: "Reference", value: "\\() (Capture)", url: "/type/Capture#index-entry-%5c()_(Capture)" }
,
{ category: "Reference", value: "my (Sub)", url: "/type/Sub#index-entry-my_(Sub)" }
,
{ category: "Reference", value: "our (Sub)", url: "/type/Sub#index-entry-our_(Sub)" }
,
{ category: "Reference", value: "trait_mod (declarator)", url: "/type/Sub#index-entry-trait__mod_(declarator)" }
,
{ category: "Reference", value: "signature literal", url: "/type/Signature#index-entry-signature_literal" }
,
{ category: "Reference", value: ":()", url: "/type/Signature#index-entry-:()" }
,
{ category: "Reference", value: "type constraint", url: "/type/Signature#index-entry-type_constraint" }
,
{ category: "Reference", value: "Constraint", url: "/type/Signature#index-entry-Constraint" }
,
{ category: "Reference", value: "anonymous arguments", url: "/type/Signature#index-entry-anonymous_arguments" }
,
{ category: "Reference", value: "where clause", url: "/type/Signature#index-entry-where_clause" }
,
{ category: "Reference", value: ":D (type constraint)", url: "/type/Signature#index-entry-type_constraint_:D" }
,
{ category: "Reference", value: ":U (type constraint)", url: "/type/Signature#index-entry-type_constraint_:U" }
,
{ category: "Reference", value: ":_ (type constraint)", url: "/type/Signature#index-entry-type_constraint_:__" }
,
{ category: "Reference", value: "-->", url: "/type/Signature#index-entry--->" }
,
{ category: "Reference", value: "Return type arrow", url: "/type/Signature#index-entry-Return_type_arrow" }
,
{ category: "Reference", value: "Coercion type", url: "/type/Signature#index-entry-Coercion_type" }
,
{ category: "Reference", value: "*@ (parameter)", url: "/type/Signature#index-entry-parameter_*@" }
,
{ category: "Reference", value: "*% (parameter)", url: "/type/Signature#index-entry-parameter_*$PERCENT_SIGN" }
,
{ category: "Reference", value: "slurpy argument", url: "/type/Signature#index-entry-slurpy_argument" }
,
{ category: "Reference", value: "variadic", url: "/type/Signature#index-entry-variadic" }
,
{ category: "Reference", value: "**@ (parameter)", url: "/type/Signature#index-entry-parameter__**@-Unflattened_slurpy" }
,
{ category: "Reference", value: "+ (Single argument rule slurpy)", url: "/type/Signature#index-entry-+_(Single_argument_rule_slurpy)" }
,
{ category: "Reference", value: "Type capture", url: "/type/Signature#index-entry-Type_capture" }
,
{ category: "Reference", value: "positional argument", url: "/type/Signature#index-entry-positional_argument" }
,
{ category: "Reference", value: "named argument", url: "/type/Signature#index-entry-named_argument" }
,
{ category: "Reference", value: "argument aliases", url: "/type/Signature#index-entry-argument_aliases" }
,
{ category: "Reference", value: "optional argument", url: "/type/Signature#index-entry-optional_argument" }
,
{ category: "Reference", value: "mandatory named argument", url: "/type/Signature#index-entry-mandatory_named_argument" }
,
{ category: "Reference", value: "destructuring arguments", url: "/type/Signature#index-entry-destructuring_arguments" }
,
{ category: "Reference", value: "sub-signature", url: "/type/Signature#index-entry-sub-signature" }
,
{ category: "Reference", value: "Long names", url: "/type/Signature#index-entry-Long_names" }
,
{ category: "Reference", value: "| (parameter)", url: "/type/Signature#index-entry-parameter_|-Capture_parameters" }
,
{ category: "Reference", value: "is copy (trait)", url: "/type/Signature#index-entry-trait_is_copy" }
,
{ category: "Reference", value: "is rw (trait)", url: "/type/Signature#index-entry-trait_is_rw" }
,
{ category: "Reference", value: "is raw (trait)", url: "/type/Signature#index-entry-trait__is_raw" }
,
{ category: "Reference", value: "is readonly (trait)", url: "/type/Signature#index-entry-trait_is_readonly" }
,
{ category: "Reference", value: "$¬¢", url: "/type/Match#index-entry-$¬¢" }
,
{ category: "Reference", value: "Cursor", url: "/type/Match#index-entry-Cursor-Cursor" }
,
{ category: "Reference", value: "Less", url: "/type/Order#index-entry-Less" }
,
{ category: "Reference", value: "Same", url: "/type/Order#index-entry-Same" }
,
{ category: "Reference", value: "More", url: "/type/Order#index-entry-More" }
,
{ category: "Reference", value: "named regex", url: "/type/Regex#index-entry-named_regex" }
,
{ category: "Reference", value: "empty list (())", url: "/type/List#index-entry-()_empty_list" }
,
{ category: "Reference", value: "DESTROY metamodel", url: "/type/Metamodel::Finalization#index-entry-DESTROY_metamodel" }
,
{ category: "Reference", value: "IO::Notification::Change", url: "/type/IO::Notification#index-entry-IO::Notification::Change" }
,
{ category: "Reference", value: "FileChangeEvent (enum)", url: "/type/IO::Notification#index-entry-FileChangeEvent_(enum)" }
,
{ category: "Reference", value: "FileChanged (FileChangeEvent)", url: "/type/IO::Notification#index-entry-FileChanged_(FileChangeEvent)" }
,
{ category: "Reference", value: "FileRenamed (FileChangeEvent)", url: "/type/IO::Notification#index-entry-FileRenamed_(FileChangeEvent)" }
,
{ category: "Reference", value: "symlink (sub)", url: "/type/IO::Path#index-entry-symlink_(sub)" }
,
{ category: "Reference", value: "symlink (method)", url: "/type/IO::Path#index-entry-symlink_(method)" }
,
{ category: "Reference", value: "link (sub)", url: "/type/IO::Path#index-entry-link_(sub)" }
,
{ category: "Reference", value: "link (method)", url: "/type/IO::Path#index-entry-link_(method)" }
,
{ category: "Reference", value: "windows-1252", url: "/type/IO::Handle#index-entry-windows-1252" }
,
{ category: "Reference", value: "windows-1251", url: "/type/IO::Handle#index-entry-windows-1251" }
,
{ category: "Reference", value: "windows-932", url: "/type/IO::Handle#index-entry-windows-932" }
,
{ category: "Reference", value: "iso-8859-1", url: "/type/IO::Handle#index-entry-iso-8859-1" }
,
{ category: "Reference", value: "ascii", url: "/type/IO::Handle#index-entry-ascii" }
,
{ category: "Reference", value: "ShiftJIS", url: "/type/IO::Handle#index-entry-ShiftJIS" }
,
{ category: "Reference", value: "utf16-le", url: "/type/IO::Handle#index-entry-utf16-le" }
,
{ category: "Reference", value: "utf16-be", url: "/type/IO::Handle#index-entry-utf16-be" }
,
{ category: "Reference", value: "utf16", url: "/type/IO::Handle#index-entry-utf16" }
,
{ category: "Reference", value: "utf-16", url: "/type/IO::Handle#index-entry-utf-16" }
,
{ category: "Reference", value: "utf16le", url: "/type/IO::Handle#index-entry-utf16le" }
,
{ category: "Reference", value: "utf16be", url: "/type/IO::Handle#index-entry-utf16be" }
,
{ category: "Reference", value: "SeekFromBeginning", url: "/type/IO::Handle#index-entry-SeekFromBeginning" }
,
{ category: "Reference", value: "SeekFromCurrent", url: "/type/IO::Handle#index-entry-SeekFromCurrent" }
,
{ category: "Reference", value: "SeekFromEnd", url: "/type/IO::Handle#index-entry-SeekFromEnd" }
,
{ category: "Reference", value: "tty", url: "/type/IO::Handle#index-entry-tty" }
,
{ category: "Reference", value: "SlurpySentry", url: "/type/X::AdHoc#index-entry-SlurpySentry" }
,
{ category: "Reference", value: "Encoding::Encoder", url: "/type/Encoding::Registry#index-entry-Encoding::Encoder" }
,
{ category: "Reference", value: "Encoding::Decoder", url: "/type/Encoding::Registry#index-entry-Encoding::Decoder" }
,
{ category: "Reference", value: "::Bind::Slice", url: "/type/X::Bind::Slice#index-entry-::Bind::Slice" }
,
{ category: "Reference", value: "X::Proc::Async::OpenForWriting", url: "/type/X::Proc::Async::OpenForWriting#index-entry-X::Proc::Async::OpenForWriting" }
,
{ category: "Reference", value: "dd", url: "/programs/01-debugging#index-entry-dd" }
,
{ category: "Reference", value: "dumper", url: "/programs/01-debugging#index-entry-dumper" }
,
{ category: "Reference", value: "RAKUDOLIB", url: "/programs/03-environment-variables#index-entry-RAKUDOLIB" }
,
{ category: "Reference", value: "PERL6LIB", url: "/programs/03-environment-variables#index-entry-PERL6LIB" }
,
{ category: "Reference", value: "RAKUDO_MODULE_DEBUG", url: "/programs/03-environment-variables#index-entry-RAKUDO__MODULE__DEBUG" }
,
{ category: "Reference", value: "PERL6_EXCEPTIONS_HANDLER", url: "/programs/03-environment-variables#index-entry-PERL6__EXCEPTIONS__HANDLER" }
,
{ category: "Reference", value: "RAKUDO_NO_DEPRECATIONS", url: "/programs/03-environment-variables#index-entry-RAKUDO__NO__DEPRECATIONS" }
,
{ category: "Reference", value: "RAKUDO_DEPRECATIONS_FATAL", url: "/programs/03-environment-variables#index-entry-RAKUDO__DEPRECATIONS__FATAL" }
,
{ category: "Reference", value: "RAKUDO_VERBOSE_STACKFRAME", url: "/programs/03-environment-variables#index-entry-RAKUDO__VERBOSE__STACKFRAME" }
,
{ category: "Reference", value: "RAKUDO_BACKTRACE_SETTING", url: "/programs/03-environment-variables#index-entry-RAKUDO__BACKTRACE__SETTING" }
,
{ category: "Reference", value: "RAKUDO_PREFIX", url: "/programs/03-environment-variables#index-entry-RAKUDO__PREFIX" }
,
{ category: "Reference", value: "RAKUDO_PRECOMP_DIST", url: "/programs/03-environment-variables#index-entry-RAKUDO__PRECOMP__DIST" }
,
{ category: "Reference", value: "RAKUDO_PRECOMP_LOADING", url: "/programs/03-environment-variables#index-entry-RAKUDO__PRECOMP__LOADING" }
,
{ category: "Reference", value: "RAKUDO_PRECOMP_WITH", url: "/programs/03-environment-variables#index-entry-RAKUDO__PRECOMP__WITH" }
,
{ category: "Reference", value: "RAKUDO_LOG_PRECOMP", url: "/programs/03-environment-variables#index-entry-RAKUDO__LOG__PRECOMP" }
,
{ category: "Reference", value: "RAKUDO_LINE_EDITOR", url: "/programs/03-environment-variables#index-entry-RAKUDO__LINE__EDITOR" }
,
{ category: "Reference", value: "RAKUDO_DISABLE_MULTILINE", url: "/programs/03-environment-variables#index-entry-RAKUDO__DISABLE__MULTILINE" }
,
{ category: "Reference", value: "RAKUDO_HIST", url: "/programs/03-environment-variables#index-entry-RAKUDO__HIST" }
,
{ category: "Reference", value: "RAKUDO_DEFAULT_READ_ELEMS", url: "/programs/03-environment-variables#index-entry-RAKUDO__DEFAULT__READ__ELEMS" }
,
{ category: "Reference", value: "RAKUDO_ERROR_COLOR", url: "/programs/03-environment-variables#index-entry-RAKUDO__ERROR__COLOR" }
,
{ category: "Reference", value: "RAKUDO_MAX_THREADS", url: "/programs/03-environment-variables#index-entry-RAKUDO__MAX__THREADS" }
,
{ category: "Reference", value: "TMPDIR", url: "/programs/03-environment-variables#index-entry-TMPDIR" }
,
{ category: "Reference", value: "TEMP", url: "/programs/03-environment-variables#index-entry-TEMP" }
,
{ category: "Reference", value: "TMP", url: "/programs/03-environment-variables#index-entry-TMP" }
,
{ category: "Reference", value: "PATH", url: "/programs/03-environment-variables#index-entry-PATH" }
,
{ category: "Reference", value: "RAKUDO_SNAPPER", url: "/programs/03-environment-variables#index-entry-RAKUDO__SNAPPER" }
,
{ category: "Reference", value: "p6doc", url: "/programs/02-reading-docs#index-entry-p6doc-INTRODUCTION" }
 ];
          var results = $.ui.autocomplete.filter(items, request.term);
          function trim_results(results, term) {
              var cutoff = 50;
              if (results.length < cutoff) {
                  return results;
              }
              // Prefer exact matches, then starting matches.
              var exacts = [];
              var prefixes = [];
              var rest = [];
              for (var ii = 0; ii <results.length; ii++) {
                  if (results[ii].value.toLowerCase() == term.toLowerCase()) {
                      exacts.push(ii);
                  } else if (results[ii].value.toLowerCase().startsWith(term.toLowerCase())) {
                  prefixes.push(ii);
                  } else {
                      rest.push(ii);
                  }
              }
              var keeps = [];
              var pos = 0;
              while (keeps.length <= cutoff && pos < exacts.length) {
                  keeps.push(exacts[pos++]);
              }
              pos = 0;
              while (keeps.length <= cutoff && pos < prefixes.length) {
                  keeps.push(prefixes[pos++]);
              }
              pos = 0;
              while (keeps.length <= cutoff && pos < rest.length) {
                  keeps.push(rest[pos++]);
              }
              var filtered = [];
              for (pos = 0; pos < results.length; pos++) {
                  if (keeps.indexOf(pos) != -1) {
                      filtered.push(results[pos]);
                  }
              }
              return filtered;
          };
          response(trim_results(results, request.term));
      },
      select: function (event, ui) { window.location.href = ui.item.url; },
      autoFocus: true
  });
});

/*
 * allow for inexact searching via sift4
 * try to restrict usage, and always check the standard
 * search mechanism if sift4 doesn't match
 */
$.extend( $.ui.autocomplete, {
    escapeRegex: function( value ) {
        return value.replace( /[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&" );
    },
    filter: function( array, term ) {
        current_search = term.toLowerCase();

        var search_method = false;
        if (term.match(/^\s*\.[a-zA-Z][a-zA-Z0-9_-]+\s*$/)) {
            search_method = true;
            term = term.substr(1);
        }

        var len = term.length;
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex( term ), "i" );
        var OK_distance = len > 9 ? 4 : len > 6 ? 3 : len > 4 ? 2 : 1;
        return $.grep( array, function( value ) {
            if (search_method && value.category != 'Method') {
                return false;
            }
            if (len >=2 ) {
                var result = sift4( value.value, term, 4, 0);
                if (result <=OK_distance) {
                    return true;
                }
            }

            // Try the old school match
            return matcher.test( value.label || value.value || value );
        } );
    }
} );

function siteSearchUrl( keywords ) {
    return 'https://www.google.com/search?q=site%3Adocs.perl6.org+' + encodeURIComponent( keywords );
}

/*
 * Courtesy https://siderite.blogspot.com/2014/11/super-fast-and-accurate-string-distance.html
 */

// Sift4 - common version
// online algorithm to compute the distance between two strings in O(n)
// maxOffset is the number of characters to search for matching letters
// maxDistance is the distance at which the algorithm should stop computing the value and just exit (the strings are too different anyway)
function sift4(s1, s2, maxOffset, maxDistance) {
    if (!s1||!s1.length) {
        if (!s2) {
            return 0;
        }
        return s2.length;
    }

    if (!s2||!s2.length) {
        return s1.length;
    }

    var l1=s1.length;
    var l2=s2.length;

    var c1 = 0;  //cursor for string 1
    var c2 = 0;  //cursor for string 2
    var lcss = 0;  //largest common subsequence
    var local_cs = 0; //local common substring
    var trans = 0;  //number of transpositions ('ab' vs 'ba')
    var offset_arr=[];  //offset pair array, for computing the transpositions

    while ((c1 < l1) && (c2 < l2)) {
        if (s1.charAt(c1) == s2.charAt(c2)) {
            local_cs++;
            var isTrans=false;
            //see if current match is a transposition
            var i=0;
            while (i<offset_arr.length) {
                var ofs=offset_arr[i];
                if (c1<=ofs.c1 || c2 <= ofs.c2) {
                    // when two matches cross, the one considered a transposition is the one with the largest difference in offsets
                    isTrans=Math.abs(c2-c1)>=Math.abs(ofs.c2-ofs.c1);
                    if (isTrans)
                    {
                        trans++;
                    } else
                    {
                        if (!ofs.trans) {
                            ofs.trans=true;
                            trans++;
                        }
                    }
                    break;
                } else {
                    if (c1>ofs.c2 && c2>ofs.c1) {
                        offset_arr.splice(i,1);
                    } else {
                        i++;
                    }
                }
            }
            offset_arr.push({
                c1:c1,
                c2:c2,
                trans:isTrans
            });
        } else {
            lcss+=local_cs;
            local_cs=0;
            if (c1!=c2) {
                c1=c2=Math.min(c1,c2);  //using min allows the computation of transpositions
            }
            //if matching characters are found, remove 1 from both cursors (they get incremented at the end of the loop)
            //so that we can have only one code block handling matches
            for (var i = 0; i < maxOffset && (c1+i<l1 || c2+i<l2); i++) {
                if ((c1 + i < l1) && (s1.charAt(c1 + i) == s2.charAt(c2))) {
                    c1+= i-1;
                    c2--;
                    break;
                }
                if ((c2 + i < l2) && (s1.charAt(c1) == s2.charAt(c2 + i))) {
                    c1--;
                    c2+= i-1;
                    break;
                }
            }
        }
        c1++;
        c2++;
        if (maxDistance)
        {
            var temporaryDistance=Math.max(c1,c2)-lcss+trans;
            if (temporaryDistance>=maxDistance) return Math.round(temporaryDistance);
        }
        // this covers the case where the last match is on the last token in list, so that it can compute transpositions correctly
        if ((c1 >= l1) || (c2 >= l2)) {
            lcss+=local_cs;
            local_cs=0;
            c1=c2=Math.min(c1,c2);
        }
    }
    lcss+=local_cs;
    return Math.round(Math.max(l1,l2)- lcss +trans); //add the cost of transpositions to the final result
}
